{"version":3,"file":"CollaborationManagerServiceFactory.js","names":["CollaborationManagerService","_Service","_this","_len","arguments","length","args","Array","_key","call","this","__implements__sap_insights_ICardProvider","registered","_exports","_inheritsLoose","_proto","prototype","init","initPromise","Promise","resolve","appComponent","getContext","scopeObject","getCardsChannel","async","default","cardHelper","__ui5_require_async","service","getServiceAsync","connect","providerId","onRetrieveAvailableCards","channel","isEnabled","id","consumers","sharedCards","registerProvider","updateConsumers","error","Log","debug","onConsumerConnected","shareAvailableCards","Object","keys","onConsumerDisconnected","onCardRequested","consumerId","cardId","card","find","callback","onViewUpdate","active","unregisterProvider","unregister","undefined","publishAvailableCards","addCardsToCollaborationManager","cards","parentAppId","entries","push","title","getDesignTimeCard","cardType","_this2","reject","Library","load","name","then","sap","ui","require","_len2","params","_key2","retrieveCard","generatedManifest","getObjectPageCardManifestForPreview","catch","publishCard","descriptorContent","Service","CollaborationManagerServiceFactory","_ServiceFactory","apply","_proto2","createInstance","oServiceContext","instance","getInstance","ServiceFactory","serviceClass"],"sources":["./CollaborationManagerServiceFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type RetrieveCard from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type { RetrieveCardType } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type { CardManifest } from \"sap/insights/CardHelper\";\nimport type CardsChannel from \"sap/insights/CardsChannel\";\nimport type { ICardProvider, SharedCard } from \"sap/insights/CardsChannel\";\nimport Library from \"sap/ui/core/Lib\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type { ServiceContext } from \"types/metamodel_types\";\nimport type AppComponent from \"../AppComponent\";\n\ntype CollaborationManagerSettings = {};\n\nexport type WrappedCard = Pick<NonNullable<SharedCard>, \"card\" | \"title\" | \"callback\">;\n\nexport class CollaborationManagerService extends Service<CollaborationManagerSettings> implements ICardProvider {\n\tinitPromise!: Promise<CollaborationManagerService>;\n\n\t// eslint-disable-next-line camelcase\n\t__implements__sap_insights_ICardProvider = true;\n\n\tprivate channel!: CardsChannel;\n\n\tprivate id!: string;\n\n\tprivate consumers!: Record<string, boolean>;\n\n\tprivate onRetrieveAvailableCards?: () => Promise<void>;\n\n\tprivate sharedCards!: SharedCard[];\n\n\tprivate registered = false;\n\n\tprivate appComponent!: AppComponent;\n\n\tinit(): void {\n\t\tthis.initPromise = new Promise((resolve) => {\n\t\t\tthis.appComponent = this.getContext().scopeObject as AppComponent;\n\t\t\tresolve(this);\n\t\t});\n\t}\n\n\tprivate async getCardsChannel(): Promise<CardsChannel> {\n\t\tconst { default: cardHelper } = await import(\"sap/insights/CardHelper\");\n\t\tconst service = await cardHelper.getServiceAsync(\"UIService\");\n\t\treturn service.getCardsChannel();\n\t}\n\n\tpublic async connect(providerId: string, onRetrieveAvailableCards: () => Promise<void>): Promise<CollaborationManagerService> {\n\t\ttry {\n\t\t\tconst channel = await this.getCardsChannel();\n\t\t\tif (channel.isEnabled()) {\n\t\t\t\tthis.onRetrieveAvailableCards = onRetrieveAvailableCards;\n\t\t\t\tthis.channel = channel;\n\t\t\t\tthis.id = providerId;\n\t\t\t\tthis.consumers = {};\n\t\t\t\tthis.sharedCards = [];\n\t\t\t\tif (this.registered !== true) {\n\t\t\t\t\tawait this.registerProvider();\n\t\t\t\t}\n\t\t\t\tthis.updateConsumers();\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.debug(\"Collaboration Manager connection failed\", error as Error | string);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic async onConsumerConnected(id: string): Promise<number> {\n\t\tif (!this.consumers[id]) {\n\t\t\tthis.consumers[id] = true;\n\t\t\tawait this.onRetrieveAvailableCards?.();\n\t\t\tthis.shareAvailableCards(id);\n\t\t}\n\t\treturn Promise.resolve(Object.keys(this.consumers).length);\n\t}\n\n\tpublic async onConsumerDisconnected(id: string): Promise<number> {\n\t\tif (this.consumers[id]) {\n\t\t\tdelete this.consumers[id];\n\t\t}\n\t\treturn Promise.resolve(Object.keys(this.consumers).length);\n\t}\n\n\tpublic onCardRequested(consumerId: string, cardId: string): SharedCard {\n\t\tconst card = this.sharedCards.find((card) => card?.id === cardId);\n\t\tcard?.callback?.(card.card);\n\t\treturn card;\n\t}\n\n\tpublic async onViewUpdate(active: boolean): Promise<void> {\n\t\t// register / unregister if the status of the home page changed\n\t\tif (this.registered !== active) {\n\t\t\tif (active) {\n\t\t\t\tawait this.registerProvider();\n\t\t\t\tthis.updateConsumers();\n\t\t\t} else {\n\t\t\t\tawait this.unregisterProvider();\n\t\t\t}\n\t\t} else if (this.registered) {\n\t\t\tthis.updateConsumers();\n\t\t}\n\t}\n\n\tprivate async registerProvider(): Promise<void> {\n\t\tif (this.channel) {\n\t\t\tawait this.channel.registerProvider(this.id, this);\n\t\t\tthis.registered = true;\n\t\t}\n\t}\n\n\tpublic async unregisterProvider(): Promise<void> {\n\t\tif (this.channel) {\n\t\t\tawait this.channel.unregister(this.id);\n\t\t\tthis.registered = false;\n\t\t\tthis.consumers = {};\n\t\t\tthis.sharedCards = [];\n\t\t\tthis.onRetrieveAvailableCards = undefined;\n\t\t}\n\t}\n\n\tprivate updateConsumers(): void {\n\t\tthis.shareAvailableCards();\n\t}\n\n\tpublic shareAvailableCards(consumerId = \"*\"): void {\n\t\tthis?.channel?.publishAvailableCards(this.id, this.sharedCards, consumerId);\n\t}\n\n\tpublic addCardsToCollaborationManager(cards: Record<string, WrappedCard>, parentAppId: string): void {\n\t\tthis.sharedCards = [];\n\t\tfor (const [id, card] of Object.entries(cards)) {\n\t\t\tthis.sharedCards.push({\n\t\t\t\tid: id,\n\t\t\t\ttitle: card.title,\n\t\t\t\tparentAppId: parentAppId,\n\t\t\t\tcallback: card.callback,\n\t\t\t\tcard: card.card\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async getDesignTimeCard(cardType: RetrieveCardType): Promise<Record<string, unknown> | undefined> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tLibrary.load({ name: \"sap/cards/ap/common\" })\n\t\t\t\t.then((): void => {\n\t\t\t\t\tsap.ui.require([\"sap/cards/ap/common/services/RetrieveCard\"], async (...params: unknown[]) => {\n\t\t\t\t\t\tconst retrieveCard = params[0] as typeof RetrieveCard;\n\t\t\t\t\t\tlet generatedManifest;\n\t\t\t\t\t\tconst appComponent = this.appComponent;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tgeneratedManifest = await retrieveCard.getObjectPageCardManifestForPreview(appComponent, {\n\t\t\t\t\t\t\t\tcardType: cardType\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tLog.error(error as string);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(generatedManifest);\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tLog.error(error as string);\n\t\t\t\t\treject();\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic publishCard(card: CardManifest): void {\n\t\tthis.channel.publishCard(this.id, { id: card[\"sap.app\"].id, descriptorContent: card }, \"*\");\n\t}\n}\n\nexport default class CollaborationManagerServiceFactory extends ServiceFactory<CollaborationManagerSettings> {\n\tstatic serviceClass = CollaborationManagerService;\n\n\tprivate instance!: CollaborationManagerService;\n\n\tasync createInstance(oServiceContext: ServiceContext<CollaborationManagerSettings>): Promise<CollaborationManagerService> {\n\t\tthis.instance = new CollaborationManagerService(oServiceContext);\n\t\treturn this.instance.initPromise;\n\t}\n\n\tgetInstance(): CollaborationManagerService {\n\t\treturn this.instance;\n\t}\n\n\tshareAvailableCards(): void {\n\t\tthis.instance.shareAvailableCards();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}