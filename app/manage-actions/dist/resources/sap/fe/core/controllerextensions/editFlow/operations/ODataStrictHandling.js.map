{"version":3,"file":"ODataStrictHandling.js","names":["InvocationGrouping","FELibrary","ODataStrictHandling","parameters","this","strictHandlingResolves","strictHandlingWarningMessages","canceled","isCanceled","contexts","length","binding","getBinding","isA","tableAPI","ElementRegistry","filter","element","getContent","getRowBinding","_exports","_proto","prototype","handleOdataStrictHandling","async","operationContextBinding","internalOperationsPromiseResolve","onContextValidation","messages412","arguments","undefined","handlingResolve","strictHandlingPromise","Promise","resolve","push","message","getType","MessageType","Error","Log","warning","additionalText","column","getIdentifierColumn","getContext","getObject","setAdditionalText","events","onResponse","onValidation","isValidated","manageStrictHandlingFails","messageHandling","hasTransitionErrorsOrWarnings","invocationGrouping","ChangeSet","displayMessages","messageModel","Messaging","getMessageModel","messagesInModel","getData","setData","concat","error","messages","actionName","ResourceModelHelper","getLocalizedText","label","appComponent","getDescription","getDescriptionUrl","displayMessageOnMessageBox","displayMessagesOnDialog","messageResolve","promise","resourceModel","getResourceModel","messageText","getMessage","identifierText","getAdditionalText","isMultiContext412","genericChangesetMessage","getText","warningMessageText","cancelButtonTxt","displayedMessage","headerInfoTypeName","getTableDefinition","toString","MessageBox","title","actions","emphasizedAction","onClose","action","messageDialogModel","JSONModel","warningMessage","warningDesc","genericMessage","Message","type","Information","target","persistent","description","StrictDialog","messageObject","prepareMessageViewForDialog","onBeginButtonPress","handleMessageOnValidation","bind","onEndButtonPress","handleMessageOnCancel","open","removeBoundTransitionMessages","removeUnboundTransitionMessages","information","contentWidth","onCancel"],"sources":["./ODataStrictHandling.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport ResourceModelHelper from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport FELibrary from \"sap/fe/core/library\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport ElementRegistry from \"sap/ui/core/ElementRegistry\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport StrictDialog from \"../../dialog/ODataStrictDialog\";\nimport messageHandling from \"../../messageHandler/messageHandling\";\nconst InvocationGrouping = FELibrary.InvocationGrouping;\n\nexport default class ODataStrictHandling {\n\tprivate strictHandlingResolves: ((value: boolean) => void)[] = [];\n\n\tprivate strictHandlingWarningMessages: Message[] = [];\n\n\tprivate canceled = false;\n\n\tprivate readonly tableAPI: TableAPI | undefined;\n\n\tconstructor(\n\t\tprivate readonly parameters: {\n\t\t\tappComponent: AppComponent;\n\t\t\tcontexts: Context[];\n\t\t\tlabel: string;\n\t\t\tinvocationGrouping?: string;\n\t\t\tevents?: {\n\t\t\t\tonResponse?: (messages: Message[]) => void;\n\t\t\t\tonCancel?: Function;\n\t\t\t\tonValidation?: Function;\n\t\t\t};\n\t\t}\n\t) {\n\t\tif (this.parameters.contexts.length) {\n\t\t\tconst binding = this.parameters.contexts[0].getBinding();\n\t\t\tif (binding?.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\tthis.tableAPI = ElementRegistry.filter(\n\t\t\t\t\t(element) => element.isA<TableAPI>(\"sap.fe.macros.table.TableAPI\") && element.getContent()?.getRowBinding() === binding\n\t\t\t\t)[0] as TableAPI | undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync handleOdataStrictHandling(\n\t\toperationContextBinding: ODataContextBinding,\n\t\tinternalOperationsPromiseResolve: Function | undefined,\n\t\tonContextValidation: Function,\n\t\tmessages412: Message[] = []\n\t): Promise<boolean> {\n\t\tlet handlingResolve!: (value: boolean) => void;\n\t\tconst strictHandlingPromise = new Promise<boolean>(function (resolve) {\n\t\t\thandlingResolve = resolve;\n\t\t});\n\t\tthis.strictHandlingResolves.push(handlingResolve);\n\t\t// Find error message in the 412 response and raise warning.\n\t\tif (messages412.filter((message) => message.getType() === MessageType.Error).length) {\n\t\t\tLog.warning(\n\t\t\t\t\"Warning: 412 ('Pre-condition Check Failed due to strict-handling') returns messages of type error but only warning messages are appropriate!\"\n\t\t\t);\n\t\t}\n\t\tlet additionalText = \"\";\n\t\t// If there is more than one context we need the identifier. This would fix if the action is triggered via table chevron\n\t\tif (this.parameters.contexts.length > 1) {\n\t\t\tconst column = this.tableAPI?.getIdentifierColumn();\n\t\t\tif (typeof column === \"string\") {\n\t\t\t\tadditionalText = operationContextBinding.getContext()?.getObject(column);\n\t\t\t}\n\t\t}\n\t\t// set type and subtitle for all warning messages\n\t\tfor (const message of messages412) {\n\t\t\tmessage.setAdditionalText(additionalText);\n\t\t\tthis.strictHandlingWarningMessages.push(message);\n\t\t}\n\t\tthis.parameters.events?.onResponse?.(messages412);\n\t\tinternalOperationsPromiseResolve?.();\n\t\tthis.onContextValidation(strictHandlingPromise, onContextValidation);\n\t\treturn strictHandlingPromise;\n\t}\n\n\tprivate async onContextValidation(strictHandlingPromise: Promise<boolean>, onValidation: Function): Promise<void> {\n\t\tconst isValidated = await strictHandlingPromise;\n\t\tif (isValidated) {\n\t\t\tonValidation();\n\t\t}\n\t}\n\n\tpublic isCanceled = (): boolean => {\n\t\treturn this.canceled;\n\t};\n\n\t/**\n\t * Manages the strict handling fails.\n\t * @returns The promise of the strict handling\n\t */\n\tpublic async manageStrictHandlingFails(): Promise<void> {\n\t\tif (this.strictHandlingResolves.length) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\t(!messageHandling.hasTransitionErrorsOrWarnings() ||\n\t\t\t\t\t\tthis.parameters.invocationGrouping !== InvocationGrouping.ChangeSet) &&\n\t\t\t\t\tthis.strictHandlingWarningMessages.length\n\t\t\t\t) {\n\t\t\t\t\tawait this.displayMessages();\n\t\t\t\t} else {\n\t\t\t\t\tfor (const resolve of this.strictHandlingResolves) {\n\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t}\n\t\t\t\t\tconst messageModel = Messaging.getMessageModel();\n\t\t\t\t\tconst messagesInModel = messageModel.getData();\n\t\t\t\t\tmessageModel.setData(messagesInModel.concat(this.strictHandlingWarningMessages));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tLog.error(\"Re-triggering of strict handling operations failed\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async displayMessages(): Promise<void> {\n\t\tconst messages = this.strictHandlingWarningMessages;\n\t\tif (!messages.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst actionName = ResourceModelHelper.getLocalizedText(this.parameters.label, this.parameters.appComponent);\n\t\treturn messages.length === 1 && !(messages[0].getDescription()?.length || messages[0].getDescriptionUrl()?.length)\n\t\t\t? this.displayMessageOnMessageBox(messages[0], actionName)\n\t\t\t: this.displayMessagesOnDialog(messages, actionName);\n\t}\n\n\tprivate async displayMessageOnMessageBox(message: Message, actionName: string): Promise<void> {\n\t\tlet messageResolve!: Function;\n\t\tconst promise = new Promise<void>((resolve) => {\n\t\t\tmessageResolve = resolve;\n\t\t});\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.appComponent);\n\t\tconst messageText = message.getMessage();\n\t\tconst identifierText = message.getAdditionalText();\n\t\tconst isMultiContext412 = this.parameters.contexts.length > 1;\n\t\tconst genericChangesetMessage = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_SINGLE_MESSAGE_TEXT\");\n\t\tconst warningMessageText =\n\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t? resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGE_TEXT\", [actionName])\n\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP_SINGLE_MESSAGE_TEXT\");\n\t\tlet cancelButtonTxt: string = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\");\n\t\tlet displayedMessage = \"\";\n\t\tif (!isMultiContext412) {\n\t\t\tdisplayedMessage = `${messageText}\\n${resourceModel.getText(\"PROCEED\")}`;\n\t\t} else if (identifierText !== undefined && identifierText !== \"\") {\n\t\t\tcancelButtonTxt =\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? cancelButtonTxt\n\t\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\tconst headerInfoTypeName = this.tableAPI?.getTableDefinition().headerInfoTypeName;\n\t\t\tif (headerInfoTypeName) {\n\t\t\t\tdisplayedMessage = `${headerInfoTypeName.toString()} ${identifierText}: ${messageText}\\n\\n${warningMessageText}`;\n\t\t\t} else {\n\t\t\t\tdisplayedMessage = `${identifierText}: ${messageText}\\n\\n${warningMessageText}`;\n\t\t\t}\n\t\t} else {\n\t\t\tcancelButtonTxt =\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? cancelButtonTxt\n\t\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\tdisplayedMessage = `${messageText}\\n\\n${warningMessageText}`;\n\t\t}\n\t\tif (isMultiContext412 && this.parameters.invocationGrouping === InvocationGrouping.ChangeSet) {\n\t\t\tdisplayedMessage = `${genericChangesetMessage}\\n\\n${displayedMessage}`;\n\t\t}\n\t\tMessageBox.warning(displayedMessage, {\n\t\t\ttitle: resourceModel.getText(\"WARNING\"),\n\t\t\tactions: [actionName, cancelButtonTxt],\n\t\t\temphasizedAction: actionName,\n\t\t\tonClose: (action: string) => {\n\t\t\t\tthis[action === actionName ? \"handleMessageOnValidation\" : \"handleMessageOnCancel\"]();\n\t\t\t\tmessageResolve();\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\tprivate async displayMessagesOnDialog(messages: Message[], actionName: string): Promise<void> {\n\t\tlet messageResolve!: Function;\n\t\tconst promise = new Promise<void>((resolve) => {\n\t\t\tmessageResolve = resolve;\n\t\t});\n\t\tconst messageDialogModel = new JSONModel();\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.appComponent);\n\t\tconst isMultiContext412 = this.parameters.contexts.length > 1;\n\t\tlet warningMessage = \"\";\n\t\tlet warningDesc = \"\";\n\t\tlet cancelButtonTxt: string = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\");\n\t\tif (isMultiContext412) {\n\t\t\tcancelButtonTxt =\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? cancelButtonTxt\n\t\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\twarningMessage = resourceModel.getText(\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? \"C_COMMON_DIALOG_CANCEL_MESSAGES_WARNING\"\n\t\t\t\t\t: \"C_COMMON_DIALOG_SKIP_MESSAGES_WARNING\"\n\t\t\t);\n\t\t\twarningDesc = resourceModel.getText(\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? \"C_COMMON_DIALOG_CANCEL_MESSAGES_TEXT\"\n\t\t\t\t\t: \"C_COMMON_DIALOG_SKIP_MESSAGES_TEXT\",\n\t\t\t\t[actionName]\n\t\t\t);\n\t\t} else {\n\t\t\twarningMessage = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGES_GENERIC_ACTION_WARNING\", [actionName]);\n\t\t}\n\t\tconst genericMessage = new Message({\n\t\t\tmessage: warningMessage,\n\t\t\ttype: MessageType.Information,\n\t\t\ttarget: undefined,\n\t\t\tpersistent: true,\n\t\t\tdescription: warningDesc.length ? warningDesc : undefined\n\t\t});\n\t\tmessages = [genericMessage].concat(messages);\n\t\tmessageDialogModel.setData(messages);\n\t\tnew StrictDialog({\n\t\t\tmessageObject: messageHandling.prepareMessageViewForDialog(messageDialogModel, true, isMultiContext412),\n\t\t\tactionName,\n\t\t\tmessageDialogModel,\n\t\t\tcancelButtonTxt,\n\t\t\tonBeginButtonPress: this.handleMessageOnValidation.bind(this),\n\t\t\tonEndButtonPress: this.handleMessageOnCancel.bind(this),\n\t\t\tonClose: messageResolve\n\t\t}).open();\n\t\treturn promise;\n\t}\n\n\tprivate handleMessageOnValidation(): void {\n\t\tfor (const resolve of this.strictHandlingResolves) {\n\t\t\tresolve(true);\n\t\t}\n\t\tmessageHandling.removeBoundTransitionMessages();\n\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\tthis.strictHandlingWarningMessages = [];\n\t\tthis.parameters.events?.onValidation?.();\n\t}\n\n\tprivate handleMessageOnCancel(): void {\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.appComponent);\n\t\tthis.strictHandlingWarningMessages = [];\n\t\tthis.canceled = true;\n\t\tfor (const resolve of this.strictHandlingResolves) {\n\t\t\tresolve(false);\n\t\t}\n\t\tthis.strictHandlingResolves = [];\n\t\tif (this.parameters.invocationGrouping === InvocationGrouping.ChangeSet) {\n\t\t\tMessageBox.information(resourceModel.getText(\"M_CHANGESET_CANCEL_MESSAGES\"), {\n\t\t\t\tcontentWidth: \"150px\"\n\t\t\t} as object);\n\t\t}\n\t\tthis.parameters.events?.onCancel?.();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}