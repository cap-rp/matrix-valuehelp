{"version":3,"file":"facade.js","names":["async","callActionImport","actionName","model","appComponent","parameters","metaModel","getMetaModel","actionPath","convertedTypes","convertTypes","convertedActionImport","resolvePath","target","convertedAction","action","Error","Operation","execute","callBoundFunction","sFunctionName","context","oModel","Promise","reject","oMetaModel","sFunctionPath","getMetaPath","getPath","oBoundFunction","createBindingContext","_executeFunction","callFunctionImport","bindContext","oFunctionImport","getObject","oFunction","functionToCall","groupId","executionPromise","invoke","submitBatch","getBoundContext","operations"],"sources":["./facade.ts"],"sourcesContent":["import type { ActionImport } from \"@sap-ux/vocabularies-types\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport { convertTypes } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type Control from \"sap/ui/core/Control\";\nimport type MultiValueFieldItem from \"sap/ui/mdc/field/MultiValueFieldItem\";\nimport type { default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type AppComponent from \"../../../AppComponent\";\nimport type MessageHandler from \"../../MessageHandler\";\nimport { type OperationResult } from \"./ODataOperation\";\nimport Operation, { type OperationParametersType } from \"./Operation\";\n\nexport type CallActionParameters = {\n\tparameterValues?: Record<string, string | boolean | number | MultiValueFieldItem[]>[];\n\tlabel?: string;\n\tinvocationGrouping?: string;\n\tskipParameterDialog?: boolean;\n\tbindingParameters?: BindContextParameters;\n\tentitySetName?: string;\n\toDataEvents?: {\n\t\tonODataResponse?: Function;\n\t\tonODataSubmit?: Function;\n\t\tonRequestSideEffects?: Function;\n\t};\n\toperationEvents?: {\n\t\tonResponse?: Function;\n\t};\n\tcontrol?: Control;\n\tisCreateAction?: boolean;\n\tmessageHandler: MessageHandler;\n\tcontrolId?: string;\n\tignoreETag?: boolean;\n\tview: FEView;\n} & {\n\tdefaultValuesExtensionFunction?: string;\n} & {\n\taContexts?: ODataV4Context[];\n\tbindingParameters?: BindContextParameters;\n\tgroupId?: string;\n};\n\n/**\n * Calls an action import.\n * @param actionName The name of the action import to be called\n * @param model An instance of an OData V4 model\n * @param appComponent The AppComponent\n * @param [parameters] Optional, can contain the following attributes:\n * @param [parameters.parameterValues] A map of action parameter names and provided values\n * @param [parameters.label] A human-readable label for the action\n * @param [parameters.showActionParameterDialog] If set and if parameters exist the user retrieves a dialog to fill in parameters, if actionParameters are passed they are shown to the user\n * @param [parameters.onSubmitted] Function which is called once the actions are submitted with an array of promises\n * @param [parameters.defaultParameters] Can contain default parameters from FLP user defaults\n * @param [parameters.ignoreETag] If specified, the action is called without ETag handling\n * @returns Promise resolves with an array of response objects\n */\nasync function callActionImport(\n\tactionName: string,\n\tmodel: ODataModel,\n\tappComponent: AppComponent,\n\tparameters: OperationParametersType\n): Promise<PromiseSettledResult<OperationResult>[]> {\n\tconst metaModel = model.getMetaModel();\n\tconst actionPath = `/${actionName}`;\n\tconst convertedTypes = convertTypes(metaModel);\n\tconst convertedActionImport = convertedTypes.resolvePath<ActionImport | undefined>(actionPath).target,\n\t\tconvertedAction = convertedActionImport?.action;\n\tif (!convertedAction) {\n\t\tthrow new Error(\"Unknown action import\");\n\t}\n\treturn new Operation(appComponent, model, convertedActionImport.action, parameters).execute();\n}\n\nasync function callBoundFunction(sFunctionName: string, context: ODataV4Context, oModel: ODataModel): Promise<ODataV4Context> {\n\tif (!context) {\n\t\treturn Promise.reject(\"Bound functions always requires a context\");\n\t}\n\tconst oMetaModel = oModel.getMetaModel(),\n\t\tsFunctionPath = `${oMetaModel.getMetaPath(context.getPath())}/${sFunctionName}`,\n\t\toBoundFunction = oMetaModel.createBindingContext(sFunctionPath);\n\treturn _executeFunction(sFunctionName, oModel, oBoundFunction as ODataV4Context, context);\n}\n\n/**\n * Calls a function import.\n * @param sFunctionName The name of the function to be called\n * @param oModel An instance of an OData v4 model\n * @returns Promise resolves\n */\nasync function callFunctionImport(sFunctionName: string, oModel: ODataModel): Promise<void | ODataV4Context> {\n\tconst oMetaModel = oModel.getMetaModel(),\n\t\tsFunctionPath = oModel.bindContext(`/${sFunctionName}`).getPath(),\n\t\toFunctionImport = oMetaModel.createBindingContext(`/${oMetaModel.createBindingContext(sFunctionPath)!.getObject(\"$Function\")}/0`);\n\treturn _executeFunction(sFunctionName, oModel, oFunctionImport as ODataV4Context);\n}\nasync function _executeFunction(\n\tsFunctionName: string,\n\toModel: ODataModel,\n\toFunction: ODataV4Context | null,\n\tcontext?: ODataV4Context\n): Promise<ODataV4Context> {\n\tif (!oFunction?.getObject()) {\n\t\treturn Promise.reject(new Error(`Function ${sFunctionName} not found`));\n\t}\n\tconst functionToCall: ODataContextBinding = oModel.bindContext(`${context?.getPath() ?? \"\"}/${sFunctionName}(...)`);\n\tconst groupId = context ? \"functionGroup\" : \"functionImport\";\n\tconst executionPromise = functionToCall.invoke(groupId);\n\toModel.submitBatch(groupId);\n\tawait executionPromise;\n\treturn functionToCall.getBoundContext();\n}\n\n/**\n * Static functions to call OData actions (bound/import) and functions (bound/import)\n * @namespace\n * @experimental This module is only for experimental use! <br/><b>This is only a POC and maybe deleted</b>\n * @since 1.56.0\n */\nconst operations = {\n\tcallActionImport: callActionImport,\n\tcallBoundFunction: callBoundFunction,\n\tcallFunctionImport: callFunctionImport\n};\n\nexport default operations;\n"],"mappings":";;;;0HAyDAA,eAAeC,EACdC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAYH,EAAMI,eACxB,MAAMC,EAAa,IAAIN,IACvB,MAAMO,EAAiBC,EAAaJ,GACpC,MAAMK,EAAwBF,EAAeG,YAAsCJ,GAAYK,OAC9FC,EAAkBH,GAAuBI,OAC1C,IAAKD,EAAiB,CACrB,MAAM,IAAIE,MAAM,wBACjB,CACA,OAAO,IAAIC,EAAUb,EAAcD,EAAOQ,EAAsBI,OAAQV,GAAYa,SACrF,CAEAlB,eAAemB,EAAkBC,EAAuBC,EAAyBC,GAChF,IAAKD,EAAS,CACb,OAAOE,QAAQC,OAAO,4CACvB,CACA,MAAMC,EAAaH,EAAOf,eACzBmB,EAAgB,GAAGD,EAAWE,YAAYN,EAAQO,cAAcR,IAChES,EAAiBJ,EAAWK,qBAAqBJ,GAClD,OAAOK,EAAiBX,EAAeE,EAAQO,EAAkCR,EAClF,CAQArB,eAAegC,EAAmBZ,EAAuBE,GACxD,MAAMG,EAAaH,EAAOf,eACzBmB,EAAgBJ,EAAOW,YAAY,IAAIb,KAAiBQ,UACxDM,EAAkBT,EAAWK,qBAAqB,IAAIL,EAAWK,qBAAqBJ,GAAgBS,UAAU,kBACjH,OAAOJ,EAAiBX,EAAeE,EAAQY,EAChD,CACAlC,eAAe+B,EACdX,EACAE,EACAc,EACAf,GAEA,IAAKe,GAAWD,YAAa,CAC5B,OAAOZ,QAAQC,OAAO,IAAIR,MAAM,YAAYI,eAC7C,CACA,MAAMiB,EAAsCf,EAAOW,YAAY,GAAGZ,GAASO,WAAa,MAAMR,UAC9F,MAAMkB,EAAUjB,EAAU,gBAAkB,iBAC5C,MAAMkB,EAAmBF,EAAeG,OAAOF,GAC/ChB,EAAOmB,YAAYH,SACbC,EACN,OAAOF,EAAeK,iBACvB,CAQA,MAAMC,EAAa,CAClB1C,iBAAkBA,EAClBkB,kBAAmBA,EACnBa,mBAAoBA,GACnB,OAEaW,CAAU","ignoreList":[]}