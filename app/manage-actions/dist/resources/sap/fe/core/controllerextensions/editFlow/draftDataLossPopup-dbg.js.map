{"version":3,"names":["NavigationType","DraftDataLossOptions","dataLossDialog","DraftDataLossDialog","silentlyKeepDraftOnForwardNavigation","pageController","oManifest","getAppComponent","getManifestEntry","app","processFclMode","draftAdminData","fnCancelFunction","oController","processFunctionForDrafts","bSkipBindingToView","context","hiddenDraft","CreationDateTime","LastChangeDateTime","editFlow","isDocumentModified","open","then","selectedKey","draftDataLossPopup","handleDialogSelection","processNoActiveEntityMode","navigationType","bSilentlyKeepDraftOnForwardNavigation","EditState","isEditStateDirty","BackNavigation","discardDraft","error","Log","ForwardNavigation","processEditingDraftForExistingEntity","oContext","mParameters","skipDiscardPopover","skipBindingToView","cancelDocument","processEditStateDirty","processDraftAdminData","fnProcessFunction","arguments","length","undefined","hasActiveEntity","collaborationConnected","collaborativeDraft","isConnected","disconnect","_len","args","Array","_key","apply","getRootViewController","isFclEnabled","processDataLossOrDraftDiscardConfirmation","alwaysShowInHiddenDraft","oView","getView","oModel","getBindingContext","getModel","oMetaModel","getMetaModel","viewData","getViewData","contextPath","entitySet","isDraftRoot","getObject","bIsEditable","CommonUtils","getIsEditable","originalContext","draftRootPath","getPath","ModelHelper","getDraftRootPath","bindContext","$expand","getBoundContext","getEnvironmentCapabilities","getCapabilities","HiddenDraft","enabled","backNavShowsDialog","getRouterProxy","checkIfBackExitsApp","isDeleted","requestProperty","getProperty","oError","saveDocument","controller","hasInitialContext","isA","_saveDocument","params","skipBackNavigation","Save","savedContext","catch","RecommendationDialogDecision","Continue","close","Keep","Discard","discardedDraft"],"sourceRoot":".","sources":["draftDataLossPopup.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport EditState from \"sap/fe/core/helpers/EditState\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type ObjectPageControllerController from \"sap/fe/templates/ObjectPage/ObjectPageController.controller\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport DraftDataLossDialog from \"../../controls/DataLossOrDraftDiscard/DraftDataLossDialog\";\nimport { RecommendationDialogDecision } from \"../../controls/Recommendations/ConfirmRecommendationDialog\";\nimport type { HiddenDraft } from \"../../converters/ManifestSettings\";\n\n/* Enum for navigation types */\nenum NavigationType {\n\tBackNavigation = \"BackNavigation\",\n\tForwardNavigation = \"ForwardNavigation\"\n}\n\n/* Enum types for the data loss dialog options */\nenum DraftDataLossOptions {\n\tSave = \"draftDataLossOptionSave\",\n\tKeep = \"draftDataLossOptionKeep\",\n\tDiscard = \"draftDataLossOptionDiscard\"\n}\n\ntype DraftAdministrativeData = {\n\tCreationDateTime: Date;\n\tLastChangeDateTime: Date;\n};\n\n/*Create the data loss dialog*/\nconst dataLossDialog = new DraftDataLossDialog(\"fe::DraftDataLossPopup\");\n\n/**\n * The method checks whether an optional parameter in the manifest is set to silently keep the draft in case a forward navigation is triggered.\n * @param pageController The reference to the current PageController instance\n * @returns Boolean value with true or false to silently keep the draft\n */\nfunction silentlyKeepDraftOnForwardNavigation(pageController: PageController): boolean {\n\tconst oManifest = pageController.getAppComponent().getManifestEntry(\"sap.fe\");\n\treturn oManifest?.app?.silentlyKeepDraftOnForwardNavigation || false;\n}\n\n/**\n * Logic to process the FCL mode.\n * @param draftAdminData Admin data\n * @param fnCancelFunction The cancel function\n * @param oController The current controller referenced\n * @param processFunctionForDrafts The function to process the handler\n * @param bSkipBindingToView The optional parameter to skip the binding to the view\n * @param context The context to be used for the draft operation\n * @param hiddenDraft Boolean value which mentions if hidden draft is enabled or not\n * @returns Nothing\n */\nasync function processFclMode(\n\tdraftAdminData: DraftAdministrativeData,\n\tfnCancelFunction: Function,\n\toController: PageController,\n\tprocessFunctionForDrafts: Function,\n\tbSkipBindingToView?: boolean,\n\tcontext?: ODataV4Context,\n\thiddenDraft?: boolean\n): Promise<void> {\n\t// The application is running in FCL mode so in this case we fall back to\n\t// the old logic since the dirty state handling is not properly working\n\t// for FCL.\n\tif (draftAdminData.CreationDateTime === draftAdminData.LastChangeDateTime && !oController.editFlow.isDocumentModified()) {\n\t\tprocessFunctionForDrafts();\n\t} else {\n\t\treturn dataLossDialog\n\t\t\t.open(oController)\n\t\t\t.then((selectedKey) =>\n\t\t\t\tdraftDataLossPopup.handleDialogSelection(\n\t\t\t\t\tselectedKey as string,\n\t\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\t\tfnCancelFunction,\n\t\t\t\t\toController,\n\t\t\t\t\tbSkipBindingToView,\n\t\t\t\t\tcontext,\n\t\t\t\t\thiddenDraft\n\t\t\t\t)\n\t\t\t);\n\t}\n}\n\n/**\n * Logic to process the mode with no active entity.\n * @param draftAdminData Admin data\n * @param fnCancelFunction The cancel function\n * @param oController The current controller referenced\n * @param processFunctionForDrafts The function to process the handler\n * @param navigationType The navigation type for which the function should be called\n * @param bSilentlyKeepDraftOnForwardNavigation The parameter to determine whether to skip the popup appearance in forward case\n * @param bSkipBindingToView The optional parameter to skip the binding to the view\n * @param context The context to be used for the draft operations\n * @param hiddenDraft Boolean value which mentions if hidden draft is enabled or not\n * @returns Nothing\n */\nasync function processNoActiveEntityMode(\n\tdraftAdminData: DraftAdministrativeData,\n\tfnCancelFunction: Function,\n\toController: PageController,\n\tprocessFunctionForDrafts: Function,\n\tnavigationType: NavigationType,\n\tbSilentlyKeepDraftOnForwardNavigation: boolean,\n\tbSkipBindingToView?: boolean,\n\tcontext?: ODataV4Context,\n\thiddenDraft?: boolean\n): Promise<void> {\n\t// There is no active entity so, we are editing either newly created data or\n\t// a draft which has never been saved to active version\n\t// Since we want to react differently in the two situations, we have to check the\n\t// dirty state\n\tif (EditState.isEditStateDirty()) {\n\t\tif (\n\t\t\tdraftAdminData.CreationDateTime === draftAdminData.LastChangeDateTime &&\n\t\t\t!oController.editFlow.isDocumentModified() &&\n\t\t\tnavigationType === NavigationType.BackNavigation\n\t\t) {\n\t\t\t// in case we have untouched changes for the draft and a \"back\"\n\t\t\t// navigation we can silently discard the draft again\n\t\t\t// eslint-disable-next-line promise/no-nesting\n\t\t\ttry {\n\t\t\t\tawait draftDataLossPopup.discardDraft(oController, bSkipBindingToView, context);\n\t\t\t\tprocessFunctionForDrafts();\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.error(\"Error while canceling the document\", error as string);\n\t\t\t}\n\t\t} else if (navigationType === NavigationType.ForwardNavigation && bSilentlyKeepDraftOnForwardNavigation) {\n\t\t\t// In case we have a \"forward navigation\" and an additional parameter set in the manifest\n\t\t\t// we \"silently\" keep the draft\n\t\t\tprocessFunctionForDrafts();\n\t\t} else {\n\t\t\t// In this case data is being changed or a forward navigation is triggered\n\t\t\t// and, we always want to show the data loss dialog on navigation\n\t\t\treturn dataLossDialog\n\t\t\t\t.open(oController)\n\t\t\t\t.then((selectedKey) =>\n\t\t\t\t\tdraftDataLossPopup.handleDialogSelection(\n\t\t\t\t\t\tselectedKey as string,\n\t\t\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\t\t\tfnCancelFunction,\n\t\t\t\t\t\toController,\n\t\t\t\t\t\tbSkipBindingToView,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\thiddenDraft\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t}\n\t} else {\n\t\t// We are editing a draft which has been created earlier but never saved to active\n\t\t// version and since the edit state is not dirty, there have been no user changes\n\t\t// so in this case we want to silently navigate and do nothing\n\t\tprocessFunctionForDrafts();\n\t}\n}\n\n/**\n * Logic to process the draft editing for existing entity.\n * @param oController The current controller referenced.\n * @param oContext The context of the current call\n * @param processFunctionForDrafts The function to process the handler\n * @param navigationType The navigation type for which the function should be called\n */\nasync function processEditingDraftForExistingEntity(\n\toController: PageController,\n\toContext: ODataV4Context,\n\tprocessFunctionForDrafts: Function,\n\tnavigationType: NavigationType\n): Promise<void> {\n\t// We are editing a draft for an existing active entity\n\t// The CreationDateTime and LastChangeDateTime are equal, so this draft was\n\t// never saved before, hence we're currently editing a newly created draft for\n\t// an existing active entity for the first time.\n\t// Also, there have so far been no changes made to the draft and in this\n\t// case we want to silently navigate and delete the draft in case of a back\n\t// navigation but in case of a forward navigation we want to silently keep it!\n\tif (navigationType === NavigationType.BackNavigation) {\n\t\tconst mParameters = {\n\t\t\tskipDiscardPopover: true,\n\t\t\tskipBindingToView: true\n\t\t};\n\n\t\ttry {\n\t\t\tawait oController.editFlow.cancelDocument(oContext, mParameters);\n\t\t\tprocessFunctionForDrafts();\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while canceling the document\", error as Error);\n\t\t}\n\t} else {\n\t\t// In case of a forward navigation we silently keep the draft and only\n\t\t// execute the followup function.\n\t\tprocessFunctionForDrafts();\n\t}\n}\n\n/**\n * Logic to process the context when the edit state is in dirty mode.\n * @param oController The current controller referenced.\n * @param fnCancelFunction The cancel function\n * @param processFunctionForDrafts The function to process the handler\n * @param navigationType The navigation type for which the function should be called\n * @param bSilentlyKeepDraftOnForwardNavigation The parameter to determine whether to skip the popup appearance in forward case\n * @param bSkipBindingToView The optional parameter to skip the binding to the view.\n * @param context The context to be used for the draft operations\n * @param hiddenDraft Boolean value which mentions if hidden draft is enabled or not\n * @returns Nothing\n */\nasync function processEditStateDirty(\n\toController: PageController,\n\tfnCancelFunction: Function,\n\tprocessFunctionForDrafts: Function,\n\tnavigationType: NavigationType,\n\tbSilentlyKeepDraftOnForwardNavigation: boolean,\n\tbSkipBindingToView?: boolean,\n\tcontext?: ODataV4Context,\n\thiddenDraft?: boolean\n): Promise<void> {\n\tif (navigationType === NavigationType.ForwardNavigation && bSilentlyKeepDraftOnForwardNavigation) {\n\t\t// In case we have a \"forward navigation\" and an additional parameter set in the manifest\n\t\t// we \"silently\" keep the draft\n\t\tprocessFunctionForDrafts();\n\t} else {\n\t\t// The CreationDateTime and LastChangeDateTime are NOT equal, so we are currently editing\n\t\t// an existing draft and need to distinguish depending on if any changes\n\t\t// have been made in the current editing session or not\n\t\t// Changes have been made in the current editing session, so we want\n\t\t// to show the data loss dialog and let the user decide\n\t\treturn dataLossDialog\n\t\t\t.open(oController)\n\t\t\t.then((selectedKey) =>\n\t\t\t\tdraftDataLossPopup.handleDialogSelection(\n\t\t\t\t\tselectedKey as string,\n\t\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\t\tfnCancelFunction,\n\t\t\t\t\toController,\n\t\t\t\t\tbSkipBindingToView,\n\t\t\t\t\tcontext,\n\t\t\t\t\thiddenDraft\n\t\t\t\t)\n\t\t\t);\n\t}\n}\n\n/**\n * Logic to process the admin data.\n * @param draftAdminData Admin data\n * @param fnProcessFunction The function to process the handler\n * @param fnCancelFunction The cancel function\n * @param context Context\n * @param oController The current controller referenced\n * @param bSkipBindingToView The optional parameter to skip the binding to the view\n * @param navigationType The navigation type for which the function should be called\n * @param hasActiveEntity Boolean value which mentions if root context has active entity or not\n * @param hiddenDraft Boolean value which mentions if hidden draft is enabled or not\n * @returns Nothing\n */\nasync function processDraftAdminData(\n\tdraftAdminData: DraftAdministrativeData,\n\tfnProcessFunction: Function,\n\tfnCancelFunction: Function,\n\tcontext: ODataV4Context,\n\toController: PageController,\n\tbSkipBindingToView?: boolean,\n\tnavigationType: NavigationType = NavigationType.BackNavigation,\n\thasActiveEntity?: boolean,\n\thiddenDraft?: boolean\n): Promise<void> {\n\tconst collaborationConnected = oController.collaborativeDraft.isConnected();\n\tconst processFunctionForDrafts = !collaborationConnected\n\t\t? fnProcessFunction\n\t\t: function (...args: unknown[]): void {\n\t\t\t\toController.collaborativeDraft.disconnect();\n\t\t\t\tfnProcessFunction.apply(null, ...args);\n\t\t  };\n\n\tconst bSilentlyKeepDraftOnForwardNavigation = silentlyKeepDraftOnForwardNavigation(oController);\n\tif (draftAdminData) {\n\t\tif (oController.getAppComponent().getRootViewController().isFclEnabled()) {\n\t\t\tawait processFclMode(\n\t\t\t\tdraftAdminData,\n\t\t\t\tfnCancelFunction,\n\t\t\t\toController,\n\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\tbSkipBindingToView,\n\t\t\t\tcontext,\n\t\t\t\thiddenDraft\n\t\t\t);\n\t\t} else if (!hasActiveEntity) {\n\t\t\tprocessNoActiveEntityMode(\n\t\t\t\tdraftAdminData,\n\t\t\t\tfnCancelFunction,\n\t\t\t\toController,\n\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\tnavigationType,\n\t\t\t\tbSilentlyKeepDraftOnForwardNavigation,\n\t\t\t\tbSkipBindingToView,\n\t\t\t\tundefined,\n\t\t\t\thiddenDraft\n\t\t\t);\n\t\t} else if (\n\t\t\tdraftAdminData.CreationDateTime === draftAdminData.LastChangeDateTime &&\n\t\t\t(!hiddenDraft || (hiddenDraft && !oController.editFlow.isDocumentModified()))\n\t\t) {\n\t\t\tprocessEditingDraftForExistingEntity(oController, context, processFunctionForDrafts, navigationType);\n\t\t} else if (EditState.isEditStateDirty()) {\n\t\t\tprocessEditStateDirty(\n\t\t\t\toController,\n\t\t\t\tfnCancelFunction,\n\t\t\t\tprocessFunctionForDrafts,\n\t\t\t\tnavigationType,\n\t\t\t\tbSilentlyKeepDraftOnForwardNavigation,\n\t\t\t\tbSkipBindingToView,\n\t\t\t\tcontext,\n\t\t\t\thiddenDraft\n\t\t\t);\n\t\t} else {\n\t\t\t// The user started editing the existing draft but did not make any changes\n\t\t\t// in the current editing session, so in this case we do not want\n\t\t\t// to show the data loss dialog but just keep the draft\n\t\t\tprocessFunctionForDrafts();\n\t\t}\n\t} else {\n\t\tfnProcessFunction();\n\t}\n}\n\n/**\n * The general handler in which the individual steps are called.\n * @param fnProcessFunction\n * @param fnCancelFunction\n * @param oContext\n * @param oController\n * @param bSkipBindingToView\n * @param navigationType\n * @param alwaysShowInHiddenDraft\n */\nasync function processDataLossOrDraftDiscardConfirmation(\n\tfnProcessFunction: Function,\n\tfnCancelFunction: Function,\n\toContext: ODataV4Context,\n\toController: PageController,\n\tbSkipBindingToView?: boolean,\n\tnavigationType: NavigationType = NavigationType.BackNavigation,\n\talwaysShowInHiddenDraft?: boolean\n): Promise<void> {\n\tconst oView = oController.getView();\n\tconst oModel = oView.getBindingContext().getModel();\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst viewData = oView.getViewData() as { entitySet?: string; contextPath?: string };\n\tconst contextPath = viewData.contextPath || (viewData.entitySet ? `/${viewData.entitySet}` : undefined);\n\tconst isDraftRoot = contextPath ? !!oMetaModel.getObject(`${contextPath}@com.sap.vocabularies.Common.v1.DraftRoot`) : false;\n\tconst bIsEditable = CommonUtils.getIsEditable(oView);\n\tconst originalContext = oContext;\n\tlet draftRootPath = oContext.getPath();\n\tif (!isDraftRoot) {\n\t\tdraftRootPath = ModelHelper.getDraftRootPath(oContext) ?? draftRootPath;\n\t\toContext = oModel.bindContext(draftRootPath, undefined, { $expand: \"DraftAdministrativeData\" }).getBoundContext();\n\t}\n\tconst hiddenDraft = (oController.getAppComponent().getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft)\n\t\t?.enabled;\n\t// Shouldn't display data loss popover on shell back navigation from sub-object pages (unless there's no page before in the history because of deep linking)\n\t// or when object page is in display mode, or when the object is deleted\n\tconst backNavShowsDialog =\n\t\tisDraftRoot || oController.getAppComponent().getRouterProxy().checkIfBackExitsApp() || (hiddenDraft && alwaysShowInHiddenDraft);\n\tif (originalContext.isDeleted() || (!backNavShowsDialog && navigationType === NavigationType.BackNavigation) || !bIsEditable) {\n\t\tfnProcessFunction();\n\t} else {\n\t\ttry {\n\t\t\t// The following 3 properties are needed to determine the state of the draft, so we ensure they are loaded\n\t\t\tawait oContext.requestProperty([\n\t\t\t\t\"DraftAdministrativeData/CreationDateTime\",\n\t\t\t\t\"DraftAdministrativeData/LastChangeDateTime\",\n\t\t\t\t\"HasActiveEntity\"\n\t\t\t]);\n\t\t\tconst draftAdminData = oContext.getObject(\"DraftAdministrativeData\");\n\t\t\tawait processDraftAdminData(\n\t\t\t\tdraftAdminData,\n\t\t\t\tfnProcessFunction,\n\t\t\t\tfnCancelFunction,\n\t\t\t\thiddenDraft ? originalContext : oContext,\n\t\t\t\toController,\n\t\t\t\tbSkipBindingToView,\n\t\t\t\tnavigationType,\n\t\t\t\toContext.getProperty(\"HasActiveEntity\"),\n\t\t\t\thiddenDraft\n\t\t\t);\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"Cannot retrieve draftDataContext information\", oError as string);\n\t\t\tfnProcessFunction();\n\t\t}\n\t}\n}\n\n/**\n * Saves the document. If the controller is of type ObjectPage, then internal _saveDocument is called, otherwise saveDocument\n * from EditFlow is called.\n * @param controller Controller of the current view\n * @param context The context to be used for the draft operations\n * @param skipBindingToView The parameter to skip the binding to the view\n * @returns A promise resolved if the save was successful\n */\nasync function saveDocument(controller: PageController, context?: ODataV4Context, skipBindingToView?: boolean): Promise<unknown> {\n\tconst hasInitialContext = context !== undefined;\n\tcontext = context ?? controller.getView().getBindingContext();\n\tif (!hasInitialContext && controller.isA<ObjectPageControllerController>(\"sap.fe.templates.ObjectPage.ObjectPageController\")) {\n\t\treturn controller._saveDocument(skipBindingToView);\n\t} else {\n\t\treturn controller.editFlow.saveDocument(context, { skipBindingToView });\n\t}\n}\n\n/**\n * Discards the draft.\n * @param controller Controller of the current view\n * @param skipBindingToView The parameter to skip the binding to the view\n * @param context The context to be used for the draft operations\n * @param hiddenDraft Boolean value which mentions if hidden draft is enabled or not\n * @returns A promise resolved if cancelDocument was successful\n */\nasync function discardDraft(\n\tcontroller: PageController,\n\tskipBindingToView: boolean | undefined,\n\tcontext?: ODataV4Context,\n\thiddenDraft?: boolean\n): Promise<unknown> {\n\tcontext = context ?? controller.getView().getBindingContext();\n\tconst params = {\n\t\tskipBackNavigation: hiddenDraft && !context.getProperty(\"HasActiveEntity\") ? false : true,\n\t\tskipDiscardPopover: true,\n\t\tskipBindingToView: skipBindingToView !== undefined ? skipBindingToView : true\n\t};\n\treturn controller.editFlow.cancelDocument(context, params);\n}\n\n/**\n * Executes the follow-up functions after an option was selected in the data loss dialog.\n * @param selectedKey The key of the selected option from the data loss dialog\n * @param processFunctionForDrafts The function to process the handler\n * @param fnCancelFunction The function to process the handler\n * @param controller Controller of the current view\n * @param skipBindingToView The parameter to skip the binding to the view\n * @param context The context to be used for the binding\n * @param hiddenDraft Boolean value which mentions if hidden draft is enabled or not\n */\nfunction handleDialogSelection(\n\tselectedKey: string,\n\tprocessFunctionForDrafts: Function,\n\tfnCancelFunction: Function,\n\tcontroller: PageController,\n\tskipBindingToView: boolean | undefined,\n\tcontext?: ODataV4Context,\n\thiddenDraft?: boolean\n): void {\n\tswitch (selectedKey) {\n\t\tcase DraftDataLossOptions.Save:\n\t\t\tdraftDataLossPopup\n\t\t\t\t.saveDocument(controller, context, skipBindingToView)\n\t\t\t\t.then((savedContext?) => processFunctionForDrafts(savedContext))\n\t\t\t\t.catch(function (error: string | undefined) {\n\t\t\t\t\tif (error === RecommendationDialogDecision.Continue) {\n\t\t\t\t\t\treturn fnCancelFunction();\n\t\t\t\t\t}\n\t\t\t\t\tLog.error(\"Error while saving document\", error);\n\t\t\t\t});\n\t\t\tdataLossDialog.close();\n\t\t\tbreak;\n\t\tcase DraftDataLossOptions.Keep:\n\t\t\tprocessFunctionForDrafts();\n\t\t\tdataLossDialog.close();\n\t\t\tbreak;\n\t\tcase DraftDataLossOptions.Discard:\n\t\t\tdraftDataLossPopup\n\t\t\t\t.discardDraft(controller, skipBindingToView, context, hiddenDraft)\n\t\t\t\t.then((discardedDraft?) => processFunctionForDrafts(discardedDraft))\n\t\t\t\t.catch(function (error: string | undefined) {\n\t\t\t\t\tLog.error(\"Error while discarding draft\", error);\n\t\t\t\t});\n\t\t\tdataLossDialog.close();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tfnCancelFunction();\n\t\t\tdataLossDialog.close();\n\t}\n}\n\nconst draftDataLossPopup = {\n\tprocessDataLossOrDraftDiscardConfirmation: processDataLossOrDraftDiscardConfirmation,\n\tsilentlyKeepDraftOnForwardNavigation: silentlyKeepDraftOnForwardNavigation,\n\tNavigationType: NavigationType,\n\tprocessFclMode: processFclMode,\n\tprocessNoActiveEntityMode: processNoActiveEntityMode,\n\tprocessEditingDraftForExistingEntity: processEditingDraftForExistingEntity,\n\tprocessEditStateDirty: processEditStateDirty,\n\thandleDialogSelection: handleDialogSelection,\n\tsaveDocument: saveDocument,\n\tdiscardDraft: discardDraft\n};\n\nexport default draftDataLossPopup;\n"],"mappings":"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","ignoreList":[],"file":"draftDataLossPopup-dbg.js"}