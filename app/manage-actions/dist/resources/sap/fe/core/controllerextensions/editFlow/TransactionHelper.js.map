{"version":3,"file":"TransactionHelper.js","names":["CreationMode","FELibrary","ProgrammingModel","DeleteOptionTypes","deleteHelper","DeleteDialogContentControl","getParameters","mParameters","getMetadata","getName","TransactionHelper","_proto","prototype","busyLock","appComponent","busyPath","BusyLocker","lock","getModel","busyUnlock","unlock","getProgrammingModel","source","path","isA","getPath","isRelative","getResolvedPath","metaModel","getMetaModel","ModelHelper","isDraftSupported","Draft","isStickySessionSupported","Sticky","NonDraft","validateDocument","async","oContext","oView","sCustomValidationFunction","customValidationFunction","sModule","substring","lastIndexOf","replace","sFunctionName","length","mData","data","FPMHelper","validationWrapper","Promise","resolve","getDataFromDefaultValueFunction","listBinding","model","metaContext","getMetaContext","listBindingObjectPath","MetaModelConverter","getInvolvedDataModelObjects","defaultFuncOnTargetObject","targetObject","annotations","Common","DefaultValuesFunction","defaultFuncOnTargetEntitySet","targetEntitySet","defaultFunctionName","undefined","functionOnNavProp","isNavigationProperty","defaultFunctionContext","getContext","getHeaderContext","defaultFunctionPath","getMetaPath","defaultFunctionObjectPath","defaultFunctionResult","isBound","operations","callBoundFunction","toString","callFunctionImport","getObject","isListBindingHierarchical","getAggregation","hierarchyQualifier","isListBindingAnalytical","aggregation","createContext","initialData","options","dataForCreation","this","listBindingForCreation","parentContext","isExpanded","expand","Object","assign","bindList","$$groupId","getGroupId","$$updateGroupId","getUpdateGroupId","objectPath","parentNavigation","targetEntityType","Aggregation","ParentNavigationProperty","value","Error","parentBindingData","create","createAtEnd","createInactive","getCreationParameters","createData","metaPath","nonComputedVisibleFields","getCreatePopupFields","filter","fieldName","createDocument","mainListBinding","inParameters","resourceModel","messageHandler","fromCopyPaste","newDocumentContext","parameters","programmingModel","getBusyPath","beforeCreateCallBack","inactive","messageHandlingKey","registerToHoldMessages","performCreation","showMessageDialog","control","parentControl","unHoldKey","error","Constants","ActionExecutionFailed","CancelActionDialog","isTransient","delete","busyMode","busyId","createDocumentContext","createParameters","entries","map","_ref","key","toES6Promise","contextPath","Log","OnBeforeCreateFailed","reduce","result","currentObject","createPromise","CommonUtils","INLINEEDIT_UPDATEGROUPID","submitBatch","createHash","getRouterProxy","getHash","componentData","getComponentData","startupParameters","newAction","_getNewAction","performCreationWithAction","status","reason","returnedContext","performCreationWithPOST","actionName","headerContextPath","messagesPath","getMessagesPath","bindingParameters","$$patchWithoutSideEffects","selectedProperties","push","join","callAction","contexts","showActionParameterDialog","label","_getSpecificCreateActionDialogLabel","view","isCreateAction","skipParameterDialog","defaultValueFunctionData","canHaveDialog","creationMode","CreationRow","Inline","creationDialogFields","CreationDialog","forEach","includes","createWithDialog","waitForCreateCompletion","keepTransientContextOnFailed","msg","message","_isDraftEnabled","vContexts","contextForDraftModel","sProgrammingModel","deleteDocument","contextsToDelete","Array","isArray","firstContext","selectedContexts","reject","draftEnabled","items","unSavedContext","entitySetName","getCollectionNameFromContext","numberOfSelectedContexts","lockedContext","find","context","contextData","IsActiveEntity","HasDraftEntity","DraftAdministrativeData","InProcessByUser","DraftIsCreatedByMe","lockingUserName","MessageBox","show","getText","title","onClose","nonTableTxt","unSavedContextUser","description","type","deletableContexts","text","selected","TEXT","totalDeletable","draftsWithNonDeletableActive","draftsWithDeletableActive","unSavedContexts","updateDraftOptionsForDeletableTexts","nonDeletableText","getNonDeletableText","optionsDeletableTexts","getOptionsForDeletableTexts","commonBinding","getBinding","bindingType","updateContentForDeleteDialog","fnConfirm","messageHandling","removeBoundTransitionMessages","deleteConfirmHandler","oError","dialog","createDeleteDialog","noDialog","silentMode","addStyleClass","open","fnReject","dialogConfirmed","vBox","VBox","resourceBundleCore","Library","getResourceBundleFor","Dialog","state","content","ariaLabelledBy","beginButton","Button","press","close","endButton","afterClose","destroy","editDocument","groupId","removeTransitionMessages","oNewContext","draft","createDraftFromActiveDocument","bPreserveChanges","sticky","editDocumentInStickySession","err","showMessages","concurrentEditFlag","cancelDocument","mInParameters","isNewObject","isObjectModified","oModel","returnedValue","draftDataContext","bindContext","getBoundContext","draftAdminData","requestObject","CreationDateTime","LastChangeDateTime","skipDiscardPopover","_confirmDiscard","cancelButton","isKeepAlive","setKeepAlive","beforeCancelCallBack","hasPendingChanges","resetChanges","deleteDraft","oSiblingContext","sCanonicalPath","requestCanonicalPath","discardedContext","discardDocument","refresh","saveDocument","executeSideEffectsOnError","bindingsForSideEffects","skipConfirmationMsg","arguments","oActiveDocument","activateDocument","messagesReceived","getMessages","concat","getType","MessageType","Success","MessageToast","hasTransientContext","getSideEffectsService","requestSideEffectsForNavigationProperty","sActionName","contextToProcess","sName","split","controlId","byId","oResult","actionPath","boundAction","createBindingContext","convertedTypes","convertTypes","convertedAction","resolvePath","target","Operation","parameterValues","invocationGrouping","oDataProperties","ghostContextBindingProtection","enhance$select","feFrameworkCall","ignoreETag","oDataEvents","onODataSubmit","onODataResponse","onRequestSideEffects","handleActionEnablementOnOperation","internalModelContext","operationAvailableMap","defaultValuesExtensionFunction","execute","callActionImport","_handleActionResponse","name","actionHelper","isStaticAction","getProperty","ActionRuntime","setActionEnablement","JSON","parse","getSelectedContexts","updateDeleteInfoForSelectedContexts","aTransientMessages","setProperty","handleValidationError","errorToRemove","Messaging","getMessageModel","getData","validation","removeMessages","_createPopover","settings","Popover","isModified","setEnabled","confirmationPopover","showHeader","placement","Text","confirmButton","width","addContent","attachBeforeOpen","setInitialFocus","attachAfterClose","openBy","refreshListBinding","isRoot","requestSideEffects","$NavigationPropertyPath","requestRefresh","fieldNames","listMetaPath","transientListBinding","refreshInternal","transientContext","fieldMetaContexts","createDialog","getCoreUIFactory","newCreateDialog","setUserDefaults","createAction","openDialog","e","resultPromiseKeeper","PromiseKeeper","onExitDialog","event","getParameter","closeDialog","setBusy","bIsCreateDialog","transientData","keys","propertyPath","oProperty","$kind","startsWith","createDataAsArray","_ref2","UiModelConstants","DocumentModified","newContext","creationSuccess","afterCreateCallBack","displayErrorMessages","showBoundStateMessages","CreationFailed","isOperationDialogOpen","isOpen","attachExitDialog","promise","promiseKeeper","parentListBinding","onCreateCompleted","createdContext","success","detachCreateCompleted","attachCreateCompleted","creationSuccessful","created","catch","contextError","trace","oStartupParameters","sCreateHash","oMetaModel","sMetaPath","sNewAction","preferredMode","toUpperCase","sPreferredMode","lineItems","lineItem","isDataFieldForAction","Action","Label","singleton"],"sources":["./TransactionHelper.ts"],"sourcesContent":["import type { Action, Action as EdmAction, EntitySet, NavigationProperty } from \"@sap-ux/vocabularies-types\";\nimport type { LineItem } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport type { ExitDialogEvent } from \"sap/fe/core/UIProvider\";\nimport { getCoreUIFactory } from \"sap/fe/core/UIProvider\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport type MessageHandler from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport UiModelConstants from \"sap/fe/core/controllerextensions/editFlow/editFlowConstants\";\nimport operations from \"sap/fe/core/controllerextensions/editFlow/operations\";\nimport sticky from \"sap/fe/core/controllerextensions/editFlow/sticky\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { convertTypes } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { isDataFieldForAction } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { DeleteOption, DeleteParameters } from \"sap/fe/core/helpers/DeleteHelper\";\nimport deleteHelper from \"sap/fe/core/helpers/DeleteHelper\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport { getCreatePopupFields } from \"sap/fe/core/helpers/MetaModelFunction\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport PromiseKeeper from \"sap/fe/core/helpers/PromiseKeeper\";\nimport toES6Promise from \"sap/fe/core/helpers/ToES6Promise\";\nimport { isNavigationProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport FELibrary from \"sap/fe/core/library\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type { $PopoverSettings } from \"sap/m/Popover\";\nimport Popover from \"sap/m/Popover\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type MultiValueFieldItem from \"sap/ui/mdc/field/MultiValueFieldItem\";\nimport type Binding from \"sap/ui/model/Binding\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type { ODataListBinding$CreateCompletedEvent } from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport ActionRuntime from \"../../ActionRuntime\";\nimport type { OperationResult } from \"./operations/ODataOperation\";\nimport Operation from \"./operations/Operation\";\nimport actionHelper from \"./operations/actionHelper\";\n\nconst CreationMode = FELibrary.CreationMode;\nconst ProgrammingModel = FELibrary.ProgrammingModel;\n\n//Enums for delete text calculations for delete confirm dialog.\nconst DeleteOptionTypes = deleteHelper.DeleteOptionTypes;\nconst DeleteDialogContentControl = deleteHelper.DeleteDialogContentControl;\n\n/* Make sure that the mParameters is not the oEvent */\nfunction getParameters<T>(mParameters?: Event | T): T {\n\tif (mParameters && (mParameters as Event).getMetadata && (mParameters as Event).getMetadata().getName() === \"sap.ui.base.Event\") {\n\t\tmParameters = {} as T;\n\t}\n\treturn (mParameters as T) || ({} as T);\n}\n\nexport type CreateParameters = {\n\tdata?: Record<string, unknown>;\n\tbusyMode?: string;\n\tbusyId?: string;\n\tkeepTransientContextOnFailed?: boolean;\n\tparentControl: View;\n\tinactive?: boolean;\n\tbeforeCreateCallBack?: Function;\n\tafterCreateCallBack?: (context: ODataV4Context) => Promise<void>;\n\tskipParameterDialog?: boolean;\n\tcreationMode?: string;\n\tcreateAtEnd?: boolean;\n\tparentContext?: ODataV4Context;\n\tcreationDialogFields?: string[];\n};\n\nexport type CancelParameters = { cancelButton: Button; skipDiscardPopover: boolean; beforeCancelCallBack?: Function };\nexport type TransactionDeleteParameters = DeleteParameters & {\n\tselectedContexts?: ODataV4Context[];\n\ttitle?: string;\n\tnoDialog?: boolean;\n};\n\nclass TransactionHelper {\n\tbusyLock(appComponent: AppComponent, busyPath?: string): void {\n\t\tBusyLocker.lock(appComponent.getModel(\"ui\"), busyPath);\n\t}\n\n\tbusyUnlock(appComponent: AppComponent, busyPath?: string): void {\n\t\tBusyLocker.unlock(appComponent.getModel(\"ui\"), busyPath);\n\t}\n\n\tgetProgrammingModel(source: ODataV4Context | Binding): typeof ProgrammingModel {\n\t\tlet path: string;\n\t\tif (source.isA<ODataV4Context>(\"sap.ui.model.odata.v4.Context\")) {\n\t\t\tpath = source.getPath();\n\t\t} else {\n\t\t\tpath = (source.isRelative() ? source.getResolvedPath() : source.getPath()) ?? \"\";\n\t\t}\n\n\t\tconst metaModel = source.getModel()?.getMetaModel() as ODataMetaModel | undefined;\n\t\tif (metaModel && ModelHelper.isDraftSupported(metaModel, path)) {\n\t\t\treturn ProgrammingModel.Draft;\n\t\t} else if (metaModel && ModelHelper.isStickySessionSupported(metaModel)) {\n\t\t\treturn ProgrammingModel.Sticky;\n\t\t} else {\n\t\t\treturn ProgrammingModel.NonDraft;\n\t\t}\n\t}\n\n\t/**\n\t * Validates a document.\n\t * @param oContext Context of the document to be validated\n\t * @param [mParameters] Can contain the following attributes:\n\t * @param [mParameters.data] A map of data that should be validated\n\t * @param [mParameters.customValidationFunction] A string representing the path to the validation function\n\t * @param oView Contains the object of the current view\n\t * @returns Promise resolves with result of the custom validation function\n\t * @final\n\t */\n\tasync validateDocument(\n\t\toContext: ODataV4Context,\n\t\tmParameters: { customValidationFunction?: string; data: Record<string, unknown> },\n\t\toView: View\n\t): Promise<{ messageTarget?: string; messageText: string }[]> {\n\t\tconst sCustomValidationFunction = mParameters && mParameters.customValidationFunction;\n\t\tif (sCustomValidationFunction) {\n\t\t\tconst sModule = sCustomValidationFunction.substring(0, sCustomValidationFunction.lastIndexOf(\".\") || -1).replace(/\\./gi, \"/\"),\n\t\t\t\tsFunctionName = sCustomValidationFunction.substring(\n\t\t\t\t\tsCustomValidationFunction.lastIndexOf(\".\") + 1,\n\t\t\t\t\tsCustomValidationFunction.length\n\t\t\t\t),\n\t\t\t\tmData = mParameters.data;\n\t\t\tdelete mData[\"@$ui5.context.isTransient\"];\n\t\t\treturn FPMHelper.validationWrapper(sModule, sFunctionName, mData, oView, oContext);\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Retrieves defatul values from the DefaultValue function.\n\t * @param listBinding The list binding to be used for creation\n\t * @returns A promise with an object containing the default values (or undefined if there's no default value function)\n\t */\n\tprivate async getDataFromDefaultValueFunction(listBinding: ODataListBinding): Promise<object | undefined> {\n\t\tconst model = listBinding.getModel();\n\t\tconst metaModel = model.getMetaModel();\n\t\tconst metaContext = metaModel.getMetaContext(listBinding.getResolvedPath() as string);\n\t\tconst listBindingObjectPath = MetaModelConverter.getInvolvedDataModelObjects(metaContext);\n\n\t\tconst defaultFuncOnTargetObject = (listBindingObjectPath.targetObject as NavigationProperty | EntitySet).annotations.Common\n\t\t\t?.DefaultValuesFunction;\n\t\tconst defaultFuncOnTargetEntitySet = (listBindingObjectPath.targetEntitySet as EntitySet | undefined)?.annotations.Common\n\t\t\t?.DefaultValuesFunction;\n\t\tconst defaultFunctionName = defaultFuncOnTargetObject ?? defaultFuncOnTargetEntitySet;\n\n\t\tif (!defaultFunctionName) {\n\t\t\t// No default value function\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst functionOnNavProp = isNavigationProperty(listBindingObjectPath.targetObject) && defaultFuncOnTargetObject !== undefined;\n\t\tconst defaultFunctionContext = functionOnNavProp ? listBinding.getContext() : listBinding.getHeaderContext();\n\t\tif (!defaultFunctionContext) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst defaultFunctionPath = `${metaModel.getMetaPath(defaultFunctionContext.getPath())}/${defaultFunctionName}`;\n\n\t\tconst defaultFunctionObjectPath = MetaModelConverter.getInvolvedDataModelObjects(metaModel.getMetaContext(defaultFunctionPath));\n\t\tconst defaultFunctionResult = (defaultFunctionObjectPath.targetObject as Action)?.isBound\n\t\t\t? await operations.callBoundFunction(defaultFunctionName.toString(), defaultFunctionContext, model)\n\t\t\t: ((await operations.callFunctionImport(defaultFunctionName.toString(), model)) as ODataV4Context);\n\n\t\treturn defaultFunctionResult.getObject();\n\t}\n\n\t/**\n\t * Checks if a list binding corresponds to a hierarchy.\n\t * @param listBinding\n\t * @returns True if the list binding is hierarchical.\n\t */\n\tisListBindingHierarchical(listBinding: ODataListBinding): boolean {\n\t\treturn (listBinding.getAggregation() as { hierarchyQualifier?: string } | undefined)?.hierarchyQualifier ? true : false;\n\t}\n\n\t/**\n\t * Checks if the given list binding is analytical.\n\t * @param listBinding The list binding to check\n\t * @returns TRUE if the list binding is analytical, `false` otherwise.\n\t */\n\tisListBindingAnalytical(listBinding: ODataListBinding): boolean {\n\t\tconst aggregation = listBinding.getAggregation() as { hierarchyQualifier?: string } | undefined;\n\t\treturn aggregation !== undefined && !aggregation.hierarchyQualifier;\n\t}\n\n\t/**\n\t * Creates a new context in a list binding. Handles both flat and hierarchical cases.\n\t * @param listBinding\n\t * @param initialData Initial data to create the context.\n\t * @param options Creation options.\n\t * @param options.createAtEnd Create the context at the end of the list (ignored in case of a hierarchy).\n\t * @param options.createInactive Create the context as inactive (ignored in case of a hierarchy).\n\t * @param options.parentContext Create the context as a\t child of this context (ony used in case of a hierarchy).\n\t * @returns The created context.\n\t */\n\tprivate async createContext(\n\t\tlistBinding: ODataListBinding,\n\t\tinitialData: object | undefined,\n\t\toptions: { createAtEnd?: boolean; createInactive?: boolean; parentContext?: ODataV4Context }\n\t): Promise<ODataV4Context> {\n\t\tconst dataForCreation = initialData ?? {};\n\n\t\tif (this.isListBindingHierarchical(listBinding)) {\n\t\t\tlet listBindingForCreation: ODataListBinding;\n\t\t\tif (options.parentContext?.isExpanded() === false) {\n\t\t\t\t// If the parent context already has children and is collapsed, we expand it first\n\t\t\t\tawait listBinding.expand(options.parentContext);\n\t\t\t}\n\n\t\t\tif (listBinding.isRelative()) {\n\t\t\t\tObject.assign(dataForCreation, { \"@$ui5.node.parent\": options.parentContext });\n\t\t\t\tlistBindingForCreation = listBinding;\n\t\t\t} else {\n\t\t\t\t// Absolute binding: creation from the ListReport\n\t\t\t\t// We use a temporary flat listBinding for the creation, to avoid adding the new context in the table (we don't want to display it until it's saved)\n\t\t\t\tconst model = listBinding.getModel();\n\t\t\t\tconst metaModel = model.getMetaModel();\n\t\t\t\tlistBindingForCreation = model.bindList(listBinding.getPath(), undefined, undefined, undefined, {\n\t\t\t\t\t$$groupId: listBinding.getGroupId(),\n\t\t\t\t\t$$updateGroupId: listBinding.getUpdateGroupId()\n\t\t\t\t});\n\n\t\t\t\t// Add the parent path in the initial data if a parent is provided\n\t\t\t\tif (options.parentContext) {\n\t\t\t\t\tconst objectPath = MetaModelConverter.getInvolvedDataModelObjects(metaModel.getMetaContext(listBinding.getPath()));\n\t\t\t\t\tconst hierarchyQualifier = (listBinding.getAggregation() as { hierarchyQualifier: string }).hierarchyQualifier;\n\t\t\t\t\tconst parentNavigation =\n\t\t\t\t\t\tobjectPath.targetEntityType.annotations.Aggregation?.[`RecursiveHierarchy#${hierarchyQualifier}`]\n\t\t\t\t\t\t\t?.ParentNavigationProperty.value;\n\t\t\t\t\tif (!parentNavigation) {\n\t\t\t\t\t\tthrow new Error(`Cannot find parent navigation property for ${listBinding.getPath()}`);\n\t\t\t\t\t}\n\t\t\t\t\tconst parentBindingData: Record<string, string> = {};\n\t\t\t\t\tparentBindingData[`${parentNavigation}@odata.bind`] = options.parentContext.getPath().replace(/^\\//, \"\"); // Remove leading \"/\" from the path\n\t\t\t\t\tObject.assign(dataForCreation, parentBindingData);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn listBindingForCreation.create(dataForCreation, true);\n\t\t} else if (this.isListBindingAnalytical(listBinding)) {\n\t\t\tif (listBinding.isRelative()) {\n\t\t\t\tthrow new Error(\"Creating a new document in a analytical table is supported only in a ListReport\");\n\t\t\t} else {\n\t\t\t\t// We use a temporary flat listBinding for the creation, to avoid adding the new context in the table (we don't want to display it until it's saved)\n\t\t\t\tconst model = listBinding.getModel();\n\t\t\t\tconst listBindingForCreation = model.bindList(listBinding.getPath(), undefined, undefined, undefined, {\n\t\t\t\t\t$$groupId: listBinding.getGroupId(),\n\t\t\t\t\t$$updateGroupId: listBinding.getUpdateGroupId()\n\t\t\t\t});\n\t\t\t\treturn listBindingForCreation.create(dataForCreation, true);\n\t\t\t}\n\t\t} else {\n\t\t\treturn listBinding.create(dataForCreation, true, options.createAtEnd, options.createInactive);\n\t\t}\n\t}\n\n\tgetCreationParameters(listBinding: ODataListBinding, createData: object | undefined, appComponent: AppComponent): string[] {\n\t\tconst metaModel = listBinding.getModel().getMetaModel();\n\t\tconst metaPath = metaModel.getMetaPath(listBinding.getHeaderContext()!.getPath());\n\n\t\tconst nonComputedVisibleFields = getCreatePopupFields(metaModel, metaPath, appComponent);\n\t\t// Do not consider fields for which we provide some initial data\n\t\treturn nonComputedVisibleFields.filter((fieldName: string) => {\n\t\t\treturn !(fieldName in (createData ?? {}));\n\t\t});\n\t}\n\n\t/**\n\t * Creates a new document.\n\t * @param mainListBinding OData V4 ListBinding object\n\t * @param [inParameters] Optional, can contain the following attributes:\n\t * @param [inParameters.data] A map of data that should be sent within the POST\n\t * @param [inParameters.busyMode] Global (default), Local, None TODO: to be refactored\n\t * @param [inParameters.busyId] ID of the local busy indicator\n\t * @param [inParameters.keepTransientContextOnFailed] If set, the context stays in the list if the POST failed and POST will be repeated with the next change\n\t * @param [inParameters.inactive] If set, the context is set as inactive for empty rows\n\t * @param [inParameters.skipParameterDialog] Skips the action parameter dialog\n\t * @param appComponent The app component\n\t * @param resourceModel The resource model\n\t * @param messageHandler The message handler extension\n\t * @param fromCopyPaste True if the creation has been triggered by a paste action\n\t * @returns Promise resolves with new binding context\n\t * @final\n\t */\n\tasync createDocument(\n\t\tmainListBinding: ODataListBinding,\n\t\tinParameters: CreateParameters | undefined,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler,\n\t\tfromCopyPaste: boolean\n\t): Promise<ODataV4Context> {\n\t\tlet newDocumentContext: ODataV4Context | undefined;\n\t\tconst parameters = getParameters(inParameters);\n\t\tif (!mainListBinding) {\n\t\t\tthrow new Error(\"Binding required for new document creation\");\n\t\t}\n\t\tconst programmingModel = this.getProgrammingModel(mainListBinding);\n\t\tif (programmingModel !== ProgrammingModel.Draft && programmingModel !== ProgrammingModel.Sticky) {\n\t\t\tthrow new Error(\"Create document only allowed for draft or sticky session supported services\");\n\t\t}\n\t\tconst busyPath = this.getBusyPath(parameters);\n\t\tparameters.beforeCreateCallBack = fromCopyPaste ? undefined : parameters.beforeCreateCallBack;\n\t\tif (!inParameters?.inactive) {\n\t\t\tthis.busyLock(appComponent, busyPath);\n\t\t}\n\t\tconst messageHandlingKey = messageHandler.registerToHoldMessages();\n\t\ttry {\n\t\t\tnewDocumentContext = await this.performCreation(\n\t\t\t\tmainListBinding,\n\t\t\t\tparameters,\n\t\t\t\tappComponent,\n\t\t\t\tmessageHandler,\n\t\t\t\tresourceModel,\n\t\t\t\tfromCopyPaste\n\t\t\t);\n\t\t\tawait messageHandler.showMessageDialog({ control: parameters.parentControl, unHoldKey: messageHandlingKey });\n\t\t\treturn newDocumentContext!;\n\t\t} catch (error: unknown) {\n\t\t\t// TODO: currently, the only errors handled here are raised as string - should be changed to Error objects\n\t\t\tawait messageHandler.showMessageDialog({ control: parameters.parentControl, unHoldKey: messageHandlingKey });\n\t\t\tif (\n\t\t\t\t(error === FELibrary.Constants.ActionExecutionFailed || error === FELibrary.Constants.CancelActionDialog) &&\n\t\t\t\tnewDocumentContext?.isTransient()\n\t\t\t) {\n\t\t\t\t// This is a workaround suggested by model as Context.delete results in an error\n\t\t\t\t// TODO: remove the $direct once model resolves this issue\n\t\t\t\t// this line shows the expected console error Uncaught (in promise) Error: Request canceled: POST Travel; group: submitLater\n\t\t\t\tnewDocumentContext.delete(\"$direct\");\n\t\t\t}\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tif (!inParameters?.inactive) {\n\t\t\t\tthis.busyUnlock(appComponent, busyPath);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getBusyPath(mParameters: CreateParameters): string {\n\t\treturn mParameters.busyMode === \"Local\" ? `/busyLocal/${mParameters.busyId}` : \"/busy\";\n\t}\n\n\t/**\n\t * Creates a new document.\n\t * @param mainListBinding OData V4 ListBinding object.\n\t * @param parameters Contains the following attributes\n\t * @param parameters.data A map of data that should be sent within the POST\n\t * @param parameters.busyMode Global (default), Local, None\n\t * @param parameters.busyId ID of the local busy indicator\n\t * @param parameters.keepTransientContextOnFailed If set, the context stays in the list if the POST failed and POST will be repeated with the next change\n\t * @param parameters.parentControl\n\t * @param parameters.inactive If set, the context is set as inactive for empty rows\n\t * @param parameters.beforeCreateCallBack Callback to be called before the creation\n\t * @param parameters.skipParameterDialog Skips the action parameter dialog\n\t * @param parameters.createAtEnd Create the context at the end of the list (ignored in case of a hierarchy).\n\t * @param parameters.createInactive Create the context as inactive (ignored in case of a hierarchy).\n\t * @param parameters.parentContext Create the context as a child of this context (only used in case of a hierarchy).\n\t * @returns Promise resolves with new binding context\n\t */\n\tprivate async createDocumentContext(mainListBinding: ODataListBinding, parameters: CreateParameters): Promise<ODataV4Context> {\n\t\tif (parameters.beforeCreateCallBack) {\n\t\t\t//beforeCreateCallBack expects createParameters of type any[]\n\t\t\tconst createParameters = parameters.data ? Object.entries(parameters.data).map(([key, value]) => ({ [key]: value })) : [];\n\t\t\ttry {\n\t\t\t\tawait toES6Promise(\n\t\t\t\t\tparameters.beforeCreateCallBack({\n\t\t\t\t\t\tcontextPath: mainListBinding && mainListBinding.getPath(),\n\t\t\t\t\t\tcreateParameters: createParameters\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.error(error as string);\n\t\t\t\tthrow FELibrary.Constants.OnBeforeCreateFailed;\n\t\t\t}\n\t\t\tparameters.data = createParameters.reduce((result, currentObject) => {\n\t\t\t\treturn { ...result, ...currentObject };\n\t\t\t}, {});\n\t\t}\n\t\tconst createPromise = this.createContext(mainListBinding, parameters.data, {\n\t\t\tcreateAtEnd: !!parameters.createAtEnd,\n\t\t\tcreateInactive: !!parameters.inactive,\n\t\t\tparentContext: parameters.parentContext\n\t\t});\n\t\tif (mainListBinding.getUpdateGroupId() === CommonUtils.INLINEEDIT_UPDATEGROUPID) {\n\t\t\tmainListBinding.getModel().submitBatch(CommonUtils.INLINEEDIT_UPDATEGROUPID);\n\t\t}\n\t\treturn createPromise;\n\t}\n\n\t/**\n\t * Creates a new document either via new Action or standard POST create.\n\t * @param mainListBinding OData V4 ListBinding object\n\t * @param parameters Contains the following attributes\n\t * @param parameters.data A map of data that should be sent within the POST\n\t * @param parameters.busyMode Global (default), Local, None\n\t * @param parameters.busyId ID of the local busy indicator\n\t * @param parameters.keepTransientContextOnFailed If set, the context stays in the list if the POST failed and POST will be repeated with the next change\n\t * @param parameters.parentControl\n\t * @param parameters.inactive If set, the context is set as inactive for empty rows\n\t * @param parameters.beforeCreateCallBack Callback to be called before the creation\n\t * @param parameters.skipParameterDialog Skips the action parameter dialog\n\t * @param parameters.createAtEnd Create the context at the end of the list (ignored in case of a hierarchy).\n\t * @param parameters.createInactive Create the context as inactive (ignored in case of a hierarchy).\n\t * @param parameters.parentContext Create the context as a child of this context (only used in case of a hierarchy).\n\t * @param appComponent The app component\n\t * @param messageHandler The message handler extension\n\t * @param resourceModel\n\t * @param fromCopyPaste True if the creation has been triggered by a paste action\n\t * @returns Promise resolves with new binding context\n\t */\n\tprivate async performCreation(\n\t\tmainListBinding: ODataListBinding,\n\t\tparameters: CreateParameters,\n\t\tappComponent: AppComponent,\n\t\tmessageHandler: MessageHandler,\n\t\tresourceModel: ResourceModel,\n\t\tfromCopyPaste: boolean\n\t): Promise<ODataV4Context | undefined> {\n\t\tconst metaModel = mainListBinding.getModel().getMetaModel();\n\t\tconst metaPath = metaModel.getMetaPath(mainListBinding.getHeaderContext()!.getPath());\n\t\tconst createHash = appComponent.getRouterProxy().getHash();\n\t\tconst componentData = appComponent.getComponentData();\n\t\tconst startupParameters = componentData?.startupParameters ?? {};\n\t\tconst newAction = !mainListBinding.isRelative()\n\t\t\t? this._getNewAction(startupParameters, createHash, metaModel, metaPath)\n\t\t\t: undefined;\n\n\t\tif (newAction) {\n\t\t\tconst result = await this.performCreationWithAction(\n\t\t\t\tnewAction,\n\t\t\t\tmainListBinding,\n\t\t\t\tparameters,\n\t\t\t\tappComponent,\n\t\t\t\tresourceModel,\n\t\t\t\tmessageHandler\n\t\t\t);\n\t\t\tif (result.status === \"rejected\") {\n\t\t\t\tthrow result.reason;\n\t\t\t}\n\t\t\treturn result.value.returnedContext;\n\t\t} else {\n\t\t\treturn this.performCreationWithPOST(mainListBinding, parameters, appComponent, resourceModel, messageHandler, fromCopyPaste);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a document with an action.\n\t * @param actionName\n\t * @param mainListBinding\n\t * @param parameters\n\t * @param appComponent\n\t * @param resourceModel\n\t * @param messageHandler\n\t * @returns The created context.\n\t */\n\tprivate async performCreationWithAction(\n\t\tactionName: string,\n\t\tmainListBinding: ODataListBinding,\n\t\tparameters: CreateParameters,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler\n\t): Promise<PromiseSettledResult<OperationResult>> {\n\t\tconst headerContextPath = mainListBinding.getHeaderContext()!.getPath();\n\t\tconst metaModel = mainListBinding.getModel().getMetaModel();\n\t\tconst metaPath = metaModel.getMetaPath(headerContextPath);\n\t\tconst messagesPath = ModelHelper.getMessagesPath(metaModel, metaPath);\n\t\tconst bindingParameters: BindContextParameters = { $$patchWithoutSideEffects: true, $$updateGroupId: \"$auto\" };\n\n\t\tconst selectedProperties: string[] = [];\n\t\tif (messagesPath) {\n\t\t\tselectedProperties.push(messagesPath);\n\t\t}\n\t\tif (this.getProgrammingModel(mainListBinding) === ProgrammingModel.Draft) {\n\t\t\tselectedProperties.push(\"IsActiveEntity\", \"HasDraftEntity\", \"HasActiveEntity\"); // Needed for our internal logic (e.g. navigation)\n\t\t}\n\t\tif (selectedProperties.length > 0) {\n\t\t\tbindingParameters[\"$select\"] = selectedProperties.join(\",\");\n\t\t}\n\t\tconst result = await this.callAction(\n\t\t\tactionName,\n\t\t\t{\n\t\t\t\tcontexts: mainListBinding.getHeaderContext(),\n\t\t\t\tshowActionParameterDialog: true,\n\t\t\t\tlabel: this._getSpecificCreateActionDialogLabel(metaModel, metaPath, actionName, resourceModel),\n\t\t\t\tbindingParameters: bindingParameters,\n\t\t\t\tview: parameters.parentControl,\n\t\t\t\tisCreateAction: true,\n\t\t\t\tskipParameterDialog: parameters.skipParameterDialog\n\t\t\t},\n\t\t\tappComponent,\n\t\t\tmessageHandler\n\t\t);\n\t\treturn result[0];\n\t}\n\n\t/**\n\t * Creates a docuemnt with a standard POST request.\n\t * @param mainListBinding\n\t * @param parameters\n\t * @param appComponent\n\t * @param resourceModel\n\t * @param messageHandler\n\t * @param fromCopyPaste\n\t * @returns The created context.\n\t */\n\tprivate async performCreationWithPOST(\n\t\tmainListBinding: ODataListBinding,\n\t\tparameters: CreateParameters,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler,\n\t\tfromCopyPaste: boolean\n\t): Promise<ODataV4Context | undefined> {\n\t\ttry {\n\t\t\tlet newDocumentContext: ODataV4Context | undefined;\n\t\t\tconst initialData = parameters.data;\n\t\t\tif (!fromCopyPaste) {\n\t\t\t\tconst defaultValueFunctionData = await this.getDataFromDefaultValueFunction(mainListBinding);\n\t\t\t\tparameters.data = Object.assign({}, defaultValueFunctionData, parameters.data);\n\t\t\t}\n\t\t\tif (parameters.data) {\n\t\t\t\tdelete parameters.data[\"@odata.context\"];\n\t\t\t}\n\n\t\t\tconst canHaveDialog = parameters.creationMode !== CreationMode.CreationRow && parameters.creationMode !== CreationMode.Inline;\n\t\t\tconst creationDialogFields = canHaveDialog ? this.getCreationParameters(mainListBinding, initialData, appComponent) : [];\n\t\t\tif (parameters.creationMode === CreationMode.CreationDialog) {\n\t\t\t\tparameters.creationDialogFields?.forEach((fieldName) => {\n\t\t\t\t\tif (!creationDialogFields.includes(fieldName)) {\n\t\t\t\t\t\tcreationDialogFields.push(fieldName);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (creationDialogFields.length === 0) {\n\t\t\t\t\t// In CreationDialog mode, the dialog is mandatory\n\t\t\t\t\tthrow new Error(\"No fields available for the creation dialog\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (creationDialogFields.length > 0) {\n\t\t\t\tnewDocumentContext = await this.createWithDialog(\n\t\t\t\t\tmainListBinding,\n\t\t\t\t\tcreationDialogFields,\n\t\t\t\t\tparameters,\n\t\t\t\t\tappComponent,\n\t\t\t\t\tresourceModel,\n\t\t\t\t\tmessageHandler\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tnewDocumentContext = await this.createDocumentContext(mainListBinding, parameters);\n\t\t\t\tif (!parameters.inactive) {\n\t\t\t\t\tawait this.waitForCreateCompletion(newDocumentContext, parameters.keepTransientContextOnFailed === true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newDocumentContext;\n\t\t} catch (error: unknown) {\n\t\t\tconst msg = (error as Error).message ?? error;\n\t\t\tLog.error(\"Error while creating the new document\", msg);\n\t\t\tthrow msg;\n\t\t}\n\t}\n\n\t_isDraftEnabled(vContexts: ODataV4Context[]): boolean {\n\t\tconst contextForDraftModel = vContexts[0];\n\t\tconst sProgrammingModel = this.getProgrammingModel(contextForDraftModel);\n\t\treturn sProgrammingModel === ProgrammingModel.Draft;\n\t}\n\n\t/**\n\t * Delete one or multiple document(s).\n\t * @param contexts Contexts Either one context or an array with contexts to be deleted\n\t * @param mParameters Optional, can contain the following attributes:\n\t * @param mParameters.title Title of the object to be deleted\n\t * @param mParameters.description Description of the object to be deleted\n\t * @param mParameters.numberOfSelectedContexts Number of objects selected\n\t * @param mParameters.noDialog To disable the confirmation dialog\n\t * @param appComponent The appComponent\n\t * @param resourceModel The resource model to load text resources\n\t * @param messageHandler The message handler extension\n\t * @returns A Promise resolved once the documents are deleted\n\t */\n\tasync deleteDocument(\n\t\tcontexts: ODataV4Context | ODataV4Context[],\n\t\tmParameters: TransactionDeleteParameters,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler\n\t): Promise<void> {\n\t\t// delete document lock\n\t\tthis.busyLock(appComponent);\n\n\t\tconst contextsToDelete = Array.isArray(contexts) ? [...contexts] : [contexts];\n\t\tconst firstContext = (mParameters.selectedContexts ?? contextsToDelete)[0];\n\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst draftEnabled = this._isDraftEnabled(mParameters.selectedContexts || contextsToDelete);\n\t\t\t\tconst items: Control[] = [];\n\t\t\t\tlet options: DeleteOption[] = [];\n\t\t\t\tlet unSavedContext: Context | undefined;\n\t\t\t\t// items(texts) and options(checkBoxes and single default option) for confirm dialog.\n\t\t\t\tif (mParameters) {\n\t\t\t\t\tmParameters = getParameters(mParameters);\n\t\t\t\t\tmParameters.entitySetName = this.getCollectionNameFromContext(firstContext);\n\t\t\t\t\tif (!mParameters.numberOfSelectedContexts) {\n\t\t\t\t\t\t// non-Table\n\t\t\t\t\t\tif (draftEnabled) {\n\t\t\t\t\t\t\t// Check if 1 of the drafts is locked by another user\n\t\t\t\t\t\t\tconst lockedContext = contextsToDelete.find((context) => {\n\t\t\t\t\t\t\t\tconst contextData = context.getObject();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tcontextData.IsActiveEntity === true &&\n\t\t\t\t\t\t\t\t\tcontextData.HasDraftEntity === true &&\n\t\t\t\t\t\t\t\t\tcontextData.DraftAdministrativeData &&\n\t\t\t\t\t\t\t\t\tcontextData.DraftAdministrativeData.InProcessByUser &&\n\t\t\t\t\t\t\t\t\t!contextData.DraftAdministrativeData.DraftIsCreatedByMe\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (lockedContext) {\n\t\t\t\t\t\t\t\t// Show message box with the name of the locking user and return\n\t\t\t\t\t\t\t\tconst lockingUserName = lockedContext.getObject().DraftAdministrativeData.InProcessByUser;\n\t\t\t\t\t\t\t\tMessageBox.show(\n\t\t\t\t\t\t\t\t\tresourceModel.getText(\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_SINGLE_OBJECT_LOCKED\", [\n\t\t\t\t\t\t\t\t\t\tlockingUserName\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttitle: resourceModel.getText(\"C_COMMON_DELETE\"),\n\t\t\t\t\t\t\t\t\t\tonClose: reject\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tunSavedContext = contextsToDelete.find((context) => {\n\t\t\t\t\t\t\t\t\tconst { IsActiveEntity, HasDraftEntity, DraftAdministrativeData } = context.getObject() || {};\n\t\t\t\t\t\t\t\t\treturn IsActiveEntity === true && HasDraftEntity === true && !!DraftAdministrativeData?.InProcessByUser;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet nonTableTxt = \"\";\n\t\t\t\t\t\tif (unSavedContext) {\n\t\t\t\t\t\t\tconst unSavedContextUser = unSavedContext.getObject().DraftAdministrativeData.InProcessByUser;\n\t\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_UNSAVED_CHANGES\",\n\t\t\t\t\t\t\t\t[unSavedContextUser],\n\t\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (mParameters.title) {\n\t\t\t\t\t\t\tif (mParameters.description) {\n\t\t\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_OBJECTINFO\",\n\t\t\t\t\t\t\t\t\t[mParameters.title, mParameters.description],\n\t\t\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_OBJECTTITLE_ONLY\",\n\t\t\t\t\t\t\t\t\t[mParameters.title],\n\t\t\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_OBJECTTITLE_SINGULAR\",\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions.push({\n\t\t\t\t\t\t\ttype: DeleteOptionTypes.deletableContexts,\n\t\t\t\t\t\t\tcontexts: contextsToDelete,\n\t\t\t\t\t\t\ttext: nonTableTxt,\n\t\t\t\t\t\t\tselected: true,\n\t\t\t\t\t\t\tcontrol: DeleteDialogContentControl.TEXT\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Table\n\t\t\t\t\t\tlet totalDeletable = contextsToDelete.length;\n\n\t\t\t\t\t\tif (draftEnabled) {\n\t\t\t\t\t\t\ttotalDeletable +=\n\t\t\t\t\t\t\t\t(mParameters.draftsWithNonDeletableActive?.length ?? 0) +\n\t\t\t\t\t\t\t\t(mParameters.draftsWithDeletableActive?.length ?? 0) +\n\t\t\t\t\t\t\t\t(mParameters.unSavedContexts?.length ?? 0);\n\t\t\t\t\t\t\tdeleteHelper.updateDraftOptionsForDeletableTexts(\n\t\t\t\t\t\t\t\tmParameters,\n\t\t\t\t\t\t\t\tcontextsToDelete,\n\t\t\t\t\t\t\t\ttotalDeletable,\n\t\t\t\t\t\t\t\tresourceModel,\n\t\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nonDeletableText = deleteHelper.getNonDeletableText(mParameters, totalDeletable, resourceModel);\n\t\t\t\t\t\t\tif (nonDeletableText) {\n\t\t\t\t\t\t\t\titems.push(nonDeletableText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst optionsDeletableTexts = deleteHelper.getOptionsForDeletableTexts(\n\t\t\t\t\t\t\tmParameters,\n\t\t\t\t\t\t\tcontextsToDelete,\n\t\t\t\t\t\t\tresourceModel\n\t\t\t\t\t\t);\n\t\t\t\t\t\toptions = [...options, ...optionsDeletableTexts];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst commonBinding = firstContext.getBinding() as Binding;\n\t\t\t\tlet bindingType: \"Tree\" | \"Analytical\" | undefined;\n\t\t\t\tif (commonBinding.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\t\tif (this.isListBindingHierarchical(commonBinding)) {\n\t\t\t\t\t\tbindingType = \"Tree\";\n\t\t\t\t\t} else if (this.isListBindingAnalytical(commonBinding)) {\n\t\t\t\t\t\tbindingType = \"Analytical\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Content of Delete Dialog\n\t\t\t\tdeleteHelper.updateContentForDeleteDialog(options, items);\n\t\t\t\tconst fnConfirm = async (): Promise<void> => {\n\t\t\t\t\tmessageHandling.removeBoundTransitionMessages();\n\t\t\t\t\tthis.busyLock(appComponent);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait deleteHelper.deleteConfirmHandler(\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmParameters,\n\t\t\t\t\t\t\tmessageHandler,\n\t\t\t\t\t\t\tresourceModel,\n\t\t\t\t\t\t\tappComponent,\n\t\t\t\t\t\t\tdraftEnabled,\n\t\t\t\t\t\t\tbindingType\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t} catch (oError: unknown) {\n\t\t\t\t\t\treject();\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.busyUnlock(appComponent);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst dialog = this.createDeleteDialog(items, mParameters, resourceModel, fnConfirm, reject);\n\n\t\t\t\tif (mParameters.noDialog === true || mParameters.silentMode === true) {\n\t\t\t\t\tfnConfirm();\n\t\t\t\t} else {\n\t\t\t\t\tdialog.addStyleClass(\"sapUiContentPadding\");\n\t\t\t\t\tdialog.open();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\t// delete document unlock\n\t\t\t\tthis.busyUnlock(appComponent);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create the confirmation dialog fo the deletion.\n\t * @param items An array of controls used for the dialog content\n\t * @param parameters Contains the following attributes:\n\t * @param parameters.parentControl Parent control of the delete button if any\n\t * @param parameters.entitySetName Name of the current entitySet\n\t * @param resourceModel The resource model to load text resources\n\t * @param fnConfirm Function executed upon the validation of the deletion\n\t * @param fnReject Function executed if the dialog is closed via Cancel or Escape button\n\t * @returns The created delete confirmation dialog\n\t */\n\tcreateDeleteDialog(\n\t\titems: Control[],\n\t\tparameters: Partial<{ parentControl: Control | undefined; entitySetName: string }>,\n\t\tresourceModel: ResourceModel,\n\t\tfnConfirm: Function,\n\t\tfnReject: Function\n\t): Dialog {\n\t\tlet dialogConfirmed = false;\n\t\tconst vBox = new VBox({ items: items });\n\t\tconst resourceBundleCore = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\tlet title: string | undefined;\n\t\tif (parameters.parentControl?.isA(\"sap.ui.mdc.Table\")) {\n\t\t\ttitle = resourceModel.getText(\"M_COMMON_TABLE_DELETE\", undefined, parameters.entitySetName);\n\t\t} else {\n\t\t\ttitle = resourceBundleCore.getText(\"C_COMMON_DELETE\");\n\t\t}\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: title,\n\t\t\tstate: \"Warning\",\n\t\t\tcontent: [vBox],\n\t\t\tariaLabelledBy: items,\n\t\t\tbeginButton: new Button({\n\t\t\t\ttext: title,\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: function (): void {\n\t\t\t\t\tdialogConfirmed = true;\n\t\t\t\t\tdialog.close();\n\t\t\t\t\tfnConfirm();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tendButton: new Button({\n\t\t\t\ttext: resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\"),\n\t\t\t\tpress: function (): void {\n\t\t\t\t\tdialog.close();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tafterClose: function (): void {\n\t\t\t\tdialog.destroy();\n\t\t\t\t// if dialog is closed unconfirmed (e.g. via \"Cancel\" or Escape button), ensure to reject promise\n\t\t\t\tif (!dialogConfirmed) {\n\t\t\t\t\tfnReject();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn dialog;\n\t}\n\n\t/**\n\t * Edits a document.\n\t * @param oContext Context of the active document\n\t * @param oView Current view\n\t * @param appComponent The appComponent\n\t * @param messageHandler The message handler extension\n\t * @param groupId The batch groupId for post call of edit action\n\t * @returns Promise resolves with the new draft context in case of draft programming model\n\t * @final\n\t */\n\tasync editDocument(\n\t\toContext: ODataV4Context,\n\t\toView: FEView,\n\t\tappComponent: AppComponent,\n\t\tmessageHandler: MessageHandler,\n\t\tgroupId: string\n\t): Promise<ODataV4Context | undefined> {\n\t\tconst sProgrammingModel = this.getProgrammingModel(oContext);\n\t\tif (!oContext) {\n\t\t\tthrow new Error(\"Binding context to active document is required\");\n\t\t}\n\t\tif (sProgrammingModel !== ProgrammingModel.Draft && sProgrammingModel !== ProgrammingModel.Sticky) {\n\t\t\tthrow new Error(\"Edit is only allowed for draft or sticky session supported services\");\n\t\t}\n\t\tthis.busyLock(appComponent);\n\t\t// before triggering the edit action we'll have to remove all bound transition messages\n\t\tmessageHandler.removeTransitionMessages();\n\t\tconst messageHandlingKey = messageHandler.registerToHoldMessages();\n\n\t\ttry {\n\t\t\tconst oNewContext =\n\t\t\t\tsProgrammingModel === ProgrammingModel.Draft\n\t\t\t\t\t? await draft.createDraftFromActiveDocument(\n\t\t\t\t\t\t\toContext,\n\t\t\t\t\t\t\tappComponent,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbPreserveChanges: true,\n\t\t\t\t\t\t\t\toView: oView\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroupId,\n\t\t\t\t\t\t\tmessageHandler\n\t\t\t\t\t  )\n\t\t\t\t\t: await sticky.editDocumentInStickySession(oContext, appComponent, messageHandler);\n\n\t\t\tawait messageHandler.showMessageDialog({ unHoldKey: messageHandlingKey });\n\t\t\treturn oNewContext;\n\t\t} catch (err: unknown) {\n\t\t\tawait messageHandler.showMessages({ concurrentEditFlag: true, unHoldKey: messageHandlingKey });\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tthis.busyUnlock(appComponent);\n\t\t}\n\t}\n\n\t/**\n\t * Cancel 'edit' mode of a document.\n\t * @param oContext Context of the document to be canceled or deleted\n\t * @param [mInParameters] Optional, can contain the following attributes:\n\t * @param mInParameters.cancelButton Cancel Button of the discard popover (mandatory for now)\n\t * @param mInParameters.skipDiscardPopover Optional, supresses the discard popover incase of draft applications while navigating out of OP\n\t * @param appComponent The appComponent\n\t * @param resourceModel The model to load text resources\n\t * @param messageHandler The message handler extension\n\t * @param isNewObject True if we're trying to cancel a newly created object\n\t * @param isObjectModified True if the object has been modified by the user\n\t * @returns Promise resolves with ???\n\t * @final\n\t */\n\tasync cancelDocument(\n\t\toContext: ODataV4Context,\n\t\tmInParameters: CancelParameters | undefined,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler,\n\t\tisNewObject: boolean,\n\t\tisObjectModified: boolean\n\t): Promise<ODataV4Context | undefined> {\n\t\t//context must always be passed - mandatory parameter\n\t\tif (!oContext) {\n\t\t\tthrow new Error(\"No context exists. Pass a meaningful context\");\n\t\t}\n\t\tconst mParameters = getParameters(mInParameters);\n\t\tconst oModel = oContext.getModel();\n\t\tconst sProgrammingModel = this.getProgrammingModel(oContext);\n\n\t\tif (sProgrammingModel !== ProgrammingModel.Draft && sProgrammingModel !== ProgrammingModel.Sticky) {\n\t\t\tthrow new Error(\"Cancel document only allowed for draft or sticky session supported services\");\n\t\t}\n\t\tthis.busyLock(appComponent);\n\t\ttry {\n\t\t\tlet returnedValue: ODataV4Context | undefined;\n\n\t\t\tif (sProgrammingModel === ProgrammingModel.Draft && !isObjectModified) {\n\t\t\t\tconst draftDataContext = oModel.bindContext(`${oContext.getPath()}/DraftAdministrativeData`).getBoundContext();\n\t\t\t\tconst draftAdminData = await draftDataContext.requestObject();\n\t\t\t\tif (draftAdminData) {\n\t\t\t\t\tisObjectModified = draftAdminData.CreationDateTime !== draftAdminData.LastChangeDateTime;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!mParameters.skipDiscardPopover) {\n\t\t\t\tawait this._confirmDiscard(mParameters.cancelButton, isObjectModified, resourceModel);\n\t\t\t}\n\t\t\tif (oContext.isKeepAlive()) {\n\t\t\t\t// if the context is kept alive we set it again to detach the onBeforeDestroy callback and handle navigation here\n\t\t\t\t// the context needs to still be kept alive to be able to reset changes properly\n\t\t\t\toContext.setKeepAlive(true, undefined);\n\t\t\t}\n\t\t\tif (mParameters.beforeCancelCallBack) {\n\t\t\t\tawait mParameters.beforeCancelCallBack({ context: oContext });\n\t\t\t}\n\t\t\tif (sProgrammingModel === ProgrammingModel.Draft) {\n\t\t\t\tif (isNewObject) {\n\t\t\t\t\tif (oContext.hasPendingChanges()) {\n\t\t\t\t\t\toContext.getBinding().resetChanges();\n\t\t\t\t\t}\n\t\t\t\t\tawait draft.deleteDraft(oContext, messageHandler, appComponent);\n\t\t\t\t} else {\n\t\t\t\t\tconst oSiblingContext = oModel.bindContext(`${oContext.getPath()}/SiblingEntity`).getBoundContext();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst sCanonicalPath = await oSiblingContext.requestCanonicalPath();\n\t\t\t\t\t\tif (oContext.hasPendingChanges()) {\n\t\t\t\t\t\t\toContext.getBinding().resetChanges();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturnedValue = oModel.bindContext(sCanonicalPath).getBoundContext();\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tawait draft.deleteDraft(oContext, messageHandler, appComponent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst discardedContext = await sticky.discardDocument(oContext);\n\t\t\t\tif (discardedContext) {\n\t\t\t\t\tif (discardedContext.hasPendingChanges()) {\n\t\t\t\t\t\tdiscardedContext.getBinding().resetChanges();\n\t\t\t\t\t}\n\t\t\t\t\tif (!isNewObject) {\n\t\t\t\t\t\tdiscardedContext.refresh();\n\t\t\t\t\t\treturnedValue = discardedContext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove existing bound transition messages\n\t\t\tmessageHandler.removeTransitionMessages();\n\t\t\t// show unbound messages\n\t\t\tawait messageHandler.showMessages();\n\t\t\treturn returnedValue;\n\t\t} catch (err: unknown) {\n\t\t\tawait messageHandler.showMessages();\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tthis.busyUnlock(appComponent);\n\t\t}\n\t}\n\n\t/**\n\t * Saves the document.\n\t * @param context Context of the document to be saved\n\t * @param appComponent The appComponent\n\t * @param resourceModel The model to load text resources\n\t * @param executeSideEffectsOnError True if we should execute side effects in case of an error\n\t * @param bindingsForSideEffects The listBindings to be used for executing side effects on error\n\t * @param messageHandler The message handler extension\n\t * @param isNewObject True if we're trying to cancel a newly created object\n\t * @param skipConfirmationMsg\n\t * @returns Promise resolves with ???\n\t * @final\n\t */\n\tasync saveDocument(\n\t\tcontext: ODataV4Context,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\texecuteSideEffectsOnError: boolean,\n\t\tbindingsForSideEffects: ODataListBinding[],\n\t\tmessageHandler: MessageHandler,\n\t\tisNewObject: boolean,\n\t\tskipConfirmationMsg = false\n\t): Promise<ODataV4Context> {\n\t\tconst sProgrammingModel = this.getProgrammingModel(context);\n\t\tif (sProgrammingModel !== ProgrammingModel.Sticky && sProgrammingModel !== ProgrammingModel.Draft) {\n\t\t\tthrow new Error(\"Save is only allowed for draft or sticky session supported services\");\n\t\t}\n\n\t\ttry {\n\t\t\tthis.busyLock(appComponent);\n\t\t\tconst entitySetName = this.getCollectionNameFromContext(context);\n\t\t\tconst oActiveDocument =\n\t\t\t\tsProgrammingModel === ProgrammingModel.Draft\n\t\t\t\t\t? await draft.activateDocument(context, appComponent, {}, messageHandler)\n\t\t\t\t\t: await sticky.activateDocument(context, appComponent, messageHandler);\n\n\t\t\tconst messagesReceived = messageHandling.getMessages().concat(messageHandling.getMessages(true, true)); // get unbound and bound messages present in the model\n\t\t\tif (!skipConfirmationMsg && !(messagesReceived.length === 1 && messagesReceived[0].getType() === MessageType.Success)) {\n\t\t\t\t// show our object creation toast only if it is not coming from backend\n\t\t\t\tMessageToast.show(\n\t\t\t\t\tisNewObject\n\t\t\t\t\t\t? resourceModel.getText(\"C_TRANSACTION_HELPER_OBJECT_CREATED\", undefined, entitySetName)\n\t\t\t\t\t\t: resourceModel.getText(\"C_TRANSACTION_HELPER_OBJECT_SAVED\", undefined, entitySetName)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn oActiveDocument;\n\t\t} catch (err: unknown) {\n\t\t\tif (executeSideEffectsOnError && bindingsForSideEffects?.length > 0) {\n\t\t\t\t/* The sideEffects are executed only for table items in transient state */\n\t\t\t\tbindingsForSideEffects.forEach((listBinding) => {\n\t\t\t\t\tif (!CommonUtils.hasTransientContext(listBinding)) {\n\t\t\t\t\t\tappComponent.getSideEffectsService().requestSideEffectsForNavigationProperty(listBinding.getPath(), context);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tawait messageHandler.showMessages();\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tthis.busyUnlock(appComponent);\n\t\t}\n\t}\n\n\t/**\n\t * Calls a bound or unbound action.\n\t * @param sActionName The name of the action to be called\n\t * @param [mParameters] Contains the following attributes:\n\t * @param [mParameters.parameterValues] A map of action parameter names and provided values\n\t * @param [mParameters.skipParameterDialog] Skips the parameter dialog if values are provided for all of them\n\t * @param [mParameters.contexts] Mandatory for a bound action: Either one context or an array with contexts for which the action is to be called\n\t * @param [mParameters.model] Mandatory for an unbound action: An instance of an OData V4 model\n\t * @param [mParameters.invocationGrouping] Mode how actions are to be called: 'ChangeSet' to put all action calls into one changeset, 'Isolated' to put them into separate changesets\n\t * @param [mParameters.label] A human-readable label for the action\n\t * @param mParameters.bindingParameters\n\t * @param mParameters.showActionParameterDialog\n\t * @param mParameters.entitySetName\n\t * @param mParameters.view\n\t * @param mParameters.controlId\n\t * @param mParameters.isCreateAction\n\t * @param mParameters.operationAvailableMap\n\t * @param mParameters.internalModelContext\n\t * @param mParameters.groupId\n\t * @param mParameters.defaultValuesExtensionFunction\n\t * @param mParameters.ignoreETag If specified, the action is called without ETag handling\n\t * @param mParameters.feFrameworkCall\n\t * @param appComponent The appComponent\n\t * @param messageHandler The message handler extension\n\t * @returns Promise resolves with an array of response objects (TODO: to be changed)\n\t * @final\n\t */\n\tasync callAction(\n\t\tsActionName: string,\n\t\tmParameters: {\n\t\t\tbindingParameters?: BindContextParameters;\n\t\t\tparameterValues?: Record<string, unknown>[];\n\t\t\tskipParameterDialog?: boolean;\n\t\t\tshowActionParameterDialog?: boolean;\n\t\t\tlabel?: string;\n\t\t\tinvocationGrouping?: string;\n\t\t\tentitySetName?: string;\n\t\t\tcontexts?: ODataV4Context | ODataV4Context[] | null;\n\t\t\tmodel?: ODataModel;\n\t\t\tview: View;\n\t\t\tcontrolId?: string;\n\t\t\tisCreateAction?: boolean;\n\t\t\toperationAvailableMap?: string;\n\t\t\tinternalModelContext?: InternalModelContext | null;\n\t\t\tgroupId?: string;\n\t\t\tdefaultValuesExtensionFunction?: string;\n\t\t\tignoreETag?: boolean;\n\t\t\tfeFrameworkCall?: boolean;\n\t\t},\n\t\tappComponent: AppComponent,\n\t\tmessageHandler: MessageHandler\n\t): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\tmParameters = getParameters(mParameters);\n\t\tlet contextToProcess;\n\t\tlet oModel: ODataModel | undefined;\n\t\tif (!sActionName) {\n\t\t\tthrow new Error(\"Provide name of action to be executed\");\n\t\t}\n\t\t// action imports are not directly obtained from the metaModel by it is present inside the entityContainer\n\t\t// and the acions it refers to present outside the entitycontainer, hence to obtain kind of the action\n\t\t// split() on its name was required\n\t\tconst sName = sActionName.split(\"/\")[1];\n\n\t\tcontextToProcess = sName ? undefined : mParameters.contexts;\n\t\t//checking whether the context is an array with more than 0 length or not an array(create action)\n\t\tif (contextToProcess && ((Array.isArray(contextToProcess) && contextToProcess.length) || !Array.isArray(contextToProcess))) {\n\t\t\tcontextToProcess = Array.isArray(contextToProcess) ? contextToProcess[0] : contextToProcess;\n\t\t\toModel = contextToProcess.getModel();\n\t\t}\n\t\tif (mParameters.model) {\n\t\t\toModel = mParameters.model;\n\t\t}\n\t\tif (!oModel) {\n\t\t\tthrow new Error(\"Pass a context for a bound action or pass the model for an unbound action\");\n\t\t}\n\t\ttry {\n\t\t\tconst control = (mParameters.controlId ? mParameters.view.byId(mParameters.controlId) : mParameters.view) as\n\t\t\t\t| Control\n\t\t\t\t| undefined;\n\t\t\tlet oResult: PromiseSettledResult<OperationResult>[];\n\t\t\tif (contextToProcess && mParameters.contexts) {\n\t\t\t\tconst contexts = Array.isArray(mParameters.contexts) ? mParameters.contexts : [mParameters.contexts]; // Ensure that contexts is an array (for static actions it's not an we need to fix it)\n\n\t\t\t\tconst metaModel = oModel.getMetaModel(),\n\t\t\t\t\tactionPath = `${metaModel.getMetaPath(contexts[0].getPath())}/${sActionName}`,\n\t\t\t\t\tboundAction = metaModel.createBindingContext(`${actionPath}/@$ui5.overload/0`)!;\n\n\t\t\t\tconst convertedTypes = convertTypes(oModel.getMetaModel());\n\t\t\t\tconst convertedAction = convertedTypes.resolvePath<EdmAction | undefined>(boundAction.getPath()).target;\n\t\t\t\tif (!convertedAction) {\n\t\t\t\t\tthrow new Error(\"Unknown bound action\");\n\t\t\t\t}\n\t\t\t\toResult = await new Operation(appComponent, oModel, convertedAction, {\n\t\t\t\t\tparameterValues: mParameters.parameterValues as Record<string, string | boolean | number | MultiValueFieldItem[]>[],\n\t\t\t\t\tcontexts,\n\t\t\t\t\tinvocationGrouping: mParameters.invocationGrouping,\n\t\t\t\t\tlabel: mParameters.label,\n\t\t\t\t\tskipParameterDialog: mParameters.skipParameterDialog,\n\t\t\t\t\tbindingParameters: mParameters.bindingParameters,\n\t\t\t\t\tentitySetName: mParameters.entitySetName,\n\t\t\t\t\toDataProperties: {\n\t\t\t\t\t\tghostContextBindingProtection: true,\n\t\t\t\t\t\tenhance$select: mParameters.feFrameworkCall === true,\n\t\t\t\t\t\tgroupId: mParameters.groupId,\n\t\t\t\t\t\tignoreETag: mParameters.ignoreETag\n\t\t\t\t\t},\n\t\t\t\t\toDataEvents: {\n\t\t\t\t\t\tonODataSubmit: (): void => {\n\t\t\t\t\t\t\tmessageHandler?.removeTransitionMessages();\n\t\t\t\t\t\t\tthis.busyLock(appComponent);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonODataResponse: (): void => {\n\t\t\t\t\t\t\tthis.busyUnlock(appComponent);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRequestSideEffects: (): void => {\n\t\t\t\t\t\t\tthis.handleActionEnablementOnOperation({\n\t\t\t\t\t\t\t\tinternalModelContext: mParameters.internalModelContext,\n\t\t\t\t\t\t\t\toperationAvailableMap: mParameters.operationAvailableMap,\n\t\t\t\t\t\t\t\tcontrol: control,\n\t\t\t\t\t\t\t\tcontexts,\n\t\t\t\t\t\t\t\tconvertedAction\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tview: mParameters.view as FEView,\n\t\t\t\t\tisCreateAction: mParameters.isCreateAction,\n\t\t\t\t\tmessageHandler: messageHandler,\n\t\t\t\t\tdefaultValuesExtensionFunction: mParameters.defaultValuesExtensionFunction\n\t\t\t\t}).execute();\n\t\t\t} else {\n\t\t\t\toResult = await operations.callActionImport(sActionName, oModel, appComponent, {\n\t\t\t\t\tparameterValues: mParameters.parameterValues as Record<string, string | boolean | number | MultiValueFieldItem[]>[],\n\t\t\t\t\tlabel: mParameters.label,\n\t\t\t\t\tskipParameterDialog: mParameters.skipParameterDialog,\n\t\t\t\t\tbindingParameters: mParameters.bindingParameters,\n\t\t\t\t\tentitySetName: mParameters.entitySetName,\n\t\t\t\t\toDataEvents: {\n\t\t\t\t\t\tonODataSubmit: () => {\n\t\t\t\t\t\t\tthis.busyLock(appComponent);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonODataResponse: () => {\n\t\t\t\t\t\t\tthis.busyUnlock(appComponent);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\toDataProperties: {\n\t\t\t\t\t\tignoreETag: mParameters.ignoreETag\n\t\t\t\t\t},\n\t\t\t\t\tmessageHandler: messageHandler,\n\t\t\t\t\tview: mParameters.view as FEView\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (messageHandler) {\n\t\t\t\tthis._handleActionResponse(mParameters, sActionName);\n\t\t\t}\n\t\t\treturn oResult;\n\t\t} catch (err: unknown) {\n\t\t\tif (messageHandler) {\n\t\t\t\tthis._handleActionResponse(mParameters, sActionName);\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the collection name from the context.\n\t * @param context The context\n\t * @returns The collection name\n\t */\n\tgetCollectionNameFromContext(context: ODataV4Context): string | undefined {\n\t\tconst metaContext = context.getModel().getMetaModel().getMetaContext(context.getPath());\n\t\treturn (MetaModelConverter.getInvolvedDataModelObjects(metaContext).targetObject as EntitySet | NavigationProperty | undefined)\n\t\t\t?.name;\n\t}\n\n\thandleActionEnablementOnOperation(parameters: {\n\t\tinternalModelContext?: InternalModelContext | null;\n\t\toperationAvailableMap?: string;\n\t\tcontrol?: Control;\n\t\tcontexts?: ODataV4Context[];\n\t\tconvertedAction: EdmAction;\n\t}): void {\n\t\tif (parameters.internalModelContext && parameters.operationAvailableMap) {\n\t\t\tlet selectedContexts: ODataV4Context[] = [];\n\t\t\t//check for skipping static actions\n\t\t\tif (!actionHelper.isStaticAction(parameters.convertedAction)) {\n\t\t\t\tselectedContexts = parameters.internalModelContext.getProperty(\"selectedContexts\") || [];\n\t\t\t\tActionRuntime.setActionEnablement(\n\t\t\t\t\tparameters.internalModelContext,\n\t\t\t\t\tJSON.parse(parameters.operationAvailableMap),\n\t\t\t\t\tselectedContexts,\n\t\t\t\t\t\"table\"\n\t\t\t\t);\n\t\t\t} else if (parameters.control) {\n\t\t\t\tif (parameters.control.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\t\t\tselectedContexts = parameters.control.getSelectedContexts() as ODataV4Context[];\n\t\t\t\t\tActionRuntime.setActionEnablement(\n\t\t\t\t\t\tparameters.internalModelContext,\n\t\t\t\t\t\tJSON.parse(parameters.operationAvailableMap),\n\t\t\t\t\t\tselectedContexts,\n\t\t\t\t\t\t\"table\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//update delete button\n\t\t\tdeleteHelper.updateDeleteInfoForSelectedContexts(parameters.internalModelContext, selectedContexts);\n\t\t}\n\t}\n\n\t_handleActionResponse(\n\t\tmParameters: {\n\t\t\tlabel?: string;\n\t\t\tinternalModelContext?: InternalModelContext | null;\n\t\t},\n\t\tsActionName: string\n\t): void {\n\t\tconst aTransientMessages = messageHandling.getMessages(true, true);\n\t\tif (aTransientMessages.length > 0 && mParameters && mParameters.internalModelContext) {\n\t\t\tmParameters.internalModelContext.setProperty(\"sActionName\", mParameters.label ? mParameters.label : sActionName);\n\t\t}\n\t}\n\n\t/**\n\t * Handles validation errors for the 'Discard' action.\n\t * @final\n\t */\n\thandleValidationError(): void {\n\t\tconst errorToRemove = Messaging.getMessageModel()\n\t\t\t.getData()\n\t\t\t.filter((error: Message) => error.validation); // only needs to handle validation messages, technical and persistent errors needs not to be checked here.\n\t\tMessaging.removeMessages(errorToRemove);\n\t}\n\n\t/**\n\t * Creates a new Popover. Factory method to make unit tests easier.\n\t * @param settings Initial parameters for the popover\n\t * @returns A new Popover\n\t */\n\t_createPopover(settings?: $PopoverSettings): Popover {\n\t\treturn new Popover(settings);\n\t}\n\n\t/**\n\t * Shows a popover to confirm discard if needed.\n\t * @param cancelButton The control which will open the popover\n\t * @param isModified True if the object has been modified and a confirmation popover must be shown\n\t * @param resourceModel The model to load text resources\n\t * @returns Promise resolves if user confirms discard, rejects if otherwise, rejects if no control passed to open popover\n\t * @final\n\t */\n\tasync _confirmDiscard(cancelButton: Button, isModified: boolean, resourceModel: ResourceModel): Promise<void> {\n\t\t// If the data isn't modified, do not show any confirmation popover\n\t\tif (!isModified) {\n\t\t\tthis.handleValidationError();\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tcancelButton.setEnabled(false);\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst confirmationPopover = this._createPopover({\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: \"Top\"\n\t\t\t});\n\t\t\tconfirmationPopover.addStyleClass(\"sapUiContentPadding\");\n\n\t\t\t// Create the content of the popover\n\t\t\tconst title = new Text({\n\t\t\t\ttext: resourceModel.getText(\"C_TRANSACTION_HELPER_DRAFT_DISCARD_MESSAGE\")\n\t\t\t});\n\t\t\tconst confirmButton = new Button({\n\t\t\t\ttext: resourceModel.getText(\"C_TRANSACTION_HELPER_DRAFT_DISCARD_BUTTON\"),\n\t\t\t\twidth: \"100%\",\n\t\t\t\tpress: (): void => {\n\t\t\t\t\tthis.handleValidationError();\n\t\t\t\t\tconfirmationPopover.data(\"continueDiscard\", true);\n\t\t\t\t\tconfirmationPopover.close();\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfirmationPopover.addContent(new VBox({ items: [title, confirmButton] }));\n\n\t\t\t// Attach handler\n\t\t\tconfirmationPopover.attachBeforeOpen(() => {\n\t\t\t\tconfirmationPopover.setInitialFocus(confirmButton);\n\t\t\t});\n\t\t\tconfirmationPopover.attachAfterClose(() => {\n\t\t\t\tcancelButton.setEnabled(true);\n\t\t\t\tif (confirmationPopover.data(\"continueDiscard\")) {\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconfirmationPopover.openBy(cancelButton, false);\n\t\t});\n\t}\n\n\t/**\n\t * Reloads data for an ODataListBinding.\n\t * @param listBinding The listbinding to refresh\n\t * @param appComponent\n\t * @returns The corresponding promise\n\t */\n\tasync refreshListBinding(listBinding: ODataListBinding, appComponent: AppComponent): Promise<void> {\n\t\ttry {\n\t\t\tif (listBinding.isRoot()) {\n\t\t\t\tif (this.isListBindingHierarchical(listBinding)) {\n\t\t\t\t\t// We use a side-effect refresh for a TreeTable, to preserve expansion states\n\t\t\t\t\tawait appComponent\n\t\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t\t.requestSideEffects([{ $NavigationPropertyPath: \"\" }], listBinding.getHeaderContext()!);\n\t\t\t\t} else {\n\t\t\t\t\tawait listBinding.requestRefresh();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait appComponent\n\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t.requestSideEffects([{ $NavigationPropertyPath: listBinding.getPath() }], listBinding.getContext());\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error(`Error while refreshing list binding ${listBinding.getPath()}`, error as string);\n\t\t}\n\t}\n\n\tasync createWithDialog(\n\t\tlistBinding: ODataListBinding,\n\t\tfieldNames: string[],\n\t\tparameters: {\n\t\t\tparentControl?: Control;\n\t\t\tdata?: Record<string, unknown>;\n\t\t\tbIsCreateDialog?: boolean;\n\t\t\tbeforeCreateCallBack?: Function;\n\t\t\tafterCreateCallBack?: (newDocumentContext: ODataV4Context) => Promise<void>;\n\t\t\tcreateAtEnd?: boolean;\n\t\t\tinactive?: boolean;\n\t\t\tparentContext?: ODataV4Context;\n\t\t\tkeepTransientContextOnFailed?: boolean;\n\t\t\tcreateAction?: boolean;\n\t\t\tcreationMode?: string;\n\t\t},\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler\n\t): Promise<ODataV4Context> {\n\t\tconst model = listBinding.getModel() as ODataModel;\n\t\tconst metaModel = model.getMetaModel();\n\t\tconst listMetaPath = metaModel.getMetaPath(listBinding.getResolvedPath()!);\n\n\t\t// Create a fake (transient) listBinding and context, just for the binding context of the dialog\n\t\tconst transientListBinding = model.bindList(listBinding.getPath(), listBinding.getContext(), undefined, undefined, {\n\t\t\t$$updateGroupId: \"submitLater\"\n\t\t});\n\t\ttransientListBinding.refreshInternal = function (): void {\n\t\t\t/* */\n\t\t};\n\t\tconst transientContext = transientListBinding.create(parameters.data, true);\n\t\tconst fieldMetaContexts = fieldNames.map((name) => {\n\t\t\treturn metaModel.createBindingContext(`${listMetaPath}/${name}`) as Context;\n\t\t});\n\n\t\tconst createDialog = getCoreUIFactory().newCreateDialog(\n\t\t\ttransientContext,\n\t\t\tfieldNames,\n\t\t\tappComponent,\n\t\t\tparameters.creationMode === CreationMode.CreationDialog ? \"Standalone\" : \"WithNavigation\",\n\t\t\tparameters.parentControl\n\t\t);\n\n\t\ttry {\n\t\t\tawait CommonUtils.setUserDefaults(\n\t\t\t\tappComponent,\n\t\t\t\tfieldMetaContexts,\n\t\t\t\ttransientContext,\n\t\t\t\tfalse,\n\t\t\t\tparameters.createAction,\n\t\t\t\tparameters.data\n\t\t\t);\n\t\t\tcreateDialog.openDialog();\n\t\t} catch (e) {\n\t\t\tawait messageHandler.showMessages();\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst resultPromiseKeeper = new PromiseKeeper<ODataV4Context>();\n\n\t\tconst onExitDialog = async (event: ExitDialogEvent): Promise<void> => {\n\t\t\tif (!event.getParameter(\"accept\")) {\n\t\t\t\t// User has cancelled creation: destroy the transient list binding and close the dialog\n\t\t\t\ttransientListBinding.destroy();\n\t\t\t\tcreateDialog.closeDialog();\n\t\t\t\tresultPromiseKeeper.reject(FELibrary.Constants.CancelActionDialog);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcreateDialog.setBusy(true);\n\t\t\tparameters.bIsCreateDialog = true;\n\t\t\ttry {\n\t\t\t\tconst transientData = transientContext.getObject();\n\t\t\t\tlet createData: Record<string, unknown> = {};\n\t\t\t\tObject.keys(transientData).forEach((propertyPath) => {\n\t\t\t\t\tconst oProperty = metaModel.getObject(`${listMetaPath}/${propertyPath}`);\n\t\t\t\t\t// Ensure navigation properties are not part of the payload, as deep create not supported\n\t\t\t\t\t// And remove any property starting by @$ui5 as they are not property created by filling the form\n\t\t\t\t\tif (oProperty && oProperty.$kind !== \"NavigationProperty\" && !propertyPath?.startsWith(\"@$ui5\")) {\n\t\t\t\t\t\tcreateData[propertyPath] = transientData[propertyPath];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (parameters.beforeCreateCallBack) {\n\t\t\t\t\t//beforeCreateCallBack expects createParameters of type any[]\n\t\t\t\t\tconst createDataAsArray = Object.entries(createData).map(([key, value]) => ({ [key]: value }));\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait toES6Promise(\n\t\t\t\t\t\t\tparameters.beforeCreateCallBack({\n\t\t\t\t\t\t\t\tcontextPath: listBinding.getPath(),\n\t\t\t\t\t\t\t\tcreateParameters: createDataAsArray\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tLog.error(\"Error while creating the new document\", error as string);\n\t\t\t\t\t\tthrow FELibrary.Constants.OnBeforeCreateFailed;\n\t\t\t\t\t}\n\t\t\t\t\tcreateData = createDataAsArray.reduce((result, currentObject) => {\n\t\t\t\t\t\treturn { ...result, ...currentObject };\n\t\t\t\t\t}, {});\n\t\t\t\t}\n\t\t\t\tif (Object.keys(createData).length > 0) {\n\t\t\t\t\tappComponent.getModel(\"ui\").setProperty(UiModelConstants.DocumentModified, true);\n\t\t\t\t}\n\t\t\t\tconst newContext = await this.createContext(listBinding, createData, {\n\t\t\t\t\tcreateAtEnd: parameters.createAtEnd,\n\t\t\t\t\tcreateInactive: parameters.inactive,\n\t\t\t\t\tparentContext: parameters.parentContext\n\t\t\t\t});\n\n\t\t\t\tconst creationSuccess = await this.waitForCreateCompletion(newContext, parameters.keepTransientContextOnFailed === true);\n\t\t\t\tif (creationSuccess) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait parameters.afterCreateCallBack?.(newContext);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tcreateDialog.displayErrorMessages(Messaging.getMessageModel().getData());\n\t\t\t\t\t\tawait messageHandler.showMessageDialog({ showBoundStateMessages: true });\n\n\t\t\t\t\t\t// Delete the created document and refresh its list binding (otherwise the created document is still visible in the list)\n\t\t\t\t\t\tawait this.deleteDocument(newContext, { silentMode: true }, appComponent, resourceModel, messageHandler);\n\t\t\t\t\t\tawait this.refreshListBinding(listBinding, appComponent);\n\n\t\t\t\t\t\tLog.error(\"Error while creating/saving the new document\", error as string);\n\t\t\t\t\t\tthrow FELibrary.Constants.CreationFailed;\n\t\t\t\t\t}\n\n\t\t\t\t\ttransientListBinding.destroy();\n\t\t\t\t\tcreateDialog.closeDialog();\n\t\t\t\t\tresultPromiseKeeper.resolve(newContext);\n\t\t\t\t}\n\t\t\t} catch (error: unknown) {\n\t\t\t\t// in case of creation failed, dialog should stay open - to achieve the same, nothing has to be done (like in case of success with bKeepDialogOpen)\n\t\t\t\tif (![FELibrary.Constants.OnBeforeCreateFailed, FELibrary.Constants.CreationFailed].includes(error)) {\n\t\t\t\t\t// other errors are not expected\n\t\t\t\t\ttransientListBinding.destroy();\n\t\t\t\t\tcreateDialog.closeDialog();\n\t\t\t\t\tresultPromiseKeeper.reject(error as string | Error);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tcreateDialog.setBusy(false);\n\t\t\t\tmessageHandler.showMessages({ isOperationDialogOpen: createDialog.isOpen() });\n\t\t\t}\n\t\t};\n\n\t\tcreateDialog.attachExitDialog({}, onExitDialog);\n\n\t\treturn resultPromiseKeeper.promise;\n\t}\n\n\t/**\n\t * Waits for the creation of a context to be finished.\n\t * @param newContext The context being created\n\t * @param keepTransientContextOnFailed\n\t * @returns True if the creation was successful\n\t */\n\tasync waitForCreateCompletion(newContext: ODataV4Context, keepTransientContextOnFailed: boolean): Promise<boolean> {\n\t\tconst promiseKeeper = new PromiseKeeper<boolean>();\n\t\tconst parentListBinding = newContext.getBinding() as ODataListBinding;\n\n\t\tconst onCreateCompleted = (event: ODataListBinding$CreateCompletedEvent): void => {\n\t\t\tconst createdContext = event.getParameter(\"context\");\n\t\t\tconst success = event.getParameter(\"success\");\n\t\t\tif (createdContext === newContext) {\n\t\t\t\tparentListBinding.detachCreateCompleted(onCreateCompleted);\n\t\t\t\tpromiseKeeper.resolve(success === true);\n\t\t\t}\n\t\t};\n\n\t\tparentListBinding.attachCreateCompleted(onCreateCompleted);\n\n\t\tconst creationSuccessful = await promiseKeeper.promise;\n\t\tif (!creationSuccessful) {\n\t\t\tif (!keepTransientContextOnFailed) {\n\t\t\t\t// Cancel the pending POST and delete the context in the listBinding\n\t\t\t\t(newContext.created() ?? Promise.resolve()).catch(function (contextError: unknown) {\n\t\t\t\t\tLog.trace(\"transient creation context deletion error\", contextError as string);\n\t\t\t\t});\n\t\t\t\tparentListBinding.resetChanges();\n\t\t\t\tparentListBinding.getModel().resetChanges(parentListBinding.getUpdateGroupId());\n\t\t\t\tthrow FELibrary.Constants.CreationFailed;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tawait newContext.created();\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the name of the NewAction to be executed.\n\t * @param oStartupParameters Startup parameters of the application\n\t * @param [oStartupParameters.preferredMode]\n\t * @param sCreateHash Hash to be checked for action type\n\t * @param oMetaModel The MetaModel used to check for NewAction parameter\n\t * @param sMetaPath The MetaPath\n\t * @returns The name of the action\n\t * @final\n\t */\n\t_getNewAction(\n\t\toStartupParameters: {\n\t\t\tpreferredMode?: string[];\n\t\t},\n\t\tsCreateHash: string,\n\t\toMetaModel: ODataMetaModel,\n\t\tsMetaPath: string\n\t): string {\n\t\tlet sNewAction;\n\n\t\tif (oStartupParameters && oStartupParameters.preferredMode && sCreateHash.toUpperCase().includes(\"I-ACTION=CREATEWITH\")) {\n\t\t\tconst sPreferredMode = oStartupParameters.preferredMode[0];\n\t\t\tsNewAction = sPreferredMode.toUpperCase().includes(\"CREATEWITH:\")\n\t\t\t\t? sPreferredMode.substring(sPreferredMode.lastIndexOf(\":\") + 1)\n\t\t\t\t: undefined;\n\t\t} else if (\n\t\t\toStartupParameters &&\n\t\t\toStartupParameters.preferredMode &&\n\t\t\tsCreateHash.toUpperCase().includes(\"I-ACTION=AUTOCREATEWITH\")\n\t\t) {\n\t\t\tconst sPreferredMode = oStartupParameters.preferredMode[0];\n\t\t\tsNewAction = sPreferredMode.toUpperCase().includes(\"AUTOCREATEWITH:\")\n\t\t\t\t? sPreferredMode.substring(sPreferredMode.lastIndexOf(\":\") + 1)\n\t\t\t\t: undefined;\n\t\t} else {\n\t\t\tsNewAction =\n\t\t\t\toMetaModel && oMetaModel.getObject !== undefined\n\t\t\t\t\t? oMetaModel.getObject(`${sMetaPath}@com.sap.vocabularies.Session.v1.StickySessionSupported/NewAction`) ||\n\t\t\t\t\t  oMetaModel.getObject(`${sMetaPath}@com.sap.vocabularies.Common.v1.DraftRoot/NewAction`)\n\t\t\t\t\t: undefined;\n\t\t}\n\t\treturn sNewAction;\n\t}\n\n\t/**\n\t * Retrieves the label for the title of a specific create action dialog, e.g. Create Sales Order from Quotation.\n\t *\n\t * The following priority is applied:\n\t * 1. label of line-item annotation.\n\t * 2. label annotated in the action.\n\t * 3. \"Create\" as a constant from i18n.\n\t * @param oMetaModel The MetaModel used to check for the NewAction parameter\n\t * @param sMetaPath The MetaPath\n\t * @param sNewAction Contains the name of the action to be executed\n\t * @param resourceModel ResourceBundle to access the default Create label\n\t * @returns The label for the Create Action Dialog\n\t * @final\n\t */\n\t_getSpecificCreateActionDialogLabel(\n\t\toMetaModel: ODataMetaModel | undefined,\n\t\tsMetaPath: string,\n\t\tsNewAction: string,\n\t\tresourceModel: ResourceModel | undefined\n\t): string | undefined {\n\t\tconst lineItems = oMetaModel?.getObject(`${sMetaPath}/@com.sap.vocabularies.UI.v1.LineItem`) as LineItem | undefined;\n\n\t\tconst label = lineItems?.find((lineItem) => isDataFieldForAction(lineItem) && lineItem.Action.split(\"(\", 1)[0] === sNewAction)\n\t\t\t?.Label;\n\n\t\treturn (\n\t\t\tlabel ||\n\t\t\toMetaModel?.getObject(`${sMetaPath}/${sNewAction}@com.sap.vocabularies.Common.v1.Label`) ||\n\t\t\tresourceModel?.getText(\"C_TRANSACTION_HELPER_SAPFE_ACTION_CREATE\")\n\t\t);\n\t}\n}\n\nconst singleton = new TransactionHelper();\nexport default singleton;\n"],"mappings":"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","ignoreList":[]}