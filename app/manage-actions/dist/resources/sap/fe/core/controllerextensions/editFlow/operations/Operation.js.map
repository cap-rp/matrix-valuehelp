{"version":3,"file":"Operation.js","names":["InvocationGrouping","FELibrary","Operation","appComponent","model","convertedAction","parameters","this","executionPromise","Promise","resolve","reject","executionResolve","executionReject","parametersValues","numberOfODataExecutions","externalParametersValues","contexts","setMessageCollectedPromise","operationMessage","OperationMessage","messageHandler","action","label","invocationGrouping","disableNotification","skipMessages","entitySetName","events","onMessageCollected","manageDialogOnMessages","messageCollectedResolve","onMessagePageNavigationCallback","operationParameters","closeParameterDialog","OperationParameters","skipParameterDialog","defaultValuesExtensionFunction","isCreateAction","parameterValues","view","onParameterDialogOpened","bind","onParameterDialogClosed","_exports","_proto","prototype","clear","odataOperation","setDefaultParametersValues","execute","async","internalExecution","operationResult","getOperationParameters","confirmAction","ODataOperation","disableStrictHandling","oDataProperties","disableSideEffects","ghostContextBindingProtection","onStrictValidation","oDataEvents","onStrictCancel","onStrictResponse","messages412","addWarningMessagesToMessageHandler","onStrictHandling","onODataResponse","onODataSubmit","onRequestSideEffects","enhance$select","groupId","replaceWithRVC","ignoreETag","bindingParameters","deferredSubmit","reactToOperations","isParameterDialog","some","isRejected","closeDialog","messageCollectedPromise","isParameterDialogOpened","e","isErrorIntoParameterDialog","actionHelper","isStaticAction","length","resetDialog","ChangeSet","isStrictCanceled","resetParameterDialogState","getOperationResults","isActionCritical","context","isActionCriticalValue","isActionCriticalBindingExp","getIsActionCriticalExpression","convertTypes","getMetaModel","isConstant","compileConstant","undefined","anyObject","Any","anyBoolean","compileExpression","setModel","getModel","setBindingContext","booleanBinding","getBinding","isA","all","getBindings","map","nestedBinding","requestValue","isCritical","actionName","getActionName","boundActionName","includes","split","suffixResourceKey","MessageBox","confirm","ResourceModelHelper","getResourceModel","getText","title","getConfirmTitle","onClose","Action","OK","Error","Constants","CancelActionDialog","key","resourceModel","titleOverrideExists","checkIfResourceKeyExists"],"sources":["./Operation.ts"],"sourcesContent":["import type { Action as EdmAction, PrimitiveType } from \"@sap-ux/vocabularies-types\";\nimport { compileConstant, compileExpression, isConstant } from \"sap/fe/base/BindingToolkit\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport Any from \"sap/fe/core/controls/Any\";\nimport { isRejected } from \"sap/fe/core/helpers/TypeGuards\";\nimport FELibrary from \"sap/fe/core/library\";\nimport { getIsActionCriticalExpression } from \"sap/fe/core/templating/ActionHelper\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport type CompositeBinding from \"sap/ui/model/CompositeBinding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ODataPropertyBinding from \"sap/ui/model/odata/v4/ODataPropertyBinding\";\nimport type AppComponent from \"../../../AppComponent\";\nimport type { FEView } from \"../../../BaseController\";\nimport { convertTypes } from \"../../../converters/MetaModelConverter\";\nimport * as ResourceModelHelper from \"../../../helpers/ResourceModelHelper\";\nimport type MessageHandler from \"../../MessageHandler\";\nimport type { OperationResult } from \"./ODataOperation\";\nimport ODataOperation from \"./ODataOperation\";\nimport OperationMessage from \"./OperationMessage\";\nimport OperationParameters from \"./OperationParameters\";\nimport actionHelper from \"./actionHelper\";\n\nconst InvocationGrouping = FELibrary.InvocationGrouping;\n\nexport type OperationParametersType = {\n\tmessageHandler: MessageHandler;\n\tview?: FEView;\n\tparameterValues?: Record<string, PrimitiveType>[];\n\tlabel?: string;\n\tinvocationGrouping?: string;\n\tskipParameterDialog?: boolean;\n\tskipMessages?: boolean;\n\tentitySetName?: string;\n\toDataProperties?: {\n\t\tghostContextBindingProtection?: boolean;\n\t\tenhance$select?: boolean;\n\t\tdisableStrictHandling?: boolean;\n\t\tdisableSideEffects?: boolean;\n\t\tignoreETag?: boolean;\n\t\tgroupId?: string;\n\t\treplaceWithRVC?: boolean;\n\t\tdeferredSubmit?: boolean;\n\t};\n\tisCreateAction?: boolean;\n\tcontexts?: Context[];\n\tbindingParameters?: BindContextParameters;\n\tdefaultValuesExtensionFunction?: string;\n\toDataEvents?: {\n\t\tonODataResponse?: Function;\n\t\tonODataSubmit?: Function;\n\t\tonRequestSideEffects?: Function;\n\t\tonStrictCancel?: Function;\n\t\tonStrictValidation?: Function;\n\t};\n};\n\nexport default class Operation {\n\tprivate readonly contexts: Context[];\n\n\tprivate executionResolve!: Function;\n\n\tprivate executionReject!: Function;\n\n\tprivate readonly executionPromise = new Promise<PromiseSettledResult<OperationResult>[]>((resolve, reject) => {\n\t\tthis.executionResolve = resolve;\n\t\tthis.executionReject = reject;\n\t});\n\n\tprivate messageCollectedResolve!: Function;\n\n\tprivate messageCollectedPromise!: Promise<void>;\n\n\tprivate readonly operationMessage: OperationMessage;\n\n\tprivate readonly operationParameters: OperationParameters;\n\n\tprivate parametersValues: Record<string, PrimitiveType> = {};\n\n\tprivate numberOfODataExecutions = 0;\n\n\tprivate externalParametersValues = false;\n\n\tprivate odataOperation: ODataOperation | undefined;\n\n\tconstructor(\n\t\tprivate readonly appComponent: AppComponent,\n\t\tprivate readonly model: ODataModel,\n\t\tprivate readonly convertedAction: EdmAction,\n\t\tprivate readonly parameters: OperationParametersType\n\t) {\n\t\tthis.contexts = parameters.contexts ?? [];\n\n\t\tthis.setMessageCollectedPromise();\n\n\t\tthis.operationMessage = new OperationMessage({\n\t\t\tmessageHandler: this.parameters.messageHandler,\n\t\t\taction: this.convertedAction,\n\t\t\tcontexts: this.contexts,\n\t\t\tlabel: this.parameters.label,\n\t\t\tinvocationGrouping: this.parameters.invocationGrouping,\n\t\t\tdisableNotification: this.parameters.skipMessages,\n\t\t\tentitySetName: this.parameters.entitySetName,\n\t\t\tevents: {\n\t\t\t\tonMessageCollected: (): void => {\n\t\t\t\t\t// Due to the mess into the message handling\n\t\t\t\t\t// the dialog should be closed or not only after the messages are collected\n\t\t\t\t\t// it means in the middle of the message handling workflow via\n\t\t\t\t\t// a callback function\n\t\t\t\t\tthis.manageDialogOnMessages();\n\t\t\t\t\tthis.messageCollectedResolve();\n\t\t\t\t},\n\t\t\t\tonMessagePageNavigationCallback: (): void => {\n\t\t\t\t\tthis.operationParameters.closeParameterDialog();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.operationParameters = new OperationParameters(\n\t\t\tthis.appComponent,\n\t\t\tthis.model,\n\t\t\tthis.convertedAction,\n\t\t\tthis.parameters.skipParameterDialog,\n\t\t\t{\n\t\t\t\tcontexts: this.contexts,\n\t\t\t\tdefaultValuesExtensionFunction: this.parameters.defaultValuesExtensionFunction,\n\t\t\t\tisCreateAction: this.parameters.isCreateAction,\n\t\t\t\tlabel: this.parameters.label,\n\t\t\t\tparameterValues: this.parameters.parameterValues,\n\t\t\t\tentitySetName: this.parameters.entitySetName,\n\t\t\t\tview: this.parameters.view,\n\t\t\t\tmessageHandler: this.parameters.messageHandler,\n\t\t\t\tevents: {\n\t\t\t\t\tonParameterDialogOpened: this.operationMessage.onParameterDialogOpened.bind(this.operationMessage),\n\t\t\t\t\tonParameterDialogClosed: this.operationMessage.onParameterDialogClosed.bind(this.operationMessage)\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.operationParameters.closeParameterDialog();\n\t\tthis.odataOperation?.clear();\n\t}\n\n\t/**\n\t * Set the values related to the parameters  for the operation\n\t * If the values are set the operation parameter dialog is skipped.\n\t * @param parametersValues The values for the parameters\n\t */\n\tpublic setDefaultParametersValues(parametersValues: Record<string, PrimitiveType>): void {\n\t\tthis.parametersValues = parametersValues;\n\t\tthis.externalParametersValues = true;\n\t}\n\n\t/**\n\t * Executes the operation.\n\t * @returns A promise containing the results\n\t */\n\tpublic async execute(): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\tthis.internalExecution();\n\t\treturn this.executionPromise;\n\t}\n\n\t/**\n\t * Executes the operation.\n\t */\n\tprivate async internalExecution(): Promise<void> {\n\t\tlet operationResult: PromiseSettledResult<OperationResult>[] = [];\n\t\ttry {\n\t\t\tthis.numberOfODataExecutions++;\n\t\t\tif (!this.externalParametersValues) {\n\t\t\t\tthis.parametersValues = await this.operationParameters.getOperationParameters();\n\t\t\t}\n\t\t\tif (this.numberOfODataExecutions === 1) {\n\t\t\t\tawait this.confirmAction();\n\t\t\t}\n\t\t\tthis.odataOperation = new ODataOperation(\n\t\t\t\tthis.convertedAction,\n\t\t\t\t{\n\t\t\t\t\tappComponent: this.appComponent,\n\t\t\t\t\tcontexts: this.contexts,\n\t\t\t\t\tmodel: this.model,\n\t\t\t\t\tlabel: this.parameters.label,\n\t\t\t\t\tinvocationGrouping: this.parameters.invocationGrouping,\n\t\t\t\t\tdisableStrictHandling: this.parameters.oDataProperties?.disableStrictHandling,\n\t\t\t\t\tdisableSideEffects: this.parameters.oDataProperties?.disableSideEffects,\n\t\t\t\t\tghostContextBindingProtection: this.parameters.oDataProperties?.ghostContextBindingProtection,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonStrictValidation: this.parameters.oDataEvents?.onStrictValidation,\n\t\t\t\t\t\tonStrictCancel: this.parameters.oDataEvents?.onStrictCancel,\n\t\t\t\t\t\tonStrictResponse: (messages412: Message[]): void => {\n\t\t\t\t\t\t\tthis.parameters.messageHandler.addWarningMessagesToMessageHandler(messages412);\n\t\t\t\t\t\t\tthis.operationMessage.onStrictHandling();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonODataResponse: this.parameters.oDataEvents?.onODataResponse,\n\t\t\t\t\t\tonODataSubmit: this.parameters.oDataEvents?.onODataSubmit,\n\t\t\t\t\t\tonRequestSideEffects: this.parameters.oDataEvents?.onRequestSideEffects\n\t\t\t\t\t},\n\t\t\t\t\tparametersValues: this.parametersValues\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tenhance$select: this.parameters.oDataProperties?.enhance$select,\n\t\t\t\t\tgroupId: this.parameters.oDataProperties?.groupId,\n\t\t\t\t\treplaceWithRVC: this.parameters.oDataProperties?.replaceWithRVC,\n\t\t\t\t\tignoreETag: this.parameters.oDataProperties?.ignoreETag,\n\t\t\t\t\tbindingParameters: this.parameters.bindingParameters,\n\t\t\t\t\tdeferredSubmit: this.parameters.oDataProperties?.deferredSubmit\n\t\t\t\t}\n\t\t\t);\n\t\t\toperationResult = await this.odataOperation.execute();\n\t\t\tthis.operationMessage.reactToOperations(operationResult);\n\n\t\t\tif (this.operationParameters.isParameterDialog()) {\n\t\t\t\tif (!operationResult.some(isRejected)) {\n\t\t\t\t\tthis.closeDialog();\n\t\t\t\t} else {\n\t\t\t\t\tawait this.messageCollectedPromise;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.operationParameters.isParameterDialogOpened()) {\n\t\t\t\tthis.setMessageCollectedPromise();\n\t\t\t\tthis.internalExecution();\n\t\t\t} else {\n\t\t\t\tthis.executionResolve(operationResult);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.executionReject(e);\n\t\t}\n\t}\n\n\t/**\n\t * Manages the parameter dialog after the messages.\n\t */\n\n\tprivate manageDialogOnMessages(): void {\n\t\tconst isErrorIntoParameterDialog = this.operationMessage.isErrorIntoParameterDialog();\n\n\t\tif (actionHelper.isStaticAction(this.convertedAction) || this.contexts.length === 0) {\n\t\t\t// Don't close the dialog if the action is static or an import\n\t\t\treturn this.resetDialog();\n\t\t} else if (this.parameters.invocationGrouping === InvocationGrouping.ChangeSet) {\n\t\t\t// When the end user cancel the process on the strict dialog, we need to keep the parameter dialog (only on ChangeSet) #6376592\n\t\t\tif (isErrorIntoParameterDialog || this.odataOperation?.isStrictCanceled() === true) {\n\t\t\t\treturn this.resetDialog();\n\t\t\t} else {\n\t\t\t\treturn this.closeDialog();\n\t\t\t}\n\t\t} else if ((this.parameters.contexts && this.parameters.contexts.length > 1) || !isErrorIntoParameterDialog) {\n\t\t\t// does not matter if error is in APD or not, if there are multiple contexts selected or if the error is not the APD, we close it.\n\t\t\treturn this.closeDialog();\n\t\t}\n\t\treturn this.resetDialog();\n\t}\n\n\t/**\n\t * Sets the message collected promise.\n\t * This promise is resolved when the messages are collected.\n\t */\n\tprivate setMessageCollectedPromise(): void {\n\t\tthis.messageCollectedPromise = new Promise<void>((resolve) => {\n\t\t\tthis.messageCollectedResolve = resolve;\n\t\t});\n\t}\n\n\t/**\n\t * Closes the parameter dialog.\n\t */\n\tprivate closeDialog(): void {\n\t\tthis.operationParameters.closeParameterDialog();\n\t}\n\n\t/**\n\t * Resets the parameter dialog.\n\t */\n\tprivate resetDialog(): void {\n\t\tthis.operationParameters.resetParameterDialogState();\n\t}\n\n\t/**\n\t * Gets the result of the operation.\n\t * @returns The result\n\t */\n\tpublic async getOperationResults(): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\treturn this.executionPromise;\n\t}\n\n\t/**\n\t * Checks if action is critical.\n\t * @returns True if the action is critical, otherwise false\n\t */\n\tprivate async isActionCritical(): Promise<boolean> {\n\t\t//only works with single context (as former code);\n\t\tconst context = this.parameters.contexts?.[0];\n\t\t// default is true.\n\t\tlet isActionCriticalValue: boolean | Promise<boolean> = true;\n\t\tconst isActionCriticalBindingExp = getIsActionCriticalExpression(this.convertedAction, convertTypes(this.model.getMetaModel()));\n\t\tif (isConstant(isActionCriticalBindingExp)) {\n\t\t\tisActionCriticalValue = compileConstant(isActionCriticalBindingExp, false, undefined, true) as boolean;\n\t\t} else if (context) {\n\t\t\tconst anyObject = new Any({ anyBoolean: compileExpression(isActionCriticalBindingExp) });\n\t\t\tanyObject.setModel(context.getModel());\n\t\t\tanyObject.setBindingContext(context);\n\t\t\tconst booleanBinding = anyObject.getBinding(\"anyBoolean\") as ODataPropertyBinding | undefined;\n\t\t\tif (booleanBinding) {\n\t\t\t\tif (booleanBinding.isA<CompositeBinding>(\"sap.ui.model.CompositeBinding\")) {\n\t\t\t\t\tawait Promise.all(booleanBinding.getBindings().map((nestedBinding) => nestedBinding.requestValue?.()));\n\t\t\t\t} else {\n\t\t\t\t\tawait booleanBinding.requestValue?.();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isActionCriticalValue;\n\t}\n\n\t/**\n\t * Manages the message box to display when an action is critical.\n\t * @returns A promise which is resolved if the action is not critical or the message box is closed.\n\t */\n\tprivate async confirmAction(): Promise<void> {\n\t\tif (!this.operationParameters.isParameterDialog()) {\n\t\t\tconst isCritical = await this.isActionCritical();\n\t\t\tif (isCritical) {\n\t\t\t\tconst actionName = actionHelper.getActionName(this.convertedAction);\n\t\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\t\tconst boundActionName = actionName.includes(\".\") ? actionName.split(\".\")[actionName.split(\".\").length - 1] : actionName;\n\t\t\t\t\tconst suffixResourceKey =\n\t\t\t\t\t\tboundActionName && this.parameters.entitySetName ? `${this.parameters.entitySetName}|${boundActionName}` : \"\";\n\n\t\t\t\t\tMessageBox.confirm(\n\t\t\t\t\t\tResourceModelHelper.getResourceModel(this.parameters.view ?? this.appComponent).getText(\n\t\t\t\t\t\t\t\"C_OPERATIONS_ACTION_CONFIRM_MESSAGE\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tsuffixResourceKey\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: this.getConfirmTitle(suffixResourceKey),\n\t\t\t\t\t\t\tonClose: (action: string) => {\n\t\t\t\t\t\t\t\tif (action === MessageBox.Action.OK) {\n\t\t\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treject(new Error(FELibrary.Constants.CancelActionDialog));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tgetConfirmTitle(suffixResourceKey: string): string | undefined {\n\t\t// A title only exists if it has been defined in the extension. Otherwise \"Confirmation\"\n\t\t// is used from the MessageBox control.\n\t\tif (!this.parameters.view) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst key = \"C_OPERATIONS_ACTION_CONFIRM_TITLE\";\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.view ?? this.appComponent);\n\t\tconst titleOverrideExists = resourceModel.checkIfResourceKeyExists(`${key}|${suffixResourceKey}`);\n\t\tif (titleOverrideExists) {\n\t\t\treturn resourceModel.getText(key, undefined, suffixResourceKey);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}