{"version":3,"file":"Form.js","names":["FormElementType","_exports","getDefaultFormatOptionsForForm","textLinesEdit","isFieldPartOfPreview","field","formPartOfPreview","valueOf","annotations","UI","PartOfPreview","undefined","getFormElementsFromAnnotations","facetDefinition","converterContext","formElements","resolvedTarget","getEntityTypeAnnotation","Target","value","formAnnotation","annotation","getDataFieldsFromAnnotations","semanticObjectAnnotationPath","getSemanticObjectPath","$Type","isReferencePropertyStaticallyHidden","formElement","key","KeyHelper","generateKeyFromDataField","type","Annotation","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","semanticObjectPath","formatOptions","isPartOfPreview","$target","connectedFields","Object","values","Data","filter","connectedField","hasOwnProperty","map","connnectedFieldElement","push","term","forEach","qualifier","getFormElementsFromManifest","manifestWrapper","getManifestWrapper","manifestFormContainer","getFormContainer","fields","keys","fieldId","id","Default","template","propertyPath","property","label","fetchTextFromMetaModel","position","placement","Placement","After","readOnly","semanticObject","actions","additionalSettings","sFormContainerId","createIdForAnnotation","sAnnotationPath","isVisible","compileExpression","not","equal","getExpressionFromAnnotation","Hidden","sEntitySetPath","entitySet","getEntitySet","dataModelObjectPathTarget","getDataModelObjectPath","targetObject","getTargetEntitySetPath","isNavigationProperty","containsTarget","getTargetObjectPath","isSingleton","aFormElements","insertCustomElements","OverrideType","overwrite","action","facetName","length","oActionShowDetails","getFormStandardActionButtonID","text","ifElse","pathInModel","ActionType","ShowFormDetails","press","some","oFormElement","useSingleTextAreaFieldAsNotes","annotationHidden","getFormContainersForCollection","formContainers","formContainerSettings","Facets","facet","isReferenceFacet","createFormDefinition","getFormID","useFormContainerLabels","hasFacetsNotPartOfPreview","childFacet","Error"],"sources":["./Form.ts"],"sourcesContent":["import type { Masked } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { Contact } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport { CommunicationAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport type {\n\tCollectionFacet,\n\tCollectionFacetTypes,\n\tDataFieldAbstractTypes,\n\tDataPoint,\n\tFacetTypes,\n\tFieldGroup,\n\tFieldGroupType,\n\tIdentification,\n\tInputMask,\n\tPartOfPreview,\n\tReferenceFacet,\n\tReferenceFacetTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, equal, getExpressionFromAnnotation, ifElse, not, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { getSemanticObjectPath } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { BaseAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport { isNavigationProperty, isSingleton } from \"sap/fe/core/helpers/TypeGuards\";\nimport { getTargetEntitySetPath, getTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { createIdForAnnotation } from \"../../../helpers/StableIdHelper\";\nimport type ConverterContext from \"../../ConverterContext\";\nimport type { FormManifestConfiguration, FormatOptionsType } from \"../../ManifestSettings\";\nimport { ActionType } from \"../../ManifestSettings\";\nimport type { ConfigurableObject, CustomElement } from \"../../helpers/ConfigurableObject\";\nimport { OverrideType, Placement, insertCustomElements } from \"../../helpers/ConfigurableObject\";\nimport { isReferencePropertyStaticallyHidden } from \"../../helpers/DataFieldHelper\";\nimport { getFormID, getFormStandardActionButtonID } from \"../../helpers/ID\";\nimport { KeyHelper } from \"../../helpers/Key\";\n\nexport type FormDefinition = {\n\tid: string;\n\tuseFormContainerLabels: boolean;\n\thasFacetsNotPartOfPreview: boolean;\n\tformContainers: FormContainer[];\n\tisVisible: CompiledBindingToolkitExpression;\n};\n\nexport enum FormElementType {\n\tDefault = \"Default\",\n\tSlot = \"Slot\",\n\tAnnotation = \"Annotation\"\n}\n\nexport type BaseFormElement = ConfigurableObject & {\n\tid?: string;\n\ttype: FormElementType;\n\tlabel?: string;\n\tvisible?: CompiledBindingToolkitExpression;\n\tformatOptions?: FormatOptionsType;\n\treadOnly?: boolean;\n\tsemanticObject?: string;\n};\n\nexport type AnnotationFormElement = BaseFormElement & {\n\tidPrefix?: string;\n\tannotationPath?: string;\n\tisValueMultilineText?: boolean;\n\tsemanticObjectPath?: string;\n\tconnectedFields?: { semanticObjectPath?: string }[];\n\tisPartOfPreview?: boolean;\n};\n\nexport type CustomFormElement = CustomElement<\n\tBaseFormElement & {\n\t\ttype: FormElementType;\n\t\ttemplate: string;\n\t\tpropertyPath?: string;\n\t}\n>;\n\nexport type FormElement = CustomFormElement | AnnotationFormElement;\n\nexport type AdditionalFormSettings = {\n\tuseSingleTextAreaFieldAsNotes?: boolean;\n};\n\nexport type FormContainer = {\n\tid?: string;\n\tformElements: FormElement[];\n\tannotationPath: string;\n\tisVisible: CompiledBindingToolkitExpression;\n\tannotationHidden: boolean;\n\tentitySet?: string;\n\tactions?: BaseAction[];\n\tuseSingleTextAreaFieldAsNotes?: boolean;\n};\n\n/**\n * Returns default format options for text fields on a form.\n * @returns Collection of format options with default values\n */\nfunction getDefaultFormatOptionsForForm(): FormatOptionsType {\n\treturn {\n\t\ttextLinesEdit: 4\n\t};\n}\n\nfunction isFieldPartOfPreview(field: DataFieldAbstractTypes, formPartOfPreview?: PartOfPreview): boolean {\n\t// Both each form and field can have the PartOfPreview annotation. Only if the form is not hidden (not partOfPreview) we allow toggling on field level\n\treturn (\n\t\tformPartOfPreview?.valueOf() === false ||\n\t\tfield.annotations?.UI?.PartOfPreview === undefined ||\n\t\tfield.annotations?.UI?.PartOfPreview.valueOf() === true\n\t);\n}\n\nfunction getFormElementsFromAnnotations(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationFormElement[] {\n\tconst formElements: AnnotationFormElement[] = [];\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(facetDefinition.Target.value);\n\tconst formAnnotation: Identification | FieldGroup | Contact | DataPoint | InputMask | Masked = resolvedTarget.annotation as\n\t\t| Identification\n\t\t| FieldGroup\n\t\t| Contact\n\t\t| DataPoint\n\t\t| InputMask\n\t\t| Masked;\n\tconverterContext = resolvedTarget.converterContext;\n\n\tfunction getDataFieldsFromAnnotations(field: DataFieldAbstractTypes, formPartOfPreview: PartOfPreview | undefined): void {\n\t\tconst semanticObjectAnnotationPath = getSemanticObjectPath(converterContext, field);\n\t\tif (\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForAction &&\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForActionGroup &&\n\t\t\t!isReferencePropertyStaticallyHidden(field)\n\t\t) {\n\t\t\tconst formElement = {\n\t\t\t\tkey: KeyHelper.generateKeyFromDataField(field),\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(field.fullyQualifiedName)}/`,\n\t\t\t\tsemanticObjectPath: semanticObjectAnnotationPath,\n\t\t\t\tformatOptions: getDefaultFormatOptionsForForm(),\n\t\t\t\tisPartOfPreview: isFieldPartOfPreview(field, formPartOfPreview)\n\t\t\t};\n\t\t\tif (\n\t\t\t\tfield.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\" &&\n\t\t\t\tfield.Target.$target?.$Type === \"com.sap.vocabularies.UI.v1.ConnectedFieldsType\"\n\t\t\t) {\n\t\t\t\tconst connectedFields = Object.values(field.Target.$target.Data).filter(\n\t\t\t\t\t(connectedField: unknown) => (connectedField as DataFieldAbstractTypes)?.hasOwnProperty(\"Value\")\n\t\t\t\t) as DataFieldAbstractTypes[];\n\t\t\t\t(formElement as AnnotationFormElement).connectedFields = connectedFields.map((connnectedFieldElement) => {\n\t\t\t\t\treturn { semanticObjectPath: getSemanticObjectPath(converterContext, connnectedFieldElement) };\n\t\t\t\t});\n\t\t\t}\n\t\t\tformElements.push(formElement);\n\t\t}\n\t}\n\n\tswitch (formAnnotation?.term) {\n\t\tcase UIAnnotationTerms.FieldGroup:\n\t\t\tformAnnotation.Data.forEach((field) => getDataFieldsFromAnnotations(field, facetDefinition.annotations?.UI?.PartOfPreview));\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.Identification:\n\t\t\tformAnnotation.forEach((field) => getDataFieldsFromAnnotations(field, facetDefinition.annotations?.UI?.PartOfPreview));\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.DataPoint:\n\t\t\tformElements.push({\n\t\t\t\t// key: KeyHelper.generateKeyFromDataField(formAnnotation),\n\t\t\t\tkey: `DataPoint::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.InputMask:\n\t\t\tformElements.push({\n\t\t\t\tkey: `MaskedInput::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase CommonAnnotationTerms.Masked:\n\t\t\tformElements.push({\n\t\t\t\tkey: `Masked::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase CommunicationAnnotationTerms.Contact:\n\t\t\tformElements.push({\n\t\t\t\t// key: KeyHelper.generateKeyFromDataField(formAnnotation),\n\t\t\t\tkey: `Contact::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn formElements;\n}\n\nexport function getFormElementsFromManifest(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, CustomFormElement> {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst manifestFormContainer: FormManifestConfiguration = manifestWrapper.getFormContainer(facetDefinition.Target.value);\n\tconst formElements: Record<string, CustomFormElement> = {};\n\tif (manifestFormContainer?.fields) {\n\t\tObject.keys(manifestFormContainer?.fields).forEach((fieldId) => {\n\t\t\tformElements[fieldId] = {\n\t\t\t\tkey: fieldId,\n\t\t\t\tid: `CustomFormElement::${fieldId}`,\n\t\t\t\ttype: manifestFormContainer.fields[fieldId].type || FormElementType.Default,\n\t\t\t\ttemplate: manifestFormContainer.fields[fieldId].template,\n\t\t\t\tpropertyPath: manifestFormContainer.fields[fieldId]?.property,\n\t\t\t\tlabel: converterContext.fetchTextFromMetaModel(manifestFormContainer.fields[fieldId].label),\n\t\t\t\tposition: manifestFormContainer.fields[fieldId].position || {\n\t\t\t\t\tplacement: Placement.After\n\t\t\t\t},\n\t\t\t\tformatOptions: {\n\t\t\t\t\t...getDefaultFormatOptionsForForm(),\n\t\t\t\t\t...manifestFormContainer.fields[fieldId].formatOptions\n\t\t\t\t},\n\t\t\t\t...(manifestFormContainer.fields[fieldId].readOnly !== undefined && {\n\t\t\t\t\treadOnly: manifestFormContainer.fields[fieldId].readOnly\n\t\t\t\t}),\n\t\t\t\t...(manifestFormContainer.fields[fieldId].semanticObject !== undefined && {\n\t\t\t\t\tsemanticObject: manifestFormContainer.fields[fieldId].semanticObject\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\t}\n\treturn formElements;\n}\n\nexport function getFormContainer(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormContainer {\n\tconst sFormContainerId = createIdForAnnotation(facetDefinition) as string;\n\tconst sAnnotationPath = converterContext.getEntitySetBasedAnnotationPath(facetDefinition.fullyQualifiedName);\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(facetDefinition.Target.value);\n\tconst isVisible = compileExpression(not(equal(true, getExpressionFromAnnotation(facetDefinition.annotations?.UI?.Hidden))));\n\tlet sEntitySetPath!: string;\n\t// resolvedTarget doesn't have a entitySet in case Containments and Paramterized services.\n\tconst entitySet = resolvedTarget.converterContext.getEntitySet();\n\tconst dataModelObjectPathTarget = resolvedTarget.converterContext.getDataModelObjectPath().targetObject;\n\tif (entitySet && entitySet !== converterContext.getEntitySet()) {\n\t\tsEntitySetPath = getTargetEntitySetPath(resolvedTarget.converterContext.getDataModelObjectPath());\n\t} else if (isNavigationProperty(dataModelObjectPathTarget) && dataModelObjectPathTarget?.containsTarget === true) {\n\t\tsEntitySetPath = getTargetObjectPath(resolvedTarget.converterContext.getDataModelObjectPath(), false);\n\t} else if (entitySet && !sEntitySetPath && isSingleton(entitySet)) {\n\t\tsEntitySetPath = entitySet.fullyQualifiedName;\n\t} else if (!entitySet && isNavigationProperty(dataModelObjectPathTarget) && dataModelObjectPathTarget?.containsTarget === false) {\n\t\tsEntitySetPath = getTargetObjectPath(resolvedTarget.converterContext.getDataModelObjectPath(), false);\n\t}\n\tconst aFormElements = insertCustomElements(\n\t\tgetFormElementsFromAnnotations(facetDefinition, converterContext),\n\t\tgetFormElementsFromManifest(facetDefinition, converterContext),\n\t\t{ formatOptions: OverrideType.overwrite, readOnly: OverrideType.overwrite, semanticObject: OverrideType.overwrite }\n\t);\n\n\tactions = actions !== undefined ? actions.filter((action) => action.facetName == facetDefinition.fullyQualifiedName) : [];\n\tif (actions.length === 0) {\n\t\tactions = undefined;\n\t}\n\n\tconst oActionShowDetails: BaseAction = {\n\t\tid: getFormStandardActionButtonID(sFormContainerId, \"ShowHideDetails\"),\n\t\tkey: \"StandardAction::ShowHideDetails\",\n\t\ttext: compileExpression(\n\t\t\tifElse(\n\t\t\t\tequal(pathInModel(\"showDetails\", \"internal\"), true),\n\t\t\t\tpathInModel(\"T_COMMON_OBJECT_PAGE_HIDE_FORM_CONTAINER_DETAILS\", \"sap.fe.i18n\"),\n\t\t\t\tpathInModel(\"T_COMMON_OBJECT_PAGE_SHOW_FORM_CONTAINER_DETAILS\", \"sap.fe.i18n\")\n\t\t\t)\n\t\t),\n\t\ttype: ActionType.ShowFormDetails,\n\t\tpress: \"FormContainerRuntime.toggleDetails\"\n\t};\n\n\tif (\n\t\tfacetDefinition.annotations?.UI?.PartOfPreview?.valueOf() !== false &&\n\t\taFormElements.some((oFormElement) => oFormElement.isPartOfPreview === false)\n\t) {\n\t\tif (actions !== undefined) {\n\t\t\tactions.push(oActionShowDetails);\n\t\t} else {\n\t\t\tactions = [oActionShowDetails];\n\t\t}\n\t}\n\n\treturn {\n\t\tid: sFormContainerId,\n\t\tformElements: aFormElements,\n\t\tannotationPath: sAnnotationPath,\n\t\tisVisible: isVisible,\n\t\tentitySet: sEntitySetPath,\n\t\tactions: actions,\n\t\tuseSingleTextAreaFieldAsNotes: additionalSettings?.useSingleTextAreaFieldAsNotes,\n\t\tannotationHidden: facetDefinition.annotations?.UI?.Hidden ? true : false\n\t};\n}\n\nfunction getFormContainersForCollection(\n\tfacetDefinition: CollectionFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormContainer[] {\n\tconst formContainers: FormContainer[] = [];\n\tconst formContainerSettings = {\n\t\tuseSingleTextAreaFieldAsNotes: additionalSettings?.useSingleTextAreaFieldAsNotes\n\t};\n\tfacetDefinition.Facets?.forEach((facet) => {\n\t\t// Ignore level 3 collection facet\n\t\tif (facet.$Type === UIAnnotationTypes.CollectionFacet) {\n\t\t\treturn;\n\t\t}\n\t\tformContainers.push(getFormContainer(facet as ReferenceFacetTypes, converterContext, actions, formContainerSettings));\n\t});\n\treturn formContainers;\n}\n\nexport function isReferenceFacet(facetDefinition: FacetTypes): facetDefinition is ReferenceFacetTypes {\n\treturn facetDefinition.$Type === UIAnnotationTypes.ReferenceFacet;\n}\n\nexport function createFormDefinition(\n\tfacetDefinition: FieldGroupType | CollectionFacet | ReferenceFacet | undefined,\n\tisVisible: CompiledBindingToolkitExpression,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormDefinition {\n\tswitch (facetDefinition?.$Type) {\n\t\tcase UIAnnotationTypes.CollectionFacet:\n\t\t\t// Keep only valid children\n\t\t\treturn {\n\t\t\t\tid: getFormID(facetDefinition),\n\t\t\t\tuseFormContainerLabels: true,\n\t\t\t\thasFacetsNotPartOfPreview: facetDefinition.Facets.some(\n\t\t\t\t\t(childFacet) => childFacet.annotations?.UI?.PartOfPreview?.valueOf() === false\n\t\t\t\t),\n\t\t\t\tformContainers: getFormContainersForCollection(facetDefinition, converterContext, actions, additionalSettings),\n\t\t\t\tisVisible: isVisible\n\t\t\t};\n\t\tcase UIAnnotationTypes.ReferenceFacet:\n\t\t\treturn {\n\t\t\t\tid: getFormID(facetDefinition),\n\t\t\t\tuseFormContainerLabels: false,\n\t\t\t\thasFacetsNotPartOfPreview: facetDefinition.annotations?.UI?.PartOfPreview?.valueOf() === false,\n\t\t\t\tformContainers: [getFormContainer(facetDefinition, converterContext, actions, additionalSettings)],\n\t\t\t\tisVisible: isVisible\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error(\"Cannot create form based on ReferenceURLFacet\");\n\t}\n}\n"],"mappings":"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","ignoreList":[]}