{"version":3,"names":["getChartActionsFromAnnotations","chartAnnotation","visualizationPath","converterContext","chartActions","Actions","forEach","dataField","key","KeyHelper","generateKeyFromDataField","isDataFieldForActionAbstract","Inline","Determining","$Type","ActionTarget","isBound","push","type","ActionType","DataFieldForAction","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","visible","getCompileExpressionForAction","isAIOperation","isActionAIOperation","undefined","DataFieldForIntentBasedNavigation","isNavigable","isAnnotationActionGroup","Menu","text","Label","toString","menu","map","action","getDataFieldAnnotationAction","isMenuAIOperation","getChartActions","aAnnotationActions","manifestActions","getActionsFromManifest","getManifestControlConfiguration","actions","actionOverwriteConfig","enabled","OverrideType","overwrite","enableOnSelect","command","position","insertCustomElements","commandActions","_exports","getP13nMode","manifestWrapper","getManifestWrapper","chartManifestSettings","variantManagement","getVariantManagement","aPersonalization","personalization","chartSettings","isControlVariant","VariantManagementType","Control","item","sort","filter","join","getHeaderInfo","header","headerVisible","getSelectionMode","selectionMode","getAggregatablePropertiesObject","aggProp","obj","Property","$PropertyPath","value","name","createChartVisualization","doNotCheckApplySupported","selectionPresentationVariantPath","aggregationHelper","AggregationHelper","getEntityType","isAnalyticsSupported","Error","aTransAggregations","getTransAggregations","aCustomAggregates","getCustomAggregateDefinitions","pageManifestSettings","p13nMode","Log","warning","mCustomAggregates","entityType","customAggregate","aContextDefiningProperties","annotations","Aggregation","ContextDefiningProperties","qualifier","relatedCustomAggregateProperty","entityProperties","find","property","label","Common","sortable","sortOrder","contextDefiningProperty","oCtxDefProperty","mTransAggregations","oResourceBundleCore","Library","getResourceBundleFor","element","Name","propertyPath","AggregatableProperty","aggregationMethod","AggregationMethod","getText","custom","aAggProps","getAggregatableProperties","aGrpProps","getGroupableProperties","mApplySupported","AggregatableProperties","GroupableProperties","prop","navigationPropertyPath","split","lastIndexOf","length","substring","title","Title","dataModelPath","getDataModelObjectPath","isEntitySet","entityName","targetEntitySet","startingEntitySet","sFilterbarId","getFilterBarID","getContextPath","oVizProperties","plotArea","window","start","end","legendGroup","layout","autoBindOnInit","getTemplateType","TemplateType","ObjectPage","ListReport","AnalyticalListPage","hasMultipleVisualizations","onSegmentedButtonPressed","allowedTransformations","getAllowedTransformations","enableSearch","includes","isInsightsVisible","getInsightsVisibility","isParameterizedEntitySet","getParameterEntityType","isInsightsEnabled","and","getInsightsEnablement","chartDimensionKeyAndRole","DimensionAttributes","dimensionAttribute","Dimension","Role","chartMeasureKeyAndRole","MeasureAttributes","measureAttribute","Measure","VisualizationType","Chart","id","getChartID","collection","getTargetObjectPath","apiId","generate","navigationPath","getAbsoluteAnnotationPath","filterId","vizProperties","JSON","stringify","customAgg","transAgg","applySupported","findVariantManagement","None","createChartVisualizationForTemplating","visualization","compileExpression","not","equal","getExpressionFromAnnotation","UI","Hidden","getRelativeModelPathFunction","createBlankChartVisualization","multiViews"],"sourceRoot":".","sources":["Chart.ts"],"sourcesContent":["import type { Property, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type { AggregatablePropertyType, AggregationMethod } from \"@sap-ux/vocabularies-types/vocabularies/Aggregation\";\nimport { AggregationAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/Aggregation\";\nimport type {\n\tChart,\n\tDataFieldAbstractTypes,\n\tDataFieldForActionGroup,\n\tDataFieldForActionGroupTypes,\n\tDataFieldForActionTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, equal, getExpressionFromAnnotation, not, type BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { isDataFieldForActionAbstract } from \"sap/fe/core/converters/annotations/DataField\";\nimport type {\n\tAnnotationAction,\n\tAnnotationActionActionGroup,\n\tBaseAction,\n\tCombinedAction,\n\tCustomAction,\n\tOverrideTypeAction\n} from \"sap/fe/core/converters/controls/Common/Action\";\nimport { getActionsFromManifest, isActionAIOperation, isMenuAIOperation } from \"sap/fe/core/converters/controls/Common/Action\";\nimport { OverrideType, insertCustomElements } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { KeyHelper } from \"sap/fe/core/converters/helpers/Key\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { getTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { ExpandPathType } from \"../../../../../../../../../types/metamodel_types\";\nimport type ConverterContext from \"../../ConverterContext\";\nimport type { ChartManifestConfiguration, ManifestAction } from \"../../ManifestSettings\";\nimport { ActionType, TemplateType, VariantManagementType, VisualizationType } from \"../../ManifestSettings\";\nimport type ManifestWrapper from \"../../ManifestWrapper\";\nimport { AggregationHelper } from \"../../helpers/Aggregation\";\nimport { getChartID, getFilterBarID } from \"../../helpers/ID\";\nimport { getInsightsEnablement, getInsightsVisibility } from \"../../helpers/InsightsHelpers\";\nimport type { ActualVisualizationAnnotations } from \"./DataVisualization\";\n\nexport type ChartApplySupported = {\n\t$Type: string;\n\tenableSearch?: boolean;\n\tAggregatableProperties?: (ExpandPathType<PropertyPath> & { Property: ExpandPathType<PropertyPath> })[];\n\tGroupableProperties?: (ExpandPathType<PropertyPath> & { Property: ExpandPathType<PropertyPath> })[];\n};\nexport type ChartTemplateVisualization = {\n\ttype: VisualizationType.Chart;\n\tid: string;\n\tapiId: string;\n\tentityName: string;\n\tcollection: string;\n\tannotationPath: string;\n\tapplySupported: ChartApplySupported;\n\tisParameterizedEntitySet?: boolean;\n};\n\n/**\n * @typedef ChartVisualization\n */\nexport type ChartVisualization = ChartTemplateVisualization & {\n\tentityName: string;\n\tpersonalization?: string | boolean;\n\tnavigationPath: string;\n\tfilterId?: string;\n\tvizProperties: string;\n\tactions: BaseAction[];\n\tcommandActions: Record<string, CustomAction>;\n\ttitle: string | undefined;\n\tautoBindOnInit: boolean | undefined;\n\tonSegmentedButtonPressed: string;\n\tvisible: string;\n\tcustomAgg: object;\n\ttransAgg: object;\n\tmultiViews?: boolean;\n\tvariantManagement: VariantManagementType;\n\tselectionPresentationVariantPath?: string;\n\tisInsightsEnabled?: BindingToolkitExpression<boolean>;\n\tisInsightsVisible?: BindingToolkitExpression<boolean>;\n\theader?: string;\n\theaderVisible?: boolean;\n\tselectionMode?: string;\n\tchartDimensionKeyAndRole?: object;\n\tchartMeasureKeyAndRole?: object;\n};\n\nexport type ChartP13nType = string | boolean | undefined;\n\n/**\n * Method to retrieve all chart actions from annotations.\n * @param chartAnnotation\n * @param visualizationPath\n * @param converterContext\n * @returns The chart actions from the annotation\n */\nfunction getChartActionsFromAnnotations(\n\tchartAnnotation: Chart,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Array<AnnotationAction | AnnotationActionActionGroup> {\n\tconst chartActions: Array<AnnotationAction | AnnotationActionActionGroup> = [];\n\tif (chartAnnotation?.Actions) {\n\t\tchartAnnotation.Actions.forEach((dataField: DataFieldAbstractTypes | DataFieldForActionGroupTypes) => {\n\t\t\tconst key = KeyHelper.generateKeyFromDataField(dataField);\n\t\t\tif (isDataFieldForActionAbstract(dataField) && !dataField.Inline && !dataField.Determining) {\n\t\t\t\tswitch (dataField.$Type) {\n\t\t\t\t\tcase UIAnnotationTypes.DataFieldForAction:\n\t\t\t\t\t\tif (dataField.ActionTarget && !dataField.ActionTarget.isBound) {\n\t\t\t\t\t\t\tchartActions.push({\n\t\t\t\t\t\t\t\ttype: ActionType.DataFieldForAction,\n\t\t\t\t\t\t\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tvisible: getCompileExpressionForAction(dataField, converterContext),\n\t\t\t\t\t\t\t\tisAIOperation: isActionAIOperation(dataField) === true || undefined\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n\t\t\t\t\t\tchartActions.push({\n\t\t\t\t\t\t\ttype: ActionType.DataFieldForIntentBasedNavigation,\n\t\t\t\t\t\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvisible: getCompileExpressionForAction(dataField, converterContext),\n\t\t\t\t\t\t\tisNavigable: true\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isAnnotationActionGroup(dataField)) {\n\t\t\t\tchartActions.push({\n\t\t\t\t\ttype: ActionType.Menu,\n\t\t\t\t\ttext: dataField.Label?.toString(),\n\t\t\t\t\tvisible: getCompileExpressionForAction(dataField, converterContext),\n\t\t\t\t\tmenu: dataField.Actions.map((action) =>\n\t\t\t\t\t\tgetDataFieldAnnotationAction(action as DataFieldForActionTypes, converterContext)\n\t\t\t\t\t),\n\t\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\t\tisAIOperation: isMenuAIOperation(dataField.Actions) === true || undefined\n\t\t\t\t} as AnnotationActionActionGroup);\n\t\t\t}\n\t\t});\n\t}\n\treturn chartActions;\n}\n/**\n * Checks if the dataField is a DataFieldForActionGroup.\n * @param dataField The dataField to check.\n * @returns The dataField if it matches DataFieldForActionGroup.\n */\nfunction isAnnotationActionGroup(dataField: DataFieldAbstractTypes): dataField is DataFieldForActionGroup {\n\treturn dataField.$Type === UIAnnotationTypes.DataFieldForActionGroup;\n}\n\n/**\n * Creates and returns DataFieldForAction for menu of DataFieldForActionGroup.\n * @param dataField The datafield to get the annotation action from.\n * @param converterContext The converter context.\n * @returns An annotation action.\n */\nfunction getDataFieldAnnotationAction(\n\tdataField: DataFieldForActionTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationAction {\n\treturn {\n\t\ttype: ActionType.DataFieldForAction,\n\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\tvisible: getCompileExpressionForAction(dataField, converterContext)\n\t};\n}\n\nexport function getChartActions(\n\tchartAnnotation: Chart,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): CombinedAction {\n\tconst aAnnotationActions = getChartActionsFromAnnotations(chartAnnotation, visualizationPath, converterContext);\n\tconst manifestActions = getActionsFromManifest(\n\t\tconverterContext.getManifestControlConfiguration<ChartManifestConfiguration>(visualizationPath).actions as Record<\n\t\t\tstring,\n\t\t\tManifestAction\n\t\t>,\n\t\tconverterContext,\n\t\taAnnotationActions\n\t);\n\tconst actionOverwriteConfig: OverrideTypeAction = {\n\t\tenabled: OverrideType.overwrite,\n\t\tenableOnSelect: OverrideType.overwrite,\n\t\tvisible: OverrideType.overwrite,\n\t\tcommand: OverrideType.overwrite,\n\t\tposition: OverrideType.overwrite\n\t};\n\tconst chartActions = insertCustomElements<BaseAction>(aAnnotationActions, manifestActions.actions, actionOverwriteConfig);\n\treturn {\n\t\tactions: chartActions,\n\t\tcommandActions: manifestActions.commandActions\n\t};\n}\n\nexport function getP13nMode(\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): string | boolean | undefined {\n\tconst manifestWrapper: ManifestWrapper = converterContext.getManifestWrapper();\n\tconst chartManifestSettings: ChartManifestConfiguration = converterContext.getManifestControlConfiguration(visualizationPath);\n\tconst variantManagement: VariantManagementType = manifestWrapper.getVariantManagement();\n\tconst aPersonalization: string[] = [];\n\t// Personalization configured in manifest.\n\tconst personalization = chartManifestSettings?.chartSettings?.personalization;\n\tconst isControlVariant = variantManagement === VariantManagementType.Control ? true : false;\n\t// if personalization is set to false do not show any option\n\tif ((personalization !== undefined && !personalization) || personalization == \"false\") {\n\t\treturn false;\n\t}\n\tif (typeof personalization === \"object\") {\n\t\t// Specific personalization options enabled in manifest. Use them as is.\n\t\tif (personalization.type) {\n\t\t\taPersonalization.push(\"Type\");\n\t\t}\n\t\tif (personalization.item) {\n\t\t\taPersonalization.push(\"Item\");\n\t\t}\n\t\tif (personalization.sort) {\n\t\t\taPersonalization.push(\"Sort\");\n\t\t}\n\t\tif (personalization.filter) {\n\t\t\taPersonalization.push(\"Filter\");\n\t\t}\n\t\treturn aPersonalization.join(\",\");\n\t} else if (isControlVariant || !!personalization) {\n\t\t// manifest has personalization configured, check if it's true\n\t\t// if manifest doesn't have personalization, check for variant management is set to control\n\t\treturn \"Sort,Type,Item,Filter\";\n\t} else {\n\t\t// if manifest doesn't have personalization, show default options without filter\n\t\treturn \"Sort,Type,Item\";\n\t}\n}\n\nexport function getHeaderInfo(\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): { header: string | undefined; headerVisible: boolean | undefined } {\n\tconst chartManifestSettings: ChartManifestConfiguration = converterContext.getManifestControlConfiguration(visualizationPath);\n\treturn {\n\t\theader: chartManifestSettings.chartSettings?.header,\n\t\theaderVisible: chartManifestSettings?.chartSettings?.headerVisible\n\t};\n}\n\nexport function getSelectionMode(\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): \"Multiple\" | \"Single\" | \"None\" | undefined {\n\tconst chartManifestSettings: ChartManifestConfiguration = converterContext.getManifestControlConfiguration(visualizationPath);\n\treturn chartManifestSettings.chartSettings?.selectionMode;\n}\nexport type ChartCustomAggregate = {\n\tname: string;\n\tlabel: string;\n\tsortable: boolean;\n\tsortOrder: \"both\";\n\tcontextDefiningProperty: string[];\n};\n\nexport type TransAgg = {\n\tname: string;\n\tpropertyPath: string;\n\taggregationMethod: AggregationMethod;\n\tlabel: string;\n\tsortable: boolean;\n\tsortOrder: \"both\";\n\tcustom: boolean;\n};\nfunction getAggregatablePropertiesObject(aggProp: AggregatablePropertyType | Property): { Property: { $PropertyPath: string } } {\n\tlet obj;\n\tif ((aggProp as AggregatablePropertyType)?.Property) {\n\t\tobj = {\n\t\t\tProperty: {\n\t\t\t\t$PropertyPath: (aggProp as AggregatablePropertyType)?.Property?.value\n\t\t\t}\n\t\t};\n\t} else {\n\t\tobj = {\n\t\t\tProperty: {\n\t\t\t\t$PropertyPath: (aggProp as Property)?.name\n\t\t\t}\n\t\t};\n\t}\n\treturn obj;\n}\n/**\n * Create the ChartVisualization configuration that will be used to display a chart using the Chart building block.\n * @param chartAnnotation The targeted chart annotation\n * @param visualizationPath The path of the visualization annotation\n * @param converterContext The converter context\n * @param doNotCheckApplySupported Flag that indicates whether ApplySupported needs to be checked or not\n * @param selectionPresentationVariantPath\n * @returns The chart visualization based on the annotation\n */\nexport function createChartVisualization(\n\tchartAnnotation: Chart,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tdoNotCheckApplySupported?: boolean,\n\tselectionPresentationVariantPath?: string\n): ChartVisualization {\n\tconst aggregationHelper = new AggregationHelper(converterContext.getEntityType(), converterContext, true); // passing the last parameter as true to consider the old annotations i.e. Aggregation.Aggregatable for backward compatibility in case of chart\n\tif (!doNotCheckApplySupported && !aggregationHelper.isAnalyticsSupported()) {\n\t\tthrow new Error(\"ApplySupported is not added to the annotations\");\n\t}\n\tconst aTransAggregations = aggregationHelper.getTransAggregations();\n\tconst aCustomAggregates = aggregationHelper.getCustomAggregateDefinitions();\n\tconst pageManifestSettings: ManifestWrapper = converterContext.getManifestWrapper();\n\tconst variantManagement: VariantManagementType = pageManifestSettings.getVariantManagement();\n\tconst p13nMode: ChartP13nType = getP13nMode(visualizationPath, converterContext);\n\tif (p13nMode === undefined && variantManagement === \"Control\") {\n\t\tLog.warning(\"Variant Management cannot be enabled when personalization is disabled\");\n\t}\n\tconst mCustomAggregates: Record<string, object> = {};\n\tif (aCustomAggregates) {\n\t\tconst entityType = aggregationHelper.getEntityType();\n\t\tfor (const customAggregate of aCustomAggregates) {\n\t\t\tconst aContextDefiningProperties = customAggregate?.annotations?.Aggregation?.ContextDefiningProperties;\n\t\t\tconst qualifier = customAggregate?.qualifier;\n\t\t\tconst relatedCustomAggregateProperty = qualifier && entityType.entityProperties.find((property) => property.name === qualifier);\n\t\t\tconst label = relatedCustomAggregateProperty && relatedCustomAggregateProperty?.annotations?.Common?.Label?.toString();\n\t\t\tmCustomAggregates[qualifier] = {\n\t\t\t\tname: qualifier,\n\t\t\t\tlabel: label || `Custom Aggregate (${qualifier})`,\n\t\t\t\tsortable: true,\n\t\t\t\tsortOrder: \"both\",\n\t\t\t\tcontextDefiningProperty: aContextDefiningProperties\n\t\t\t\t\t? aContextDefiningProperties.map((oCtxDefProperty) => {\n\t\t\t\t\t\t\treturn oCtxDefProperty.value;\n\t\t\t\t\t  })\n\t\t\t\t\t: []\n\t\t\t};\n\t\t}\n\t}\n\n\tconst mTransAggregations: Record<string, TransAgg> = {};\n\tconst oResourceBundleCore = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\tif (aTransAggregations) {\n\t\tfor (const element of aTransAggregations) {\n\t\t\tmTransAggregations[element.Name as string] = {\n\t\t\t\tname: element.Name as string,\n\t\t\t\tpropertyPath: element.AggregatableProperty.value,\n\t\t\t\taggregationMethod: element.AggregationMethod,\n\t\t\t\tlabel: element?.annotations?.Common?.Label\n\t\t\t\t\t? element?.annotations?.Common?.Label?.toString()\n\t\t\t\t\t: `${oResourceBundleCore.getText(\"AGGREGATABLE_PROPERTY\")} (${element.Name})`,\n\t\t\t\tsortable: true,\n\t\t\t\tsortOrder: \"both\",\n\t\t\t\tcustom: false\n\t\t\t};\n\t\t}\n\t}\n\n\tconst aAggProps = aggregationHelper.getAggregatableProperties();\n\tconst aGrpProps = aggregationHelper.getGroupableProperties();\n\tconst mApplySupported = {} as ChartApplySupported;\n\tmApplySupported.$Type = AggregationAnnotationTypes.ApplySupportedType;\n\tmApplySupported.AggregatableProperties = [];\n\tmApplySupported.GroupableProperties = [];\n\n\tif (aAggProps) {\n\t\tmApplySupported.AggregatableProperties = aAggProps.map((prop) =>\n\t\t\tgetAggregatablePropertiesObject(prop)\n\t\t) as (ExpandPathType<PropertyPath> & { Property: ExpandPathType<PropertyPath> })[];\n\t}\n\n\tif (aGrpProps) {\n\t\tmApplySupported.GroupableProperties = aGrpProps.map((prop) => ({\n\t\t\t[\"$PropertyPath\"]: prop.value\n\t\t})) as (ExpandPathType<PropertyPath> & { Property: ExpandPathType<PropertyPath> })[];\n\t}\n\n\tconst chartActions = getChartActions(chartAnnotation, visualizationPath, converterContext);\n\tlet [navigationPropertyPath /*, annotationPath*/] = visualizationPath.split(\"@\");\n\tif (navigationPropertyPath.lastIndexOf(\"/\") === navigationPropertyPath.length - 1) {\n\t\t// Drop trailing slash\n\t\tnavigationPropertyPath = navigationPropertyPath.substring(0, navigationPropertyPath.length - 1);\n\t}\n\tconst title = chartAnnotation.Title?.toString() || \"\"; // read title from chart annotation\n\tconst dataModelPath = converterContext.getDataModelObjectPath();\n\tconst isEntitySet: boolean = navigationPropertyPath.length === 0;\n\tconst entityName: string = dataModelPath.targetEntitySet ? dataModelPath.targetEntitySet.name : dataModelPath.startingEntitySet.name;\n\tconst sFilterbarId = isEntitySet ? getFilterBarID(converterContext.getContextPath()) : undefined;\n\tconst oVizProperties = {\n\t\tplotArea: {\n\t\t\twindow: {\n\t\t\t\tstart: \"firstDataPoint\",\n\t\t\t\tend: \"lastDataPoint\"\n\t\t\t}\n\t\t},\n\t\tlegendGroup: {\n\t\t\tlayout: {\n\t\t\t\tposition: \"bottom\"\n\t\t\t}\n\t\t}\n\t};\n\tlet autoBindOnInit: boolean | undefined;\n\tif (converterContext.getTemplateType() === TemplateType.ObjectPage) {\n\t\tautoBindOnInit = true;\n\t} else if (\n\t\tconverterContext.getTemplateType() === TemplateType.ListReport ||\n\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage\n\t) {\n\t\tautoBindOnInit = false;\n\t}\n\tconst hasMultipleVisualizations =\n\t\tconverterContext.getManifestWrapper().hasMultipleVisualizations() ||\n\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage;\n\tconst onSegmentedButtonPressed = hasMultipleVisualizations ? \".handlers.onSegmentedButtonPressed\" : \"\";\n\tconst visible = hasMultipleVisualizations ? \"{= ${pageInternal>alpContentView} !== 'Table'}\" : \"true\";\n\tconst allowedTransformations = aggregationHelper.getAllowedTransformations();\n\tmApplySupported.enableSearch = allowedTransformations ? allowedTransformations.includes(\"search\") : true;\n\tlet qualifier = \"\";\n\tif (chartAnnotation.fullyQualifiedName.split(\"#\").length > 1) {\n\t\tqualifier = chartAnnotation.fullyQualifiedName.split(\"#\")[1];\n\t}\n\tconst isInsightsVisible = getInsightsVisibility(\"Analytical\", converterContext, visualizationPath);\n\tconst isParameterizedEntitySet = converterContext.getParameterEntityType() ? true : false;\n\tconst isInsightsEnabled = and(getInsightsEnablement(), isInsightsVisible);\n\tconst { header, headerVisible } = getHeaderInfo(visualizationPath, converterContext);\n\tconst selectionMode = getSelectionMode(visualizationPath, converterContext);\n\tconst chartDimensionKeyAndRole: Record<string, string>[] = [];\n\tchartAnnotation?.DimensionAttributes?.forEach((dimensionAttribute) => {\n\t\tconst obj: Record<string, string> = {};\n\t\tobj[dimensionAttribute?.Dimension?.value as string] = dimensionAttribute?.Role as string;\n\t\tchartDimensionKeyAndRole.push(obj);\n\t});\n\n\tconst chartMeasureKeyAndRole: Record<string, string>[] = [];\n\tchartAnnotation?.MeasureAttributes?.forEach((measureAttribute) => {\n\t\tconst obj: Record<string, string> = {};\n\t\tobj[measureAttribute?.Measure?.value as string] = measureAttribute?.Role as string;\n\t\tchartMeasureKeyAndRole.push({});\n\t});\n\treturn {\n\t\ttype: VisualizationType.Chart,\n\t\tid: qualifier\n\t\t\t? getChartID(isEntitySet ? entityName : navigationPropertyPath, qualifier, VisualizationType.Chart)\n\t\t\t: getChartID(isEntitySet ? entityName : navigationPropertyPath, VisualizationType.Chart),\n\t\tcollection: getTargetObjectPath(converterContext.getDataModelObjectPath()),\n\t\tapiId: generate([\n\t\t\tqualifier\n\t\t\t\t? getChartID(isEntitySet ? entityName : navigationPropertyPath, qualifier, VisualizationType.Chart)\n\t\t\t\t: getChartID(isEntitySet ? entityName : navigationPropertyPath, VisualizationType.Chart),\n\t\t\t\"Chart\"\n\t\t]),\n\t\tentityName: entityName,\n\t\tpersonalization: getP13nMode(visualizationPath, converterContext),\n\t\tnavigationPath: navigationPropertyPath,\n\t\tannotationPath: converterContext.getAbsoluteAnnotationPath(visualizationPath),\n\t\tfilterId: sFilterbarId,\n\t\tvizProperties: JSON.stringify(oVizProperties),\n\t\tactions: chartActions.actions,\n\t\tcommandActions: chartActions.commandActions,\n\t\ttitle: title,\n\t\tautoBindOnInit: autoBindOnInit,\n\t\tonSegmentedButtonPressed: onSegmentedButtonPressed,\n\t\tvisible: visible,\n\t\tcustomAgg: mCustomAggregates,\n\t\ttransAgg: mTransAggregations,\n\t\tapplySupported: mApplySupported,\n\t\tselectionPresentationVariantPath,\n\t\tvariantManagement: findVariantManagement(p13nMode, variantManagement),\n\t\tisInsightsEnabled: isInsightsEnabled,\n\t\tisInsightsVisible: isInsightsVisible,\n\t\tisParameterizedEntitySet: isParameterizedEntitySet,\n\t\theader: header,\n\t\theaderVisible: headerVisible,\n\t\tselectionMode: selectionMode,\n\t\tchartDimensionKeyAndRole: chartDimensionKeyAndRole,\n\t\tchartMeasureKeyAndRole: chartMeasureKeyAndRole\n\t};\n}\n/**\n * Method to determine the variant management.\n * @param p13nMode\n * @param variantManagement\n * @returns The variant management for the chart\n */\nfunction findVariantManagement(p13nMode: ChartP13nType, variantManagement: VariantManagementType): VariantManagementType {\n\treturn variantManagement === \"Control\" && !p13nMode ? VariantManagementType.None : variantManagement;\n}\n\n/**\n * Create the ChartVisualization configuration that will be used to during templating.\n * @param converterContext The converter context\n * @param visualizationPath The path of the visualization annotation\n * @param visualization The visualization annotation\n * @returns The chart visualization based on the annotation used for templating\n */\nexport function createChartVisualizationForTemplating(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tvisualizationPath: string,\n\tvisualization: ActualVisualizationAnnotations\n): ChartTemplateVisualization {\n\tconst qualifier = visualization.fullyQualifiedName.split(\"#\").length > 1 ? visualization.fullyQualifiedName.split(\"#\")[1] : \"\";\n\tconst [navigationPropertyPath] = visualizationPath.split(\"@\");\n\n\tconst dataModelPath = converterContext.getDataModelObjectPath();\n\tconst isEntitySet: boolean = navigationPropertyPath.length === 0;\n\tconst entityName: string = dataModelPath.targetEntitySet?.name ?? dataModelPath.startingEntitySet.name;\n\tconst aggregationHelper = new AggregationHelper(converterContext.getEntityType(), converterContext, true);\n\tconst allowedTransformations = aggregationHelper.getAllowedTransformations();\n\tconst isParameterizedEntitySet = !!converterContext.getParameterEntityType();\n\treturn {\n\t\tannotationPath: converterContext.getAbsoluteAnnotationPath(visualizationPath),\n\t\tisParameterizedEntitySet,\n\t\tcollection: getTargetObjectPath(converterContext.getDataModelObjectPath()),\n\t\ttype: VisualizationType.Chart,\n\t\tentityName,\n\t\tid: qualifier\n\t\t\t? getChartID(isEntitySet ? entityName : navigationPropertyPath, qualifier, VisualizationType.Chart)\n\t\t\t: getChartID(isEntitySet ? entityName : navigationPropertyPath, VisualizationType.Chart),\n\t\tapiId: generate([\n\t\t\tqualifier\n\t\t\t\t? getChartID(isEntitySet ? entityName : navigationPropertyPath, qualifier, VisualizationType.Chart)\n\t\t\t\t: getChartID(isEntitySet ? entityName : navigationPropertyPath, VisualizationType.Chart),\n\t\t\t\"Chart\"\n\t\t]),\n\t\tapplySupported: {\n\t\t\t$Type: \"Org.OData.Aggregation.V1.ApplySupportedType\",\n\t\t\tenableSearch: allowedTransformations?.includes(\"search\") ?? true\n\t\t}\n\t};\n}\n\n/**\n * Method to get compile expression for DataFieldForAction and DataFieldForIntentBasedNavigation.\n * @param dataField\n * @param converterContext\n * @returns Compile expression for DataFieldForAction and DataFieldForIntentBasedNavigation\n */\nfunction getCompileExpressionForAction(\n\tdataField: DataFieldAbstractTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): CompiledBindingToolkitExpression {\n\treturn compileExpression(\n\t\tnot(\n\t\t\tequal(\n\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\tdataField.annotations?.UI?.Hidden,\n\t\t\t\t\t[],\n\t\t\t\t\tundefined,\n\t\t\t\t\tconverterContext.getRelativeModelPathFunction()\n\t\t\t\t),\n\t\t\t\ttrue\n\t\t\t)\n\t\t)\n\t);\n}\n\nexport function createBlankChartVisualization(converterContext: ConverterContext<PageContextPathTarget>): ChartVisualization {\n\tconst hasMultipleVisualizations =\n\t\tconverterContext.getManifestWrapper().hasMultipleVisualizations() ||\n\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage;\n\tconst dataModelPath = converterContext.getDataModelObjectPath();\n\tconst entityName = dataModelPath.targetEntitySet ? dataModelPath.targetEntitySet.name : dataModelPath.startingEntitySet.name;\n\n\tconst visualization: ChartVisualization = {\n\t\ttype: VisualizationType.Chart,\n\t\tid: getChartID(entityName, VisualizationType.Chart),\n\t\tapiId: generate([getChartID(entityName, VisualizationType.Chart), \"Chart\"]),\n\t\tentityName: entityName,\n\t\ttitle: \"\",\n\t\tcollection: \"\",\n\t\tpersonalization: undefined,\n\t\tnavigationPath: \"\",\n\t\tannotationPath: \"\",\n\t\tvizProperties: JSON.stringify({\n\t\t\tlegendGroup: {\n\t\t\t\tlayout: {\n\t\t\t\t\tposition: \"bottom\"\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tactions: [],\n\t\tcommandActions: {},\n\t\tautoBindOnInit: false,\n\t\tonSegmentedButtonPressed: \"\",\n\t\tvisible: hasMultipleVisualizations ? \"{= ${pageInternal>alpContentView} !== 'Table'}\" : \"true\",\n\t\tcustomAgg: {},\n\t\ttransAgg: {},\n\t\tapplySupported: {\n\t\t\t$Type: \"Org.OData.Aggregation.V1.ApplySupportedType\",\n\t\t\tAggregatableProperties: [],\n\t\t\tGroupableProperties: [],\n\t\t\tenableSearch: false\n\t\t},\n\t\tmultiViews: false,\n\t\tvariantManagement: VariantManagementType.None\n\t};\n\n\treturn visualization;\n}\n"],"mappings":"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","ignoreList":[],"file":"Chart-dbg.js"}