{"version":3,"names":["filterFieldType","sEdmString","sStringDataType","getFieldGroupFilterGroups","fieldGroup","filterFacetMap","Data","forEach","dataField","$Type","Value","path","group","fullyQualifiedName","groupLabel","Label","toString","annotations","Common","qualifier","getExcludedFilterProperties","lrTableVisualizations","converterContext","selectionVariantPaths","Set","manifestFilterFields","getManifestWrapper","getFilterConfiguration","filterFields","selectionFieldPaths","getDataModelObjectPath","targetEntityType","UI","SelectionFields","map","selectionField","value","Object","keys","filter","key","template","visualization","tableFilters","control","filters","hiddenFilters","paths","quickFilters","annotationPath","has","add","selectionVariantConfig","getSelectionVariantConfiguration","propertyNames","propertyName","flat","_getConditionPath","entityType","propertyPath","parts","split","partialPath","length","part","shift","property","resolvePath","isMultipleNavigationProperty","_createFilterSelectionField","fullPropertyPath","includeHidden","targetType","undefined","Hidden","valueOf","getAnnotationEntityType","filterField","KeyHelper","getSelectionFieldKeyFromPath","getAbsoluteAnnotationPath","conditionPath","availability","HiddenFilter","label","name","getSettingsOfDefaultFilterFields","standardDynamicDateRangeKeys","StandardDynamicDateRangeKeys","TO","TOMORROW","NEXTWEEK","NEXTMONTH","NEXTQUARTER","NEXTYEAR","settings","operatorConfiguration","equals","join","exclude","_getSelectionFields","navigationPath","properties","selectionFieldMap","fullPath","_getSelectionFieldsByPath","propertyPaths","selectionFields","localSelectionFields","enhancedPath","enhanceDataModelPath","targetObject","navigationProperties","find","navigationProperty","isNavigationProperty","entityProperties","isComplexType","getTargetNavigationPath","_getFilterField","getDiagnostics","addIssue","IssueCategory","Annotation","IssueSeverity","High","IssueType","MISSING_SELECTIONFIELD","isParameter","ResultContext","_getDefaultFilterFields","aSelectOptions","excludedFilterProperties","annotatedSelectionFields","UISelectionFields","SelectionField","selectOption","PropertyName","sPropertyPath","currentSelectionFields","FilterField","getFilterField","push","defaultFilterValue","FilterDefaultValue","_getParameterFields","dataModelObjectPath","parameterEntityType","startingEntitySet","isParameterized","targetEntitySet","parameterConverterContext","getConverterContextFor","getFilterBarHideBasicSearch","listReportTables","charts","noSearchInCharts","every","chart","applySupported","enableSearch","noSearchInTables","table","enableAnalytics","type","enableBasicSearch","contextPath","getContextPath","_exports","getManifestFilterFields","manifestWrapper","settingsContextPath","getEntitySet","filterConfigurationPath","getFilterConfigurationPath","fbConfig","definedFilterFields","getPathFromSelectionFieldKey","sKey","Slot","Default","visualFilter","getVisualFilters","isCustomFilter","slotName","documentRefText","fetchTextFromMetaModel","position","placement","Placement","After","required","objectPath","filterBarContextPath","metaPath","startsWith","replace","getFilterRestrictions","oFilterRestrictionsAnnotation","sRestriction","aProps","oProperty","getSearchFilterPropertyInfo","dataType","maxConditions","getEditStateFilterPropertyInfo","hiddenFilter","getSearchRestrictions","entitySet","isEntitySet","Capabilities","SearchRestrictions","getNavigationRestrictions","sNavigationPath","oNavigationRestrictions","NavigationRestrictions","aRestrictedProperties","RestrictedProperties","oRestrictedProperty","NavigationProperty","_fetchBasicPropertyInfo","oFilterFieldInfo","display","caseSensitive","menu","_getMissingLabelForManifestFilterFields","hasOwnProperty","displayMode","oPropertyAnnotations","oCollectionAnnotations","oTextAnnotation","Text","oTextArrangmentAnnotation","TextArrangement","fetchPropertyInfo","oTypeConfig","oPropertyInfo","sAnnotationPath","targetPropertyObject","oFormatOptions","formatOptions","oConstraints","constraints","assign","isMultiValue","bIsMultiValue","filterExpression","indexOf","_isFilterableNavigationProperty","entry","includes","addChildNavigationProperties","navProperties","targetProperty","$target","additionalPropertyPath","getAssociatedTextPropertyPath","getAssociatedCurrencyPropertyPath","getAssociatedUnitPropertyPath","getAssociatedTimezonePropertyPath","navigationPropertyPath","getNavigationPropertiesRecursively","Target","innerDataField","getRelativePaths","getAnnotatedSelectionFieldData","lrTables","arguments","lineItemTerm","getEntityType","getEntityTypeAnnotation","annotation","ModelHelper","isDraftRoot","selectionVariant","getSelectionVariant","SelectOptions","propertyInfoFields","reduce","filterPropertyPath","defaultFilterFields","fetchTypeConfig","getTypeConfig","nullable","parseKeepsEmptyString","assignDataTypeToPropertyInfo","propertyInfoField","aRequiredProps","aTypeConfig","getMaxConditions","isFilteringCaseSensitive","processSelectionFields","defaultValuePropertyFields","concat","parameterField","propertyConvertyContext","propertyTargetObject","oFilterRestrictions","FilterRestrictions","oRet","RequiredProperties","NonFilterableProperties","sEntitySetPath","aPathParts","splice","oNavigationFilterRestrictions","aNonFilterableProps","aFetchedProperties","isHiddenDraftEnabled","getSapFeManifestConfiguration","app","hideDraft","enabled","isObjectPathDraftSupported","showDraftEditStatus","searchRestrictions","hideBasicSearch","Boolean","Searchable","navigationRestrictions","Filterable","insertCustomManifestElements","insertCustomElements","OverrideType","overwrite","sortPropertyInfosByGroupLabel","propertyInfos","sort","a","b","aGroupLabelIsSet","bGroupLabelIsSet","localeCompare","getSelectionFields","oAnnotatedSelectionFieldData","parameterFields","sFetchProperties","JSON","stringify","sPropertyInfo","propSelectionFields","parse","filterFacets","FilterFacets","aFieldGroups","getAnnotationsByTerm","i","previousValue","filterFacet","ID","allFilters","isCaseSensitive","getExpandFilterFields","filterRestrictionsAnnotation","valueList","requiredProperties","FetchValues"],"sourceRoot":".","sources":["FilterBar.ts"],"sourcesContent":["import type { AnnotationTerm, EntitySet, EntityType, NavigationProperty, Property, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tFilterRestrictions,\n\tFilterRestrictionsType,\n\tNavigationPropertyRestriction,\n\tSearchRestrictions\n} from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type { ValueList } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { EntityTypeAnnotations, PropertyAnnotations } from \"@sap-ux/vocabularies-types/vocabularies/Edm_Types\";\nimport type {\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldTypes,\n\tDataFieldWithNavigationPath,\n\tDataFieldWithUrl,\n\tFieldGroup,\n\tLineItem,\n\tReferenceFacetTypes,\n\tSelectOptionType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { ChartVisualization } from \"sap/fe/core/converters/controls/Common/Chart\";\nimport { getSelectionVariant } from \"sap/fe/core/converters/controls/Common/DataVisualization\";\nimport type { TableVisualization } from \"sap/fe/core/converters/controls/Common/Table\";\nimport { getSelectionVariantConfiguration } from \"sap/fe/core/converters/controls/Common/Table\";\nimport type { PropertyTypeConfig } from \"sap/fe/core/converters/controls/Common/table/Columns\";\nimport { getTypeConfig, isFilteringCaseSensitive } from \"sap/fe/core/converters/controls/Common/table/Columns\";\nimport { getMaxConditions } from \"sap/fe/core/converters/controls/ListReport/FilterField\";\nimport type { VisualFilters } from \"sap/fe/core/converters/controls/ListReport/VisualFilters\";\nimport { getVisualFilters } from \"sap/fe/core/converters/controls/ListReport/VisualFilters\";\nimport type { ConfigurableObject, CustomElement, Position } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { OverrideType, Placement, insertCustomElements } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { IssueCategory, IssueSeverity, IssueType } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport { KeyHelper } from \"sap/fe/core/converters/helpers/Key\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { isComplexType, isEntitySet, isMultipleNavigationProperty, isNavigationProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport { enhanceDataModelPath, getRelativePaths, getTargetNavigationPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tgetAssociatedCurrencyPropertyPath,\n\tgetAssociatedTextPropertyPath,\n\tgetAssociatedTimezonePropertyPath,\n\tgetAssociatedUnitPropertyPath\n} from \"sap/fe/core/templating/PropertyHelper\";\nimport { StandardDynamicDateRangeKeys } from \"sap/m/library\";\nimport type TypeConfig from \"sap/ui/mdc/TypeConfig\";\nimport type { MetaModelType } from \"types/metamodel_types\";\nimport type {\n\tAvailabilityType,\n\tFilterFieldManifestConfiguration,\n\tFilterManifestConfiguration,\n\tFilterSettings\n} from \"../../ManifestSettings\";\n\n//import { hasValueHelp } from \"sap/fe/core/templating/PropertyHelper\";\n\nexport type FilterField = ConfigurableObject & {\n\ttype?: string;\n\tkey: string;\n\tdataType?: string;\n\tname?: string;\n\tconditionPath: string;\n\tavailability: AvailabilityType;\n\tannotationPath: string;\n\tlabel?: string;\n\ttemplate?: string;\n\tdocumentRefText?: string;\n\tgroup?: string;\n\tmenu?: string;\n\tgroupLabel?: string;\n\tsettings?: FilterSettings;\n\tisParameter?: boolean;\n\tvisualFilter?: VisualFilters;\n\tcaseSensitive?: boolean;\n\trequired?: boolean;\n};\n\nexport type ManifestFilterField = FilterField & {\n\tslotName?: string;\n};\n\ntype FilterGroup = {\n\tgroup?: string;\n\tgroupLabel?: string;\n};\n\nenum filterFieldType {\n\tDefault = \"Default\",\n\tSlot = \"Slot\"\n}\n\nconst sEdmString = \"Edm.String\";\nconst sStringDataType = \"sap.ui.model.odata.type.String\";\n\nexport type CustomElementFilterField = CustomElement<ManifestFilterField>;\n\n/**\n * Enter all DataFields of a given FieldGroup into the filterFacetMap.\n * @param fieldGroup\n * @returns The map of facets for the given FieldGroup\n */\nfunction getFieldGroupFilterGroups(fieldGroup: FieldGroup): Record<string, FilterGroup> {\n\tconst filterFacetMap: Record<string, FilterGroup> = {};\n\tfieldGroup.Data.forEach((dataField: DataFieldAbstractTypes) => {\n\t\tif (dataField.$Type === \"com.sap.vocabularies.UI.v1.DataField\") {\n\t\t\tfilterFacetMap[dataField.Value.path] = {\n\t\t\t\tgroup: fieldGroup.fullyQualifiedName,\n\t\t\t\tgroupLabel: fieldGroup.Label?.toString() ?? fieldGroup.annotations?.Common?.Label?.toString() ?? fieldGroup.qualifier\n\t\t\t};\n\t\t}\n\t});\n\treturn filterFacetMap;\n}\n\n/**\n * Get the properties of the selection variants used in the different visualizations that should be excluded.\n * @param lrTableVisualizations The list report tables\n * @param converterContext The converter context\n * @returns The excluded properties\n */\nfunction getExcludedFilterProperties(\n\tlrTableVisualizations: TableVisualization[],\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Set<string> {\n\tconst selectionVariantPaths = new Set<string>();\n\tconst manifestFilterFields = converterContext.getManifestWrapper().getFilterConfiguration().filterFields ?? {};\n\tconst selectionFieldPaths = new Set<string>([\n\t\t//Selection Fields coming from the annotation\n\t\t...(converterContext.getDataModelObjectPath().targetEntityType?.annotations?.UI?.SelectionFields ?? []).map(\n\t\t\t(selectionField) => selectionField.value\n\t\t),\n\t\t//Selection Fields coming from the manifest and not with custom template\n\t\t...Object.keys(manifestFilterFields).filter((key) => !!manifestFilterFields[key].template)\n\t]);\n\n\treturn new Set(\n\t\tlrTableVisualizations\n\t\t\t.map((visualization) => {\n\t\t\t\tconst tableFilters = visualization.control.filters;\n\t\t\t\tif (!tableFilters) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\treturn [...(tableFilters.hiddenFilters?.paths ?? []), ...(tableFilters.quickFilters?.paths ?? [])].map((path) => {\n\t\t\t\t\tconst annotationPath = path.annotationPath;\n\t\t\t\t\tif (!selectionVariantPaths.has(annotationPath)) {\n\t\t\t\t\t\tselectionVariantPaths.add(annotationPath);\n\t\t\t\t\t\tconst selectionVariantConfig = getSelectionVariantConfiguration(annotationPath, converterContext);\n\t\t\t\t\t\tif (selectionVariantConfig) {\n\t\t\t\t\t\t\tselectionVariantConfig.propertyNames = selectionVariantConfig.propertyNames.filter(\n\t\t\t\t\t\t\t\t(propertyName) => !selectionFieldPaths.has(propertyName)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn selectionVariantConfig.propertyNames;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t});\n\t\t\t})\n\t\t\t.flat(2)\n\t);\n}\n\n/**\n * Returns the condition path required for the condition model. It looks as follows:\n * <1:N-PropertyName>*\\/<1:1-PropertyName>/<PropertyName>.\n * @param entityType The root EntityType\n * @param propertyPath The full path to the target property\n * @returns The formatted condition path\n */\nconst _getConditionPath = function (entityType: EntityType, propertyPath: string): string {\n\tconst parts = propertyPath.split(\"/\");\n\tlet partialPath;\n\tlet key = \"\";\n\twhile (parts.length) {\n\t\tlet part = parts.shift() as string;\n\t\tpartialPath = partialPath ? `${partialPath}/${part}` : part;\n\t\tconst property: Property | NavigationProperty = entityType.resolvePath(partialPath);\n\t\tif (isMultipleNavigationProperty(property)) {\n\t\t\tpart += \"*\";\n\t\t}\n\t\tkey = key ? `${key}/${part}` : part;\n\t}\n\treturn key;\n};\n\nconst _createFilterSelectionField = function (\n\tentityType: EntityType,\n\tproperty: Property,\n\tfullPropertyPath: string,\n\tincludeHidden: boolean,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): FilterField | undefined {\n\t// ignore complex property types and hidden annotated ones\n\tif (property && property.targetType === undefined && (includeHidden || property.annotations?.UI?.Hidden?.valueOf() !== true)) {\n\t\tconst targetEntityType = converterContext.getAnnotationEntityType(property),\n\t\t\tfilterField: FilterField = {\n\t\t\t\tkey: KeyHelper.getSelectionFieldKeyFromPath(fullPropertyPath),\n\t\t\t\tannotationPath: converterContext.getAbsoluteAnnotationPath(fullPropertyPath),\n\t\t\t\tconditionPath: _getConditionPath(entityType, fullPropertyPath),\n\t\t\t\tavailability: property.annotations?.UI?.HiddenFilter?.valueOf() === true ? \"Hidden\" : \"Adaptation\",\n\t\t\t\tlabel: property.annotations.Common?.Label?.toString() ?? property.name,\n\t\t\t\tgroup: targetEntityType.name,\n\t\t\t\tgroupLabel: targetEntityType?.annotations?.Common?.Label?.toString() ?? targetEntityType.name\n\t\t\t};\n\t\tgetSettingsOfDefaultFilterFields(filterField);\n\t\treturn filterField;\n\t}\n\treturn undefined;\n};\n\n/**\n * Retrieve the configuration for the technical property DraftAdministrativeData. Only relevant for CreationDateTime\n * and LastChangeDateTime, as they are displaying the timeframe related properties as a SemanticDateRange.\n * @param filterField\n */\nconst getSettingsOfDefaultFilterFields = function (filterField: FilterField): void {\n\tif (\n\t\tfilterField.key === \"DraftAdministrativeData::CreationDateTime\" ||\n\t\tfilterField.key === \"DraftAdministrativeData::LastChangeDateTime\"\n\t) {\n\t\tconst standardDynamicDateRangeKeys = [\n\t\t\tStandardDynamicDateRangeKeys.TO,\n\t\t\tStandardDynamicDateRangeKeys.TOMORROW,\n\t\t\tStandardDynamicDateRangeKeys.NEXTWEEK,\n\t\t\tStandardDynamicDateRangeKeys.NEXTMONTH,\n\t\t\tStandardDynamicDateRangeKeys.NEXTQUARTER,\n\t\t\tStandardDynamicDateRangeKeys.NEXTYEAR\n\t\t];\n\t\tfilterField.settings = {\n\t\t\toperatorConfiguration: [\n\t\t\t\t{\n\t\t\t\t\tpath: \"key\",\n\t\t\t\t\tequals: standardDynamicDateRangeKeys.join(\",\"),\n\t\t\t\t\texclude: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n};\n\nconst _getSelectionFields = function (\n\tentityType: EntityType,\n\tnavigationPath: string,\n\tproperties: Array<Property> | undefined,\n\tincludeHidden: boolean,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, FilterField> {\n\tconst selectionFieldMap: Record<string, FilterField> = {};\n\tif (properties) {\n\t\tproperties.forEach((property: Property) => {\n\t\t\tconst propertyPath: string = property.name;\n\t\t\tconst fullPath: string = (navigationPath ? `${navigationPath}/` : \"\") + propertyPath;\n\t\t\tconst selectionField = _createFilterSelectionField(entityType, property, fullPath, includeHidden, converterContext);\n\t\t\tif (selectionField) {\n\t\t\t\tselectionFieldMap[fullPath] = selectionField;\n\t\t\t}\n\t\t});\n\t}\n\treturn selectionFieldMap;\n};\n\nconst _getSelectionFieldsByPath = function (\n\tentityType: EntityType,\n\tpropertyPaths: Array<string> | undefined,\n\tincludeHidden: boolean,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, FilterField> {\n\tlet selectionFields: Record<string, FilterField> = {};\n\tif (propertyPaths) {\n\t\tpropertyPaths.forEach((propertyPath: string) => {\n\t\t\tlet localSelectionFields: Record<string, FilterField> = {};\n\t\t\tconst enhancedPath = enhanceDataModelPath<Property | NavigationProperty>(\n\t\t\t\tconverterContext.getDataModelObjectPath(),\n\t\t\t\tpropertyPath\n\t\t\t);\n\t\t\tconst property = enhancedPath.targetObject;\n\t\t\tif (\n\t\t\t\tproperty === undefined ||\n\t\t\t\t(!includeHidden &&\n\t\t\t\t\tenhancedPath.navigationProperties.find(\n\t\t\t\t\t\t(navigationProperty) => navigationProperty.annotations?.UI?.Hidden?.valueOf() === true\n\t\t\t\t\t))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isNavigationProperty(property)) {\n\t\t\t\t// handle navigation properties\n\t\t\t\tlocalSelectionFields = _getSelectionFields(\n\t\t\t\t\tentityType,\n\t\t\t\t\tpropertyPath,\n\t\t\t\t\tproperty.targetType.entityProperties,\n\t\t\t\t\tincludeHidden,\n\t\t\t\t\tconverterContext\n\t\t\t\t);\n\t\t\t} else if (isComplexType(property.targetType)) {\n\t\t\t\t// handle ComplexType properties\n\t\t\t\tlocalSelectionFields = _getSelectionFields(\n\t\t\t\t\tentityType,\n\t\t\t\t\tpropertyPath,\n\t\t\t\t\tproperty.targetType.properties,\n\t\t\t\t\tincludeHidden,\n\t\t\t\t\tconverterContext\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlocalSelectionFields = _getSelectionFields(\n\t\t\t\t\tentityType,\n\t\t\t\t\tgetTargetNavigationPath(enhancedPath, true),\n\t\t\t\t\t[property],\n\t\t\t\t\tincludeHidden,\n\t\t\t\t\tconverterContext\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tselectionFields = {\n\t\t\t\t...selectionFields,\n\t\t\t\t...localSelectionFields\n\t\t\t};\n\t\t});\n\t}\n\treturn selectionFields;\n};\n\nconst _getFilterField = function (\n\tfilterFields: Record<string, FilterField>,\n\tpropertyPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tentityType: EntityType\n): FilterField | undefined {\n\tlet filterField: FilterField | undefined = filterFields[propertyPath];\n\tif (filterField) {\n\t\tdelete filterFields[propertyPath];\n\t} else {\n\t\tfilterField = _createFilterSelectionField(entityType, entityType.resolvePath(propertyPath), propertyPath, true, converterContext);\n\t}\n\tif (!filterField) {\n\t\tconverterContext.getDiagnostics()?.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MISSING_SELECTIONFIELD);\n\t}\n\t// defined SelectionFields are available by default\n\tif (filterField) {\n\t\tfilterField.availability = filterField.availability === \"Hidden\" ? \"Hidden\" : \"Default\";\n\t\tfilterField.isParameter = !!entityType.annotations?.Common?.ResultContext;\n\t}\n\treturn filterField;\n};\n\nconst _getDefaultFilterFields = function (\n\taSelectOptions: SelectOptionType[],\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\texcludedFilterProperties: Set<string>,\n\tannotatedSelectionFields: PropertyPath[]\n): FilterField[] {\n\tconst selectionFields: FilterField[] = [];\n\tconst UISelectionFields: Record<string, boolean> = {};\n\tconst properties = entityType.entityProperties;\n\t// Using entityType instead of entitySet\n\tannotatedSelectionFields?.forEach((SelectionField) => {\n\t\tUISelectionFields[SelectionField.value] = true;\n\t});\n\tif (aSelectOptions && aSelectOptions.length > 0) {\n\t\taSelectOptions?.forEach((selectOption: SelectOptionType) => {\n\t\t\tconst propertyName = selectOption.PropertyName;\n\t\t\tconst sPropertyPath = propertyName?.value;\n\t\t\tconst currentSelectionFields: Record<string, boolean> = {};\n\t\t\tannotatedSelectionFields?.forEach((SelectionField) => {\n\t\t\t\tcurrentSelectionFields[SelectionField.value] = true;\n\t\t\t});\n\t\t\tif (sPropertyPath && !excludedFilterProperties.has(sPropertyPath)) {\n\t\t\t\tif (!(sPropertyPath in currentSelectionFields)) {\n\t\t\t\t\tconst FilterField: FilterField | undefined = getFilterField(sPropertyPath, converterContext, entityType);\n\t\t\t\t\tif (FilterField) {\n\t\t\t\t\t\tselectionFields.push(FilterField);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else if (properties) {\n\t\tproperties.forEach((property: Property) => {\n\t\t\tconst defaultFilterValue = property.annotations?.Common?.FilterDefaultValue;\n\t\t\tconst propertyPath = property.name;\n\t\t\tif (!(propertyPath in excludedFilterProperties)) {\n\t\t\t\tif (defaultFilterValue && !(propertyPath in UISelectionFields)) {\n\t\t\t\t\tconst FilterField: FilterField | undefined = getFilterField(propertyPath, converterContext, entityType);\n\t\t\t\t\tif (FilterField) {\n\t\t\t\t\t\tselectionFields.push(FilterField);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn selectionFields;\n};\n\n/**\n * Get all parameter filter fields in case of a parameterized service.\n * @param converterContext\n * @returns An array of parameter FilterFields\n */\nfunction _getParameterFields(converterContext: ConverterContext<PageContextPathTarget>): FilterField[] {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath();\n\tconst parameterEntityType = dataModelObjectPath.startingEntitySet.entityType;\n\tconst isParameterized = !!parameterEntityType.annotations?.Common?.ResultContext && !dataModelObjectPath.targetEntitySet;\n\tconst parameterConverterContext =\n\t\tisParameterized && converterContext.getConverterContextFor<EntitySet>(`/${dataModelObjectPath.startingEntitySet.name}`);\n\n\treturn (\n\t\tparameterConverterContext\n\t\t\t? parameterEntityType.entityProperties.map(function (property) {\n\t\t\t\t\treturn _getFilterField(\n\t\t\t\t\t\t{} as Record<string, FilterField>,\n\t\t\t\t\t\tproperty.name,\n\t\t\t\t\t\tparameterConverterContext,\n\t\t\t\t\t\tparameterEntityType\n\t\t\t\t\t);\n\t\t\t  })\n\t\t\t: []\n\t) as FilterField[];\n}\n\n/**\n * Determines if the FilterBar search field is hidden or not.\n * @param listReportTables The list report tables\n * @param charts The ALP charts\n * @param converterContext The converter context\n * @returns The information if the FilterBar search field is hidden or not\n */\nexport const getFilterBarHideBasicSearch = function (\n\tlistReportTables: TableVisualization[],\n\tcharts: ChartVisualization[],\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): boolean {\n\t// Check if charts allow search\n\tconst noSearchInCharts = charts.length === 0 || charts.every((chart) => !chart.applySupported.enableSearch);\n\n\t// Check if all tables are analytical and none of them allow for search\n\t// or all tables are TreeTable and none of them allow for search\n\tconst noSearchInTables =\n\t\tlistReportTables.length === 0 ||\n\t\tlistReportTables.every((table) => (table.enableAnalytics || table.control.type === \"TreeTable\") && !table.enableBasicSearch);\n\n\tconst contextPath = converterContext.getContextPath();\n\tif (contextPath && noSearchInCharts && noSearchInTables) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * Retrieves filter fields from the manifest.\n * @param entityType The current entityType\n * @param converterContext The converter context\n * @param annotationPath Annotation path of the selection fields\n * @returns The filter fields defined in the manifest\n */\nexport const getManifestFilterFields = function (\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tannotationPath?: string\n): Record<string, CustomElementFilterField> {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\n\tconst settingsContextPath =\n\t\tmanifestWrapper.getContextPath() || (manifestWrapper.getEntitySet() ? `/${manifestWrapper.getEntitySet()}` : undefined);\n\tconst filterConfigurationPath = getFilterConfigurationPath(converterContext, settingsContextPath, annotationPath);\n\tlet fbConfig: FilterManifestConfiguration = {};\n\tfbConfig = manifestWrapper.getFilterConfiguration(filterConfigurationPath);\n\n\tconst definedFilterFields: Record<string, FilterFieldManifestConfiguration> = fbConfig?.filterFields || {};\n\tconst selectionFields: Record<string, FilterField> = _getSelectionFieldsByPath(\n\t\tentityType,\n\t\tObject.keys(definedFilterFields).map((key) => definedFilterFields[key].property ?? KeyHelper.getPathFromSelectionFieldKey(key)),\n\t\ttrue,\n\t\tconverterContext\n\t);\n\tconst filterFields: Record<string, CustomElementFilterField> = {};\n\n\tfor (const sKey in definedFilterFields) {\n\t\tconst filterField = definedFilterFields[sKey];\n\t\tconst propertyName = filterField.property ?? KeyHelper.getPathFromSelectionFieldKey(sKey);\n\t\tconst selectionField = selectionFields[propertyName];\n\t\tconst type = filterField.type === \"Slot\" ? filterFieldType.Slot : filterFieldType.Default;\n\t\tconst visualFilter =\n\t\t\tfilterField && filterField?.visualFilter\n\t\t\t\t? getVisualFilters(entityType, converterContext, sKey, definedFilterFields)\n\t\t\t\t: undefined;\n\t\tif (filterField.template || filterField.type === filterFieldType.Slot) {\n\t\t\tif (filterField.settings) {\n\t\t\t\tfilterField.settings.isCustomFilter = true;\n\t\t\t} else {\n\t\t\t\tfilterField.settings = {\n\t\t\t\t\tisCustomFilter: true\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tfilterFields[sKey] = {\n\t\t\tkey: sKey,\n\t\t\ttype: type,\n\t\t\tslotName: filterField?.slotName || sKey,\n\t\t\tannotationPath: selectionField?.annotationPath,\n\t\t\tconditionPath: filterField.property\n\t\t\t\t? KeyHelper.getPathFromSelectionFieldKey(sKey)\n\t\t\t\t: selectionField?.conditionPath || propertyName,\n\t\t\tdocumentRefText:\n\t\t\t\tfilterField.property &&\n\t\t\t\tconverterContext.fetchTextFromMetaModel(\n\t\t\t\t\t\"{metaModel>\" + filterField.property + \"@com.sap.vocabularies.Common.v1.DocumentationRef}\"\n\t\t\t\t),\n\t\t\ttemplate: filterField.template,\n\t\t\tlabel: converterContext.fetchTextFromMetaModel(filterField.label),\n\t\t\tposition: filterField.position || { placement: Placement.After },\n\t\t\tavailability: filterField.availability || \"Default\",\n\t\t\tsettings: filterField.settings,\n\t\t\tvisualFilter: visualFilter,\n\t\t\trequired: filterField.required\n\t\t};\n\t}\n\treturn filterFields;\n};\n\n/**\n * Returns configuration path to fetch the custom filter fields from manifest.\n * @param converterContext The converter context\n * @param settingsContextPath Manifest entity set path and context path\n * @param annotationPath The annotation path\n * @returns Path to fetch the custom filters from the manifest\n */\nconst getFilterConfigurationPath = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tsettingsContextPath?: string,\n\tannotationPath?: string\n): string | undefined {\n\tlet objectPath;\n\tconst filterBarContextPath = converterContext.getContextPath();\n\tconst metaPath = `${filterBarContextPath}/${annotationPath}`;\n\tif (settingsContextPath && metaPath?.startsWith(settingsContextPath) && annotationPath) {\n\t\tobjectPath = metaPath.replace(`${settingsContextPath}/`, \"\");\n\t} else {\n\t\tobjectPath = annotationPath;\n\t}\n\treturn objectPath ? objectPath : undefined;\n};\n\nexport const getFilterField = function (\n\tpropertyPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tentityType: EntityType\n): FilterField | undefined {\n\treturn _getFilterField({}, propertyPath, converterContext, entityType);\n};\n\nexport const getFilterRestrictions = function (\n\toFilterRestrictionsAnnotation: FilterRestrictionsType | undefined,\n\tsRestriction: \"RequiredProperties\" | \"NonFilterableProperties\"\n): string[] {\n\tlet aProps: string[] = [];\n\tif (oFilterRestrictionsAnnotation && oFilterRestrictionsAnnotation[sRestriction]) {\n\t\taProps = oFilterRestrictionsAnnotation[sRestriction].map(function (oProperty) {\n\t\t\treturn oProperty.value;\n\t\t});\n\t}\n\treturn aProps;\n};\n\nconst getSearchFilterPropertyInfo = function (): PropertyInfo {\n\treturn {\n\t\tname: \"$search\",\n\t\tpath: \"$search\",\n\t\tdataType: sStringDataType,\n\t\tmaxConditions: 1\n\t};\n};\n\nconst getEditStateFilterPropertyInfo = function (): PropertyInfo {\n\treturn {\n\t\tname: \"$editState\",\n\t\tpath: \"$editState\",\n\t\tgroupLabel: \"\",\n\t\tgroup: \"\",\n\t\tdataType: sStringDataType,\n\t\thiddenFilter: false\n\t};\n};\n\nconst getSearchRestrictions = function (converterContext: ConverterContext<PageContextPathTarget>): SearchRestrictions | undefined {\n\tconst entitySet = converterContext.getEntitySet();\n\treturn isEntitySet(entitySet) ? entitySet.annotations.Capabilities?.SearchRestrictions : undefined;\n};\n\nexport const getNavigationRestrictions = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tsNavigationPath: string\n): NavigationPropertyRestriction | undefined {\n\tconst oNavigationRestrictions = converterContext.getEntitySet()?.annotations?.Capabilities?.NavigationRestrictions;\n\tconst aRestrictedProperties = oNavigationRestrictions && oNavigationRestrictions.RestrictedProperties;\n\treturn (\n\t\taRestrictedProperties &&\n\t\taRestrictedProperties.find(function (oRestrictedProperty) {\n\t\t\treturn (\n\t\t\t\toRestrictedProperty &&\n\t\t\t\toRestrictedProperty.NavigationProperty &&\n\t\t\t\toRestrictedProperty.NavigationProperty.value === sNavigationPath\n\t\t\t);\n\t\t})\n\t);\n};\n// The propertyInfo used internally within FE\nexport type PropertyInfo = {\n\tkey?: string;\n\tannotationPath?: string;\n\tconditionPath?: string;\n\tname: string;\n\tpath?: string;\n\tlabel?: string;\n\ttooltip?: string;\n\tvisible?: boolean;\n\tgroupLabel?: string;\n\tmaxConditions?: number;\n\tdataType?: string;\n\tgroup?: string;\n\thiddenFilter?: boolean;\n\tdisplay?: string;\n\tisParameter?: boolean;\n\tcaseSensitive?: boolean;\n\tavailability?: AvailabilityType;\n\tposition?: Position;\n\ttype?: string;\n\ttemplate?: string;\n\tmenu?: string;\n\trequired?: boolean;\n\tfilterExpression?: string;\n\tisCustomFilter?: boolean;\n\tconstraints?: object;\n\tformatOptions?: object;\n\tsettings?: FilterSettings;\n\tvisualFilter?: VisualFilters;\n\ttypeConfig?: TypeConfig;\n\tfilterable?: boolean;\n};\n\n// The propertyInfo we share with MDC\nexport type PropertyInfoExternal = {\n\tkey: string;\n\tlabel: string;\n\tdataType: string;\n\tcaseSensitive?: boolean;\n\tgroupLabel?: string;\n\tgroup?: string;\n\tconstraints?: object;\n\tformatOptions?: object;\n\tmaxConditions?: number;\n\tvisible?: boolean;\n\ttooltip?: string;\n\tpath?: string;\n\trequired?: boolean;\n\thiddenFilter?: boolean;\n};\nconst _fetchBasicPropertyInfo = function (oFilterFieldInfo: FilterField | PropertyInfo): PropertyInfo {\n\treturn {\n\t\tkey: oFilterFieldInfo.key,\n\t\tannotationPath: oFilterFieldInfo.annotationPath,\n\t\tconditionPath: oFilterFieldInfo.conditionPath,\n\t\tname: oFilterFieldInfo.conditionPath!,\n\t\tlabel: oFilterFieldInfo.label,\n\t\thiddenFilter: oFilterFieldInfo.availability === \"Hidden\",\n\t\tdisplay: \"Value\",\n\t\tisParameter: oFilterFieldInfo.isParameter,\n\t\tcaseSensitive: oFilterFieldInfo.caseSensitive,\n\t\tavailability: oFilterFieldInfo.availability,\n\t\tposition: oFilterFieldInfo.position,\n\t\ttype: oFilterFieldInfo.type,\n\t\ttemplate: oFilterFieldInfo.template,\n\t\tmenu: oFilterFieldInfo.menu,\n\t\trequired: oFilterFieldInfo.required,\n\t\tisCustomFilter: oFilterFieldInfo.settings?.isCustomFilter\n\t};\n};\n\nconst _getMissingLabelForManifestFilterFields = function (\n\tfilterFields: ManifestFilterField[],\n\tmanifestFilterFields: Record<string, CustomElementFilterField>\n): void {\n\tfilterFields.forEach((filterField) => {\n\t\tif (manifestFilterFields.hasOwnProperty(filterField.key) && !manifestFilterFields[filterField.key].label) {\n\t\t\tmanifestFilterFields[filterField.key].label = filterField.label;\n\t\t}\n\t});\n};\n\nexport const displayMode = function (\n\toPropertyAnnotations: PropertyAnnotations | undefined,\n\toCollectionAnnotations: EntityTypeAnnotations | undefined\n): string {\n\tconst oTextAnnotation = oPropertyAnnotations?.Common?.Text,\n\t\toTextArrangmentAnnotation =\n\t\t\toTextAnnotation &&\n\t\t\t((oPropertyAnnotations && oPropertyAnnotations?.Common?.Text?.annotations?.UI?.TextArrangement) ||\n\t\t\t\t(oCollectionAnnotations && oCollectionAnnotations?.UI?.TextArrangement));\n\n\tif (oTextArrangmentAnnotation) {\n\t\tif (oTextArrangmentAnnotation.valueOf() === \"UI.TextArrangementType/TextOnly\") {\n\t\t\treturn \"Description\";\n\t\t} else if (oTextArrangmentAnnotation.valueOf() === \"UI.TextArrangementType/TextLast\") {\n\t\t\treturn \"ValueDescription\";\n\t\t}\n\t\treturn \"DescriptionValue\"; //TextFirst\n\t}\n\treturn oTextAnnotation ? \"DescriptionValue\" : \"Value\";\n};\n\nexport const fetchPropertyInfo = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\toFilterFieldInfo: FilterField | PropertyInfo,\n\toTypeConfig: Partial<PropertyTypeConfig>\n): PropertyInfo {\n\tlet oPropertyInfo = _fetchBasicPropertyInfo(oFilterFieldInfo);\n\tconst sAnnotationPath = oFilterFieldInfo.annotationPath;\n\n\tif (!sAnnotationPath) {\n\t\treturn oPropertyInfo;\n\t}\n\tconst targetPropertyObject = converterContext.getConverterContextFor<Property>(sAnnotationPath).getDataModelObjectPath().targetObject;\n\n\tconst oPropertyAnnotations = targetPropertyObject?.annotations;\n\tconst oCollectionAnnotations = converterContext?.getDataModelObjectPath().targetObject?.annotations;\n\n\tconst oFormatOptions = oTypeConfig.formatOptions;\n\tconst oConstraints = oTypeConfig.constraints;\n\toPropertyInfo = Object.assign(oPropertyInfo, {\n\t\tformatOptions: oFormatOptions,\n\t\tconstraints: oConstraints,\n\t\tdisplay: displayMode(oPropertyAnnotations, oCollectionAnnotations)\n\t});\n\treturn oPropertyInfo;\n};\n\nexport const isMultiValue = function (oProperty: PropertyInfo): boolean {\n\tlet bIsMultiValue = true;\n\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\tswitch (oProperty.filterExpression) {\n\t\tcase \"SearchExpression\":\n\t\tcase \"SingleRange\":\n\t\tcase \"SingleValue\":\n\t\t\tbIsMultiValue = false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tif (oProperty.type && oProperty.type.indexOf(\"Boolean\") > 0) {\n\t\tbIsMultiValue = false;\n\t}\n\treturn bIsMultiValue;\n};\n\nconst _isFilterableNavigationProperty = function (\n\tentry: DataFieldAbstractTypes\n): entry is AnnotationTerm<DataField | DataFieldWithUrl | DataFieldWithNavigationPath> {\n\treturn (\n\t\t(entry.$Type === UIAnnotationTypes.DataField ||\n\t\t\tentry.$Type === UIAnnotationTypes.DataFieldWithUrl ||\n\t\t\tentry.$Type === UIAnnotationTypes.DataFieldWithNavigationPath) &&\n\t\tentry.Value.path?.includes(\"/\")\n\t);\n};\n\n/**\n * Adds the additional property which references to the unit, timezone, textArrangement or currency from a data field.\n * @param dataField The data field to be considered\n * @param converterContext The converter context\n * @param navProperties The list of navigation properties\n */\nconst addChildNavigationProperties = function (\n\tdataField: DataFieldAbstractTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tnavProperties: string[]\n): void {\n\tconst targetProperty = (dataField as DataField).Value?.$target;\n\tif (targetProperty) {\n\t\tconst additionalPropertyPath =\n\t\t\tgetAssociatedTextPropertyPath(targetProperty) ||\n\t\t\tgetAssociatedCurrencyPropertyPath(targetProperty) ||\n\t\t\tgetAssociatedUnitPropertyPath(targetProperty) ||\n\t\t\tgetAssociatedTimezonePropertyPath(targetProperty);\n\t\tconst navigationProperty = additionalPropertyPath\n\t\t\t? enhanceDataModelPath(converterContext.getDataModelObjectPath(), additionalPropertyPath).navigationProperties\n\t\t\t: undefined;\n\t\tif (navigationProperty?.length) {\n\t\t\tconst navigationPropertyPath = navigationProperty[0].name;\n\t\t\tif (!navProperties.includes(navigationPropertyPath)) {\n\t\t\t\tnavProperties.push(navigationPropertyPath);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Gets used navigation properties for available dataField.\n * @param navProperties The list of navigation properties\n * @param dataField The data field to be considered\n * @param converterContext The converter context\n * @returns The list of navigation properties\n */\nconst getNavigationPropertiesRecursively = function (\n\tnavProperties: string[],\n\tdataField: DataFieldAbstractTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): string[] {\n\tswitch (dataField.$Type) {\n\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\tif (dataField.Target?.$target?.$Type === UIAnnotationTypes.FieldGroupType) {\n\t\t\t\tdataField.Target.$target.Data?.forEach((innerDataField: DataFieldAbstractTypes) => {\n\t\t\t\t\tgetNavigationPropertiesRecursively(navProperties, innerDataField, converterContext);\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UIAnnotationTypes.DataField:\n\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\t\tif (_isFilterableNavigationProperty(dataField)) {\n\t\t\t\tconst navigationPropertyPath = getRelativePaths(\n\t\t\t\t\tenhanceDataModelPath(converterContext.getDataModelObjectPath(), dataField.Value.path),\n\t\t\t\t\ttrue\n\t\t\t\t).join(\"/\");\n\t\t\t\tif (!navProperties.includes(navigationPropertyPath)) {\n\t\t\t\t\tnavProperties.push(navigationPropertyPath);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Additional property from text arrangement/units/currencies/timezone...\n\t\t\taddChildNavigationProperties(dataField, converterContext, navProperties);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Other types are not supported\n\t\t\tbreak;\n\t}\n\treturn navProperties;\n};\n\nconst getAnnotatedSelectionFieldData = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tlrTables: TableVisualization[] = [],\n\tannotationPath = \"\",\n\tincludeHidden = false,\n\tlineItemTerm?: string\n): {\n\texcludedFilterProperties: Set<string>;\n\tentityType: EntityType;\n\tannotatedSelectionFields: PropertyPath[];\n\tfilterFields: Record<string, FilterField>;\n\tpropertyInfoFields: FilterField[];\n\tdefaultFilterFields: FilterField[];\n} {\n\t// create a map of properties to be used in selection variants defined in the different visualizations and different views (multi table mode)\n\tconst excludedFilterProperties = getExcludedFilterProperties(lrTables, converterContext);\n\tconst entityType = converterContext.getEntityType();\n\t//Filters which has to be added which is part of SV/Default annotations but not present in the SelectionFields\n\tconst annotatedSelectionFields = ((annotationPath && converterContext.getEntityTypeAnnotation(annotationPath)?.annotation) ||\n\t\tentityType.annotations?.UI?.SelectionFields ||\n\t\t[]) as PropertyPath[];\n\n\tlet navProperties: string[] = [];\n\tif (lrTables.length === 0 && !!lineItemTerm) {\n\t\t(converterContext.getEntityTypeAnnotation(lineItemTerm).annotation as LineItem)?.forEach((dataField: DataFieldAbstractTypes) => {\n\t\t\tnavProperties = getNavigationPropertiesRecursively(navProperties, dataField, converterContext);\n\t\t});\n\t}\n\n\tif (ModelHelper.isDraftRoot(converterContext.getEntitySet())) {\n\t\tnavProperties.push(\n\t\t\t\"DraftAdministrativeData/CreationDateTime\",\n\t\t\t\"DraftAdministrativeData/CreatedByUser\",\n\t\t\t\"DraftAdministrativeData/LastChangeDateTime\",\n\t\t\t\"DraftAdministrativeData/LastChangedByUser\"\n\t\t);\n\t}\n\n\t// create a map of all potential filter fields based on...\n\tconst filterFields: Record<string, FilterField> = {\n\t\t// ...non hidden properties of the entity\n\t\t..._getSelectionFields(entityType, \"\", entityType.entityProperties, includeHidden, converterContext),\n\t\t// ... non hidden properties of navigation properties\n\t\t..._getSelectionFieldsByPath(entityType, navProperties, false, converterContext),\n\t\t// ...additional manifest defined navigation properties\n\t\t..._getSelectionFieldsByPath(\n\t\t\tentityType,\n\t\t\tconverterContext.getManifestWrapper().getFilterConfiguration().navigationProperties,\n\t\t\tincludeHidden,\n\t\t\tconverterContext\n\t\t)\n\t};\n\tlet aSelectOptions: SelectOptionType[] = [];\n\tconst selectionVariant = getSelectionVariant(entityType, converterContext);\n\tif (selectionVariant) {\n\t\taSelectOptions = selectionVariant.SelectOptions;\n\t}\n\n\tconst propertyInfoFields: FilterField[] =\n\t\tannotatedSelectionFields?.reduce((selectionFields: FilterField[], selectionField) => {\n\t\t\tconst propertyPath = selectionField.value;\n\t\t\tif (!excludedFilterProperties.has(propertyPath)) {\n\t\t\t\tlet navigationPath: string;\n\t\t\t\tif (annotationPath?.startsWith(\"@com.sap.vocabularies.UI.v1.SelectionFields\")) {\n\t\t\t\t\tnavigationPath = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tnavigationPath = annotationPath?.split(\"/@com.sap.vocabularies.UI.v1.SelectionFields\")[0];\n\t\t\t\t}\n\n\t\t\t\tconst filterPropertyPath = navigationPath ? navigationPath + \"/\" + propertyPath : propertyPath;\n\t\t\t\tconst filterField: FilterField | undefined = _getFilterField(\n\t\t\t\t\tfilterFields,\n\t\t\t\t\tfilterPropertyPath,\n\t\t\t\t\tconverterContext,\n\t\t\t\t\tentityType\n\t\t\t\t);\n\t\t\t\tif (filterField) {\n\t\t\t\t\tfilterField.group = \"\";\n\t\t\t\t\tfilterField.groupLabel = \"\";\n\t\t\t\t\tselectionFields.push(filterField);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selectionFields;\n\t\t}, []) || [];\n\n\tconst defaultFilterFields = _getDefaultFilterFields(\n\t\taSelectOptions,\n\t\tentityType,\n\t\tconverterContext,\n\t\texcludedFilterProperties,\n\t\tannotatedSelectionFields\n\t);\n\n\treturn {\n\t\texcludedFilterProperties: excludedFilterProperties,\n\t\tentityType: entityType,\n\t\tannotatedSelectionFields: annotatedSelectionFields,\n\t\tfilterFields: filterFields,\n\t\tpropertyInfoFields: propertyInfoFields,\n\t\tdefaultFilterFields: defaultFilterFields\n\t};\n};\n\nexport const fetchTypeConfig = function (property?: Property): PropertyTypeConfig {\n\tconst oTypeConfig = getTypeConfig(property, property?.type);\n\tif (property?.type === sEdmString && (oTypeConfig.constraints.nullable === undefined || oTypeConfig.constraints.nullable === true)) {\n\t\toTypeConfig.formatOptions.parseKeepsEmptyString = false;\n\t}\n\treturn oTypeConfig;\n};\n\nexport const assignDataTypeToPropertyInfo = function (\n\tpropertyInfoField: FilterField | PropertyInfo,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\taRequiredProps: unknown[],\n\taTypeConfig: Record<string, Partial<PropertyTypeConfig>>\n): PropertyInfo {\n\tlet oPropertyInfo = fetchPropertyInfo(converterContext, propertyInfoField, aTypeConfig[propertyInfoField.key!]),\n\t\tsPropertyPath = \"\";\n\tif (propertyInfoField.conditionPath) {\n\t\tsPropertyPath = propertyInfoField.conditionPath.replace(/\\+|\\*/g, \"\");\n\t}\n\tif (oPropertyInfo) {\n\t\toPropertyInfo = Object.assign(oPropertyInfo, {\n\t\t\tmaxConditions: oPropertyInfo.isParameter\n\t\t\t\t? 1\n\t\t\t\t: getMaxConditions(enhanceDataModelPath<Property>(converterContext.getDataModelObjectPath(), sPropertyPath)),\n\t\t\trequired: propertyInfoField.required ?? (oPropertyInfo.isParameter || aRequiredProps.includes(sPropertyPath)),\n\t\t\tcaseSensitive: isFilteringCaseSensitive(converterContext),\n\t\t\tdataType: aTypeConfig[propertyInfoField.key!].type\n\t\t});\n\t}\n\treturn oPropertyInfo;\n};\n\nexport const processSelectionFields = function (\n\tpropertyInfoFields: FilterField[],\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tdefaultValuePropertyFields?: FilterField[]\n): PropertyInfo[] {\n\t//get TypeConfig function\n\tconst aTypeConfig: Record<string, Partial<PropertyTypeConfig>> = {};\n\n\tif (defaultValuePropertyFields) {\n\t\tpropertyInfoFields = propertyInfoFields.concat(defaultValuePropertyFields);\n\t}\n\t//add typeConfig\n\tpropertyInfoFields.forEach(function (parameterField) {\n\t\tif (parameterField.annotationPath) {\n\t\t\tconst propertyConvertyContext = converterContext.getConverterContextFor<Property>(parameterField.annotationPath);\n\t\t\tconst propertyTargetObject = propertyConvertyContext.getDataModelObjectPath().targetObject;\n\t\t\tconst oTypeConfig = fetchTypeConfig(propertyTargetObject);\n\t\t\taTypeConfig[parameterField.key] = oTypeConfig;\n\t\t} else {\n\t\t\taTypeConfig[parameterField.key] = { type: sStringDataType };\n\t\t}\n\t});\n\n\t// filterRestrictions\n\tconst entitySet = converterContext.getEntitySet();\n\tconst oFilterRestrictions = isEntitySet(entitySet) ? entitySet.annotations.Capabilities?.FilterRestrictions : undefined;\n\tconst oRet: {\n\t\tRequiredProperties?: string[];\n\t\tNonFilterableProperties?: string[];\n\t} = {};\n\toRet.RequiredProperties = getFilterRestrictions(oFilterRestrictions, \"RequiredProperties\") || [];\n\toRet.NonFilterableProperties = getFilterRestrictions(oFilterRestrictions, \"NonFilterableProperties\") || [];\n\n\tconst sEntitySetPath = converterContext.getContextPath();\n\tconst aPathParts = sEntitySetPath.split(\"/\");\n\tif (aPathParts.length > 2) {\n\t\tconst sNavigationPath = aPathParts[aPathParts.length - 1];\n\t\taPathParts.splice(-1, 1);\n\t\tconst oNavigationRestrictions = getNavigationRestrictions(converterContext, sNavigationPath);\n\t\tconst oNavigationFilterRestrictions = oNavigationRestrictions && oNavigationRestrictions.FilterRestrictions;\n\t\toRet.RequiredProperties = oRet.RequiredProperties.concat(\n\t\t\tgetFilterRestrictions(oNavigationFilterRestrictions, \"RequiredProperties\") || []\n\t\t);\n\t\toRet.NonFilterableProperties = oRet.NonFilterableProperties.concat(\n\t\t\tgetFilterRestrictions(oNavigationFilterRestrictions, \"NonFilterableProperties\") || []\n\t\t);\n\t}\n\tconst aRequiredProps = oRet.RequiredProperties;\n\tconst aNonFilterableProps = oRet.NonFilterableProperties;\n\tconst aFetchedProperties: PropertyInfo[] = [];\n\n\t// process the fields to add necessary properties\n\tpropertyInfoFields.forEach(function (propertyInfoField) {\n\t\tconst sPropertyPath = propertyInfoField.conditionPath.replace(/[+*]/g, \"\");\n\t\tif (!aNonFilterableProps.includes(sPropertyPath)) {\n\t\t\tconst oPropertyInfo = assignDataTypeToPropertyInfo(propertyInfoField, converterContext, aRequiredProps, aTypeConfig);\n\t\t\taFetchedProperties.push(oPropertyInfo);\n\t\t}\n\t});\n\n\t//add edit\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath();\n\tconst isHiddenDraftEnabled = converterContext.getManifestWrapper().getSapFeManifestConfiguration()?.app?.hideDraft?.enabled;\n\tif (ModelHelper.isObjectPathDraftSupported(dataModelObjectPath)) {\n\t\tif (showDraftEditStatus(converterContext) && !isHiddenDraftEnabled) {\n\t\t\taFetchedProperties.push(getEditStateFilterPropertyInfo());\n\t\t}\n\t}\n\t// add search\n\tconst searchRestrictions = getSearchRestrictions(converterContext);\n\tconst hideBasicSearch = Boolean(searchRestrictions && !searchRestrictions.Searchable);\n\tif (sEntitySetPath && hideBasicSearch !== true) {\n\t\tif (!searchRestrictions || searchRestrictions?.Searchable) {\n\t\t\taFetchedProperties.push(getSearchFilterPropertyInfo());\n\t\t}\n\t}\n\n\treturn aFetchedProperties;\n};\n\nexport const showDraftEditStatus = function (converterContext: ConverterContext<PageContextPathTarget>): boolean {\n\tconst navigationRestrictions = getNavigationRestrictions(converterContext, \"DraftAdministrativeData\");\n\treturn navigationRestrictions?.FilterRestrictions?.Filterable === false ? false : true;\n};\n\nexport const insertCustomManifestElements = function (\n\tfilterFields: ManifestFilterField[],\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tannotationPath: string\n): ManifestFilterField[] {\n\tconst manifestFilterFields = getManifestFilterFields(entityType, converterContext, annotationPath);\n\t_getMissingLabelForManifestFilterFields(filterFields, manifestFilterFields);\n\treturn insertCustomElements(filterFields, manifestFilterFields, {\n\t\tavailability: OverrideType.overwrite,\n\t\tlabel: OverrideType.overwrite,\n\t\ttype: OverrideType.overwrite,\n\t\tposition: OverrideType.overwrite,\n\t\tslotName: OverrideType.overwrite,\n\t\tdocumentRefText: OverrideType.overwrite,\n\t\ttemplate: OverrideType.overwrite,\n\t\tsettings: OverrideType.overwrite,\n\t\tvisualFilter: OverrideType.overwrite,\n\t\trequired: OverrideType.overwrite\n\t});\n};\n\nexport const sortPropertyInfosByGroupLabel = (propertyInfos: PropertyInfo[]): void => {\n\tpropertyInfos.sort(function (a: FilterGroup, b: FilterGroup) {\n\t\tconst aGroupLabelIsSet = a.groupLabel !== undefined && a.groupLabel !== null;\n\t\tconst bGroupLabelIsSet = b.groupLabel !== undefined && b.groupLabel !== null;\n\t\tif (!aGroupLabelIsSet && !bGroupLabelIsSet) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (aGroupLabelIsSet && !bGroupLabelIsSet) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (!aGroupLabelIsSet && bGroupLabelIsSet) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn a.groupLabel!.localeCompare(b.groupLabel!);\n\t});\n};\n\n/**\n * Retrieve the configuration for the selection fields that will be used within the filter bar\n * This configuration takes into account the annotation and the selection variants.\n * @param converterContext\n * @param lrTables\n * @param annotationPath\n * @param [includeHidden]\n * @param [lineItemTerm]\n * @returns An array of selection fields\n */\nexport const getSelectionFields = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tlrTables: TableVisualization[] = [],\n\tannotationPath = \"\",\n\tincludeHidden?: boolean,\n\tlineItemTerm?: string\n): { selectionFields: FilterField[]; sPropertyInfo: string } {\n\tconst oAnnotatedSelectionFieldData = getAnnotatedSelectionFieldData(\n\t\tconverterContext,\n\t\tlrTables,\n\t\tannotationPath,\n\t\tincludeHidden,\n\t\tlineItemTerm\n\t);\n\tconst parameterFields = _getParameterFields(converterContext);\n\tlet propertyInfoFields: FilterField[] = oAnnotatedSelectionFieldData.propertyInfoFields;\n\tconst entityType = oAnnotatedSelectionFieldData.entityType;\n\n\tpropertyInfoFields = parameterFields.concat(propertyInfoFields);\n\n\tpropertyInfoFields = insertCustomManifestElements(propertyInfoFields, entityType, converterContext, annotationPath);\n\n\tconst aFetchedProperties = processSelectionFields(\n\t\tpropertyInfoFields,\n\t\tconverterContext,\n\t\toAnnotatedSelectionFieldData.defaultFilterFields\n\t);\n\tsortPropertyInfosByGroupLabel(aFetchedProperties);\n\n\tlet sFetchProperties = JSON.stringify(aFetchedProperties);\n\tsFetchProperties = sFetchProperties.replace(/\\{/g, \"\\\\{\");\n\tsFetchProperties = sFetchProperties.replace(/\\}/g, \"\\\\}\");\n\tconst sPropertyInfo = sFetchProperties;\n\t// end of propertyFields processing\n\n\t// to populate selection fields\n\tlet propSelectionFields: FilterField[] = JSON.parse(JSON.stringify(oAnnotatedSelectionFieldData.propertyInfoFields));\n\tpropSelectionFields = parameterFields.concat(propSelectionFields);\n\t// create a map of properties to be used in selection variants\n\tconst excludedFilterProperties = oAnnotatedSelectionFieldData.excludedFilterProperties;\n\tconst filterFacets = entityType?.annotations?.UI?.FilterFacets;\n\tlet filterFacetMap: Record<string, FilterGroup> = {};\n\n\tconst aFieldGroups = converterContext.getAnnotationsByTerm(\"UI\", UIAnnotationTerms.FieldGroup) as FieldGroup[];\n\n\tif (filterFacets === undefined || filterFacets.length < 0) {\n\t\tfor (const i in aFieldGroups) {\n\t\t\tfilterFacetMap = {\n\t\t\t\t...filterFacetMap,\n\t\t\t\t...getFieldGroupFilterGroups(aFieldGroups[i])\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfilterFacetMap = filterFacets.reduce((previousValue: Record<string, FilterGroup>, filterFacet: ReferenceFacetTypes) => {\n\t\t\tfor (let i = 0; i < (filterFacet?.Target?.$target as FieldGroup)?.Data?.length; i++) {\n\t\t\t\tpreviousValue[((filterFacet?.Target?.$target as FieldGroup)?.Data[i] as DataFieldTypes)?.Value?.path] = {\n\t\t\t\t\tgroup: filterFacet?.ID?.toString(),\n\t\t\t\t\tgroupLabel: filterFacet?.Label?.toString()\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn previousValue;\n\t\t}, {});\n\t}\n\n\t// create a map of all potential filter fields based on...\n\tconst filterFields: Record<string, FilterField> = oAnnotatedSelectionFieldData.filterFields;\n\n\t// finally create final list of filter fields by adding the SelectionFields first (order matters)...\n\tconst allFilters = propSelectionFields\n\n\t\t// ...and adding remaining filter fields, that are not used in a SelectionVariant (order doesn't matter)\n\t\t.concat(\n\t\t\tObject.keys(filterFields)\n\t\t\t\t.filter((propertyPath) => !excludedFilterProperties.has(propertyPath))\n\t\t\t\t.map((propertyPath) => {\n\t\t\t\t\treturn Object.assign(filterFields[propertyPath], filterFacetMap[propertyPath]);\n\t\t\t\t})\n\t\t);\n\n\tconst selectionFields = insertCustomManifestElements(allFilters, entityType, converterContext, annotationPath);\n\n\t// Add caseSensitive property to all selection fields.\n\tconst isCaseSensitive = isFilteringCaseSensitive(converterContext);\n\tselectionFields.forEach((filterField) => {\n\t\tfilterField.caseSensitive = isCaseSensitive;\n\t});\n\n\treturn { selectionFields, sPropertyInfo };\n};\n\n/**\n * Determines whether the filter bar inside a value help dialog should be expanded. This is true if one of the following conditions hold:\n * (1) a filter property is mandatory,\n * (2) no search field exists (entity isn't search enabled),\n * (3) when the data isn't loaded by default (annotation FetchValues = 2).\n * @param converterContext The converter context\n * @param filterRestrictionsAnnotation The FilterRestriction annotation\n * @param valueList The ValueList annotation\n * @returns The value for expandFilterFields\n */\nexport const getExpandFilterFields = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tfilterRestrictionsAnnotation: FilterRestrictions | undefined,\n\tvalueList: MetaModelType<ValueList>\n): boolean {\n\tconst requiredProperties = getFilterRestrictions(filterRestrictionsAnnotation, \"RequiredProperties\");\n\tconst searchRestrictions = getSearchRestrictions(converterContext);\n\tconst hideBasicSearch = Boolean(searchRestrictions && !searchRestrictions.Searchable);\n\tif (requiredProperties.length > 0 || hideBasicSearch || valueList?.FetchValues === 2) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n"],"mappings":"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","ignoreList":[],"file":"FilterBar-dbg.js"}