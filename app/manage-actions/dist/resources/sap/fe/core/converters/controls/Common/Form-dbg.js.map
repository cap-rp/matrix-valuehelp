{"version":3,"names":["FormElementType","_exports","getDefaultFormatOptionsForForm","textLinesEdit","isFieldPartOfPreview","field","formPartOfPreview","valueOf","annotations","UI","PartOfPreview","undefined","getFormElementsFromAnnotations","facetDefinition","converterContext","formElements","resolvedTarget","getEntityTypeAnnotation","Target","value","formAnnotation","annotation","getDataFieldsFromAnnotations","semanticObjectAnnotationPath","getSemanticObjectPath","$Type","isReferencePropertyStaticallyHidden","formElement","key","KeyHelper","generateKeyFromDataField","type","Annotation","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","semanticObjectPath","formatOptions","isPartOfPreview","$target","connectedFields","Object","values","Data","filter","connectedField","hasOwnProperty","map","connnectedFieldElement","push","term","forEach","qualifier","getFormElementsFromManifest","manifestWrapper","getManifestWrapper","manifestFormContainer","getFormContainer","fields","keys","fieldId","id","Default","template","propertyPath","property","label","fetchTextFromMetaModel","position","placement","Placement","After","readOnly","semanticObject","actions","additionalSettings","sFormContainerId","createIdForAnnotation","sAnnotationPath","isVisible","compileExpression","not","equal","getExpressionFromAnnotation","Hidden","sEntitySetPath","entitySet","getEntitySet","dataModelObjectPathTarget","getDataModelObjectPath","targetObject","getTargetEntitySetPath","isNavigationProperty","containsTarget","getTargetObjectPath","isSingleton","aFormElements","insertCustomElements","OverrideType","overwrite","action","facetName","length","oActionShowDetails","getFormStandardActionButtonID","text","ifElse","pathInModel","ActionType","ShowFormDetails","press","some","oFormElement","useSingleTextAreaFieldAsNotes","annotationHidden","getFormContainersForCollection","formContainers","formContainerSettings","Facets","facet","isReferenceFacet","createFormDefinition","getFormID","useFormContainerLabels","hasFacetsNotPartOfPreview","childFacet","Error"],"sourceRoot":".","sources":["Form.ts"],"sourcesContent":["import type { Masked } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { Contact } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport { CommunicationAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport type {\n\tCollectionFacet,\n\tCollectionFacetTypes,\n\tDataFieldAbstractTypes,\n\tDataPoint,\n\tFacetTypes,\n\tFieldGroup,\n\tFieldGroupType,\n\tIdentification,\n\tInputMask,\n\tPartOfPreview,\n\tReferenceFacet,\n\tReferenceFacetTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, equal, getExpressionFromAnnotation, ifElse, not, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { getSemanticObjectPath } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { BaseAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport { isNavigationProperty, isSingleton } from \"sap/fe/core/helpers/TypeGuards\";\nimport { getTargetEntitySetPath, getTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { createIdForAnnotation } from \"../../../helpers/StableIdHelper\";\nimport type ConverterContext from \"../../ConverterContext\";\nimport type { FormManifestConfiguration, FormatOptionsType } from \"../../ManifestSettings\";\nimport { ActionType } from \"../../ManifestSettings\";\nimport type { ConfigurableObject, CustomElement } from \"../../helpers/ConfigurableObject\";\nimport { OverrideType, Placement, insertCustomElements } from \"../../helpers/ConfigurableObject\";\nimport { isReferencePropertyStaticallyHidden } from \"../../helpers/DataFieldHelper\";\nimport { getFormID, getFormStandardActionButtonID } from \"../../helpers/ID\";\nimport { KeyHelper } from \"../../helpers/Key\";\n\nexport type FormDefinition = {\n\tid: string;\n\tuseFormContainerLabels: boolean;\n\thasFacetsNotPartOfPreview: boolean;\n\tformContainers: FormContainer[];\n\tisVisible: CompiledBindingToolkitExpression;\n};\n\nexport enum FormElementType {\n\tDefault = \"Default\",\n\tSlot = \"Slot\",\n\tAnnotation = \"Annotation\"\n}\n\nexport type BaseFormElement = ConfigurableObject & {\n\tid?: string;\n\ttype: FormElementType;\n\tlabel?: string;\n\tvisible?: CompiledBindingToolkitExpression;\n\tformatOptions?: FormatOptionsType;\n\treadOnly?: boolean;\n\tsemanticObject?: string;\n};\n\nexport type AnnotationFormElement = BaseFormElement & {\n\tidPrefix?: string;\n\tannotationPath?: string;\n\tisValueMultilineText?: boolean;\n\tsemanticObjectPath?: string;\n\tconnectedFields?: { semanticObjectPath?: string }[];\n\tisPartOfPreview?: boolean;\n};\n\nexport type CustomFormElement = CustomElement<\n\tBaseFormElement & {\n\t\ttype: FormElementType;\n\t\ttemplate: string;\n\t\tpropertyPath?: string;\n\t}\n>;\n\nexport type FormElement = CustomFormElement | AnnotationFormElement;\n\nexport type AdditionalFormSettings = {\n\tuseSingleTextAreaFieldAsNotes?: boolean;\n};\n\nexport type FormContainer = {\n\tid?: string;\n\tformElements: FormElement[];\n\tannotationPath: string;\n\tisVisible: CompiledBindingToolkitExpression;\n\tannotationHidden: boolean;\n\tentitySet?: string;\n\tactions?: BaseAction[];\n\tuseSingleTextAreaFieldAsNotes?: boolean;\n};\n\n/**\n * Returns default format options for text fields on a form.\n * @returns Collection of format options with default values\n */\nfunction getDefaultFormatOptionsForForm(): FormatOptionsType {\n\treturn {\n\t\ttextLinesEdit: 4\n\t};\n}\n\nfunction isFieldPartOfPreview(field: DataFieldAbstractTypes, formPartOfPreview?: PartOfPreview): boolean {\n\t// Both each form and field can have the PartOfPreview annotation. Only if the form is not hidden (not partOfPreview) we allow toggling on field level\n\treturn (\n\t\tformPartOfPreview?.valueOf() === false ||\n\t\tfield.annotations?.UI?.PartOfPreview === undefined ||\n\t\tfield.annotations?.UI?.PartOfPreview.valueOf() === true\n\t);\n}\n\nfunction getFormElementsFromAnnotations(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationFormElement[] {\n\tconst formElements: AnnotationFormElement[] = [];\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(facetDefinition.Target.value);\n\tconst formAnnotation: Identification | FieldGroup | Contact | DataPoint | InputMask | Masked = resolvedTarget.annotation as\n\t\t| Identification\n\t\t| FieldGroup\n\t\t| Contact\n\t\t| DataPoint\n\t\t| InputMask\n\t\t| Masked;\n\tconverterContext = resolvedTarget.converterContext;\n\n\tfunction getDataFieldsFromAnnotations(field: DataFieldAbstractTypes, formPartOfPreview: PartOfPreview | undefined): void {\n\t\tconst semanticObjectAnnotationPath = getSemanticObjectPath(converterContext, field);\n\t\tif (\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForAction &&\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForActionGroup &&\n\t\t\t!isReferencePropertyStaticallyHidden(field)\n\t\t) {\n\t\t\tconst formElement = {\n\t\t\t\tkey: KeyHelper.generateKeyFromDataField(field),\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(field.fullyQualifiedName)}/`,\n\t\t\t\tsemanticObjectPath: semanticObjectAnnotationPath,\n\t\t\t\tformatOptions: getDefaultFormatOptionsForForm(),\n\t\t\t\tisPartOfPreview: isFieldPartOfPreview(field, formPartOfPreview)\n\t\t\t};\n\t\t\tif (\n\t\t\t\tfield.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\" &&\n\t\t\t\tfield.Target.$target?.$Type === \"com.sap.vocabularies.UI.v1.ConnectedFieldsType\"\n\t\t\t) {\n\t\t\t\tconst connectedFields = Object.values(field.Target.$target.Data).filter(\n\t\t\t\t\t(connectedField: unknown) => (connectedField as DataFieldAbstractTypes)?.hasOwnProperty(\"Value\")\n\t\t\t\t) as DataFieldAbstractTypes[];\n\t\t\t\t(formElement as AnnotationFormElement).connectedFields = connectedFields.map((connnectedFieldElement) => {\n\t\t\t\t\treturn { semanticObjectPath: getSemanticObjectPath(converterContext, connnectedFieldElement) };\n\t\t\t\t});\n\t\t\t}\n\t\t\tformElements.push(formElement);\n\t\t}\n\t}\n\n\tswitch (formAnnotation?.term) {\n\t\tcase UIAnnotationTerms.FieldGroup:\n\t\t\tformAnnotation.Data.forEach((field) => getDataFieldsFromAnnotations(field, facetDefinition.annotations?.UI?.PartOfPreview));\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.Identification:\n\t\t\tformAnnotation.forEach((field) => getDataFieldsFromAnnotations(field, facetDefinition.annotations?.UI?.PartOfPreview));\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.DataPoint:\n\t\t\tformElements.push({\n\t\t\t\t// key: KeyHelper.generateKeyFromDataField(formAnnotation),\n\t\t\t\tkey: `DataPoint::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.InputMask:\n\t\t\tformElements.push({\n\t\t\t\tkey: `MaskedInput::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase CommonAnnotationTerms.Masked:\n\t\t\tformElements.push({\n\t\t\t\tkey: `Masked::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase CommunicationAnnotationTerms.Contact:\n\t\t\tformElements.push({\n\t\t\t\t// key: KeyHelper.generateKeyFromDataField(formAnnotation),\n\t\t\t\tkey: `Contact::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn formElements;\n}\n\nexport function getFormElementsFromManifest(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, CustomFormElement> {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst manifestFormContainer: FormManifestConfiguration = manifestWrapper.getFormContainer(facetDefinition.Target.value);\n\tconst formElements: Record<string, CustomFormElement> = {};\n\tif (manifestFormContainer?.fields) {\n\t\tObject.keys(manifestFormContainer?.fields).forEach((fieldId) => {\n\t\t\tformElements[fieldId] = {\n\t\t\t\tkey: fieldId,\n\t\t\t\tid: `CustomFormElement::${fieldId}`,\n\t\t\t\ttype: manifestFormContainer.fields[fieldId].type || FormElementType.Default,\n\t\t\t\ttemplate: manifestFormContainer.fields[fieldId].template,\n\t\t\t\tpropertyPath: manifestFormContainer.fields[fieldId]?.property,\n\t\t\t\tlabel: converterContext.fetchTextFromMetaModel(manifestFormContainer.fields[fieldId].label),\n\t\t\t\tposition: manifestFormContainer.fields[fieldId].position || {\n\t\t\t\t\tplacement: Placement.After\n\t\t\t\t},\n\t\t\t\tformatOptions: {\n\t\t\t\t\t...getDefaultFormatOptionsForForm(),\n\t\t\t\t\t...manifestFormContainer.fields[fieldId].formatOptions\n\t\t\t\t},\n\t\t\t\t...(manifestFormContainer.fields[fieldId].readOnly !== undefined && {\n\t\t\t\t\treadOnly: manifestFormContainer.fields[fieldId].readOnly\n\t\t\t\t}),\n\t\t\t\t...(manifestFormContainer.fields[fieldId].semanticObject !== undefined && {\n\t\t\t\t\tsemanticObject: manifestFormContainer.fields[fieldId].semanticObject\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\t}\n\treturn formElements;\n}\n\nexport function getFormContainer(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormContainer {\n\tconst sFormContainerId = createIdForAnnotation(facetDefinition) as string;\n\tconst sAnnotationPath = converterContext.getEntitySetBasedAnnotationPath(facetDefinition.fullyQualifiedName);\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(facetDefinition.Target.value);\n\tconst isVisible = compileExpression(not(equal(true, getExpressionFromAnnotation(facetDefinition.annotations?.UI?.Hidden))));\n\tlet sEntitySetPath!: string;\n\t// resolvedTarget doesn't have a entitySet in case Containments and Paramterized services.\n\tconst entitySet = resolvedTarget.converterContext.getEntitySet();\n\tconst dataModelObjectPathTarget = resolvedTarget.converterContext.getDataModelObjectPath().targetObject;\n\tif (entitySet && entitySet !== converterContext.getEntitySet()) {\n\t\tsEntitySetPath = getTargetEntitySetPath(resolvedTarget.converterContext.getDataModelObjectPath());\n\t} else if (isNavigationProperty(dataModelObjectPathTarget) && dataModelObjectPathTarget?.containsTarget === true) {\n\t\tsEntitySetPath = getTargetObjectPath(resolvedTarget.converterContext.getDataModelObjectPath(), false);\n\t} else if (entitySet && !sEntitySetPath && isSingleton(entitySet)) {\n\t\tsEntitySetPath = entitySet.fullyQualifiedName;\n\t} else if (!entitySet && isNavigationProperty(dataModelObjectPathTarget) && dataModelObjectPathTarget?.containsTarget === false) {\n\t\tsEntitySetPath = getTargetObjectPath(resolvedTarget.converterContext.getDataModelObjectPath(), false);\n\t}\n\tconst aFormElements = insertCustomElements(\n\t\tgetFormElementsFromAnnotations(facetDefinition, converterContext),\n\t\tgetFormElementsFromManifest(facetDefinition, converterContext),\n\t\t{ formatOptions: OverrideType.overwrite, readOnly: OverrideType.overwrite, semanticObject: OverrideType.overwrite }\n\t);\n\n\tactions = actions !== undefined ? actions.filter((action) => action.facetName == facetDefinition.fullyQualifiedName) : [];\n\tif (actions.length === 0) {\n\t\tactions = undefined;\n\t}\n\n\tconst oActionShowDetails: BaseAction = {\n\t\tid: getFormStandardActionButtonID(sFormContainerId, \"ShowHideDetails\"),\n\t\tkey: \"StandardAction::ShowHideDetails\",\n\t\ttext: compileExpression(\n\t\t\tifElse(\n\t\t\t\tequal(pathInModel(\"showDetails\", \"internal\"), true),\n\t\t\t\tpathInModel(\"T_COMMON_OBJECT_PAGE_HIDE_FORM_CONTAINER_DETAILS\", \"sap.fe.i18n\"),\n\t\t\t\tpathInModel(\"T_COMMON_OBJECT_PAGE_SHOW_FORM_CONTAINER_DETAILS\", \"sap.fe.i18n\")\n\t\t\t)\n\t\t),\n\t\ttype: ActionType.ShowFormDetails,\n\t\tpress: \"FormContainerRuntime.toggleDetails\"\n\t};\n\n\tif (\n\t\tfacetDefinition.annotations?.UI?.PartOfPreview?.valueOf() !== false &&\n\t\taFormElements.some((oFormElement) => oFormElement.isPartOfPreview === false)\n\t) {\n\t\tif (actions !== undefined) {\n\t\t\tactions.push(oActionShowDetails);\n\t\t} else {\n\t\t\tactions = [oActionShowDetails];\n\t\t}\n\t}\n\n\treturn {\n\t\tid: sFormContainerId,\n\t\tformElements: aFormElements,\n\t\tannotationPath: sAnnotationPath,\n\t\tisVisible: isVisible,\n\t\tentitySet: sEntitySetPath,\n\t\tactions: actions,\n\t\tuseSingleTextAreaFieldAsNotes: additionalSettings?.useSingleTextAreaFieldAsNotes,\n\t\tannotationHidden: facetDefinition.annotations?.UI?.Hidden ? true : false\n\t};\n}\n\nfunction getFormContainersForCollection(\n\tfacetDefinition: CollectionFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormContainer[] {\n\tconst formContainers: FormContainer[] = [];\n\tconst formContainerSettings = {\n\t\tuseSingleTextAreaFieldAsNotes: additionalSettings?.useSingleTextAreaFieldAsNotes\n\t};\n\tfacetDefinition.Facets?.forEach((facet) => {\n\t\t// Ignore level 3 collection facet\n\t\tif (facet.$Type === UIAnnotationTypes.CollectionFacet) {\n\t\t\treturn;\n\t\t}\n\t\tformContainers.push(getFormContainer(facet as ReferenceFacetTypes, converterContext, actions, formContainerSettings));\n\t});\n\treturn formContainers;\n}\n\nexport function isReferenceFacet(facetDefinition: FacetTypes): facetDefinition is ReferenceFacetTypes {\n\treturn facetDefinition.$Type === UIAnnotationTypes.ReferenceFacet;\n}\n\nexport function createFormDefinition(\n\tfacetDefinition: FieldGroupType | CollectionFacet | ReferenceFacet | undefined,\n\tisVisible: CompiledBindingToolkitExpression,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormDefinition {\n\tswitch (facetDefinition?.$Type) {\n\t\tcase UIAnnotationTypes.CollectionFacet:\n\t\t\t// Keep only valid children\n\t\t\treturn {\n\t\t\t\tid: getFormID(facetDefinition),\n\t\t\t\tuseFormContainerLabels: true,\n\t\t\t\thasFacetsNotPartOfPreview: facetDefinition.Facets.some(\n\t\t\t\t\t(childFacet) => childFacet.annotations?.UI?.PartOfPreview?.valueOf() === false\n\t\t\t\t),\n\t\t\t\tformContainers: getFormContainersForCollection(facetDefinition, converterContext, actions, additionalSettings),\n\t\t\t\tisVisible: isVisible\n\t\t\t};\n\t\tcase UIAnnotationTypes.ReferenceFacet:\n\t\t\treturn {\n\t\t\t\tid: getFormID(facetDefinition),\n\t\t\t\tuseFormContainerLabels: false,\n\t\t\t\thasFacetsNotPartOfPreview: facetDefinition.annotations?.UI?.PartOfPreview?.valueOf() === false,\n\t\t\t\tformContainers: [getFormContainer(facetDefinition, converterContext, actions, additionalSettings)],\n\t\t\t\tisVisible: isVisible\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error(\"Cannot create form based on ReferenceURLFacet\");\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"Form-dbg.js"}