{"version":3,"file":"ModelHelper.js","names":["ModelHelper","disableCollaborationDraft","isStickySessionSupported","metaModel","entityContainer","getObject","entitySetName","$kind","isDraftSupported","path","metaContext","getMetaContext","objectPath","getInvolvedDataModelObjects","this","isObjectPathDraftSupported","dataModelObjectPath","currentEntitySet","targetEntitySet","bIsDraftRoot","isDraftRoot","bIsDraftNode","isDraftNode","bIsDraftParentEntityForContainment","isNavigationProperty","targetObject","containsTarget","startingEntitySet","annotations","Common","DraftRoot","DraftNode","isMetaPathDraftSupported","getClosestEntitySet","isCollaborationDraftSupportedFromConverterContext","converterContext","getConvertedTypes","entitySets","some","entitySet","ShareAction","undefined","isCollaborationDraftSupported","metaObject","templateInterface","oMetaModel","context","getModel","__$feIsCollaborationDraftEnabled","oEntityContainer","sEntitySet","getDraftRootPath","oContext","getMetaModel","getRootPath","sPath","model","firstIteration","arguments","length","sIterationPath","RegExp","exec","sEntityPath","getMetaPath","mDataModel","MetaModelConverter","getContext","getPath","getStickyRootPath","Session","StickySessionSupported","getTargetEntitySet","sEntitySetPath","getEntitySetPath","odataMetaModel","entitySetPath","split","filter","filterOutNavPropBinding","join","pathParts","initialPathObject","growingPath","pendingNavPropBinding","pathObject","reduce","pathUnderConstruction","pathPart","idx","delimiter","tempPath","navPropBindings","navPropBindingToCheck","Object","keys","hasOwnProperty","replace","getActionParameterItemsModelPath","oParameter","$Name","sPathPart","enhanceInternalJSONModel","oInternalModel","fnBindContext","bindContext","mParameters","oEvents","contextBinding","apply","fnGetBoundContext","getBoundContext","oBoundContext","setProperty","propertyPath","value","propertyPathSplit","i","getProperty","enhanceUiJSONModel","uiModel","library","fnSetProperty","asyncUpdate","EditMode","Editable","Display","enhanceViewJSONModel","viewModel","fnGetObject","_getObject","isFilteringCaseSensitive","filterFunctions","_filterFunctions","indexOf","getMetaPathForContext","oModel","getRootEntitySetPath","contextPath","rootEntitySetPath","aPaths","getAbsoluteMetaPathForListBinding","oView","vListBinding","sMetaPath","startsWith","oBindingContext","getBindingContext","sRootContextPath","oBinding","oRootBinding","getRootBinding","sRootBindingPath","sRelativePath","getDraftRoot","getDraftNode","isSticky","getStickySession","isUpdateHidden","entityType","isEntitySet","UI","UpdateHidden","getDeleteHidden","DeleteHidden","getAbsolutePathFromListBinding","listBinding","metamodel","metaPath","rootBinding","rootBindingPath","relativePath","enhanceODataModel","odataModel","appComponent","virtualPropertyBindingRegistry","Array","fnMessage","setMessages","localAnnotationModel","JSONModel","setDefaultBindingMode","BindingMode","OneWay","baseSetProperty","baseGetProperty","propertyName","annotationType","isTransient","contextObject","MetaPath","convertTypes","externalIdProperty","getMetaPathForPath","getTarget","ExternalID","isPathAnnotationExpression","fullPath","_refreshLocalModel","refresh","externalIdPropPath","propertiesToRequest","substring","lastIndexOf","textProperty","Text","textPropPath","includes","push","requestSideEffects","then","catch","err","Log","error","pathFromRoot","clearAnnotationType","annotationTypes","dataSet","isContext","isA","endsWith","_localAnnotationModel","getLocalAnnotationModel","messages","cleanedData","getData","setData","messageTarget","getType","getMessage","fnBindProperty","bindProperty","bind","parameters","recommendationFeatureDisabled","getEnvironmentCapabilities","getCapabilities","DisableInputAssistance","recommendationPropertyBinding","setUpRecommendationLocalModelBinding","internalIdBinding","externalIdBinding","attachChange","requestValue","propBinding","updateRequired","expression","getVirtualBindingExpression","ghostControl","Any","any","compileExpression","bindBackProperty","fnDestroyPropertyBinding","destroy","fnSetContext","setContext","newContext","setBindingContext","setModel","ghostBinding","getBindingInfo","binding","fnCheckUpdate","checkUpdate","fnDestroy","vpBinding","fetchTextFromMetaModel","text","metaModelPath","getEntityTypeAnnotation","annotation","toString","e","info","getMessagesPath","targetEntityType","Messages","recommendationbinding","setContextOnRecommendationBinding","odataPropertyBinding","recommendationComplexProperty","isRecommendedProperty","validateRecommendationBindingPath","alreadyBound","existingBinding","setType","Raw","setBindingMode","event","propertyBinding","getSource","currentContext","contextRecommendations","getValue","setRecommendationsOnLocalAnnotationModel","bindingPath","contextMetaPath","Recommendations","entityProperties","entityProperty","name","targetType","properties","property","recommendedProperty","propertyRecommendations","localModelPath","typeAheadValues","propertyRecommendation","RecommendedFieldIsSuggestion","placeholderValueAnnotationPath","placeholderDescriptionAnnotationPath","RecommendedFieldValue","RecommendedFieldDescription","getAlternateAndSecondaryKeys","alternateKeys","_fetchAlternateKeys","entityTypeOrSet","Core","AlternateKeys","forEach","alternateKey","Key","key","Name","_fetchSecondaryKeys","eT","SecondaryKey","secondaryKey"],"sources":["./ModelHelper.ts"],"sourcesContent":["/* This class contains helpers to be used at runtime to retrieve further information on the model */\nimport type { ComplexType, EntitySet, EntityType, Property, PropertyPath, Singleton } from \"@sap-ux/vocabularies-types\";\nimport type { FilterFunctions } from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type { DraftNode, DraftRoot } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { AlternateKey, PropertyRef } from \"@sap-ux/vocabularies-types/vocabularies/Core\";\nimport type { StickySessionSupported } from \"@sap-ux/vocabularies-types/vocabularies/Session\";\nimport type { DeleteHidden, UpdateHidden } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { EntityTypeAnnotations_UI } from \"@sap-ux/vocabularies-types/vocabularies/UI_Edm\";\nimport Log from \"sap/base/Log\";\nimport { compileExpression } from \"sap/fe/base/BindingToolkit\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport Any from \"sap/fe/core/controls/Any\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { MetaModelActionParameter } from \"sap/fe/core/converters/MetaModelConverter\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { convertTypes, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport { isEntitySet, isNavigationProperty, isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\nimport type BaseContext from \"sap/ui/model/Context\";\nimport type ContextBinding from \"sap/ui/model/ContextBinding\";\nimport type MetaModel from \"sap/ui/model/MetaModel\";\nimport type PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Raw from \"sap/ui/model/odata/type/Raw\";\nimport type { default as Context, default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type { default as ODataListBinding } from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ODataPropertyBinding from \"sap/ui/model/odata/v4/ODataPropertyBinding\";\nimport type { ODataPropertyBinding$ChangeEvent } from \"sap/ui/model/odata/v4/ODataPropertyBinding\";\nimport type AppComponent from \"../AppComponent\";\n\n// TODO: Right now recommendations is not part of the UI vocabulary.\n// hence we are adding it to the type.\n// once this becomes part of the UI vocabulary then we can remove this.\nexport type EntityTypeAnnotations_UI_With_Recommendations = EntityTypeAnnotations_UI & {\n\tRecommendations?: {\n\t\tpath: string;\n\t};\n};\n\nconst ModelHelper = {\n\t// global switch to disable the collaboration draft by a private manifest flag\n\t// this allows customers to disable the collaboration draft in case we run into issues with the first delivery\n\t// this will be removed with the next S/4 release\n\tdisableCollaborationDraft: false,\n\t/**\n\t * Method to determine if the programming model is sticky.\n\t * @param metaModel ODataModelMetaModel to check for sticky enabled entity\n\t * @returns Returns true if sticky, else false\n\t */\n\tisStickySessionSupported: function (metaModel: ODataMetaModel): boolean {\n\t\tconst entityContainer = metaModel.getObject(\"/\");\n\t\tfor (const entitySetName in entityContainer) {\n\t\t\tif (\n\t\t\t\tentityContainer[entitySetName].$kind === \"EntitySet\" &&\n\t\t\t\tmetaModel.getObject(`/${entitySetName}@com.sap.vocabularies.Session.v1.StickySessionSupported`)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Method to determine if the programming model is draft.\n\t * @param metaModel ODataModelMetaModel of the context for which draft support shall be checked\n\t * @param path Path for which draft support shall be checked\n\t * @returns Returns true if draft, else false\n\t */\n\tisDraftSupported: function (metaModel: ODataMetaModel, path: string): boolean {\n\t\tconst metaContext = metaModel.getMetaContext(path);\n\t\tconst objectPath = getInvolvedDataModelObjects<PageContextPathTarget>(metaContext);\n\t\treturn this.isObjectPathDraftSupported(objectPath);\n\t},\n\n\t/**\n\t * Checks if draft is supported for the data model object path.\n\t * @param dataModelObjectPath\n\t * @returns `true` if it is supported\n\t */\n\tisObjectPathDraftSupported: function (dataModelObjectPath: DataModelObjectPath<unknown>): boolean {\n\t\tconst currentEntitySet = dataModelObjectPath.targetEntitySet as EntitySet;\n\t\tconst bIsDraftRoot = ModelHelper.isDraftRoot(currentEntitySet);\n\t\tconst bIsDraftNode = ModelHelper.isDraftNode(currentEntitySet);\n\t\tconst bIsDraftParentEntityForContainment =\n\t\t\tisNavigationProperty(dataModelObjectPath.targetObject) &&\n\t\t\tdataModelObjectPath.targetObject?.containsTarget &&\n\t\t\t((dataModelObjectPath.startingEntitySet as EntitySet)?.annotations?.Common?.DraftRoot ||\n\t\t\t\t(dataModelObjectPath.startingEntitySet as EntitySet)?.annotations?.Common?.DraftNode)\n\t\t\t\t? true\n\t\t\t\t: false;\n\n\t\treturn bIsDraftRoot || bIsDraftNode || (!currentEntitySet && bIsDraftParentEntityForContainment);\n\t},\n\n\tisMetaPathDraftSupported: function (dataModelObjectPath: MetaPath<unknown>): boolean {\n\t\tconst currentEntitySet = dataModelObjectPath.getClosestEntitySet() as EntitySet;\n\t\tconst bIsDraftRoot = ModelHelper.isDraftRoot(currentEntitySet);\n\t\tconst bIsDraftNode = ModelHelper.isDraftNode(currentEntitySet);\n\t\treturn bIsDraftRoot || bIsDraftNode;\n\t},\n\n\t/**\n\t * Returns whether or not we have a ShareAction in any EntitySet of the application.\n\t * @param converterContext The instance of the converter context\n\t * @returns True if the annotation exists. False otherwise.\n\t */\n\tisCollaborationDraftSupportedFromConverterContext(converterContext: ConverterContext): boolean {\n\t\treturn converterContext.getConvertedTypes().entitySets.some((entitySet) => {\n\t\t\treturn entitySet.annotations?.Common?.DraftRoot?.ShareAction !== undefined;\n\t\t});\n\t},\n\n\t/**\n\t * Method to determine if the service, supports collaboration draft.\n\t * @param metaObject MetaObject to be used for determination\n\t * @param templateInterface API provided by UI5 templating if used\n\t * @param templateInterface.context Context of the template\n\t * @returns Returns true if the service supports collaboration draft, else false\n\t */\n\tisCollaborationDraftSupported: function (metaObject: unknown, templateInterface?: { context: Context }): boolean {\n\t\tif (!ModelHelper.disableCollaborationDraft) {\n\t\t\tconst oMetaModel = (templateInterface?.context?.getModel() || metaObject) as ODataMetaModel & {\n\t\t\t\t__$feIsCollaborationDraftEnabled?: boolean;\n\t\t\t};\n\t\t\tif (oMetaModel.__$feIsCollaborationDraftEnabled !== undefined) {\n\t\t\t\treturn oMetaModel.__$feIsCollaborationDraftEnabled;\n\t\t\t}\n\t\t\tconst oEntityContainer = oMetaModel.getObject(\"/\");\n\t\t\tfor (const sEntitySet in oEntityContainer) {\n\t\t\t\tif (\n\t\t\t\t\toEntityContainer[sEntitySet].$kind === \"EntitySet\" &&\n\t\t\t\t\toMetaModel.getObject(`/${sEntitySet}@com.sap.vocabularies.Common.v1.DraftRoot/ShareAction`)\n\t\t\t\t) {\n\t\t\t\t\toMetaModel.__$feIsCollaborationDraftEnabled = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\toMetaModel.__$feIsCollaborationDraftEnabled = false;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Method to get the path of the DraftRoot path according to the provided context.\n\t * @param oContext OdataModel context\n\t * @returns Returns the path of the draftRoot entity, or undefined if no draftRoot is found\n\t */\n\tgetDraftRootPath: function (oContext: Context): string | undefined {\n\t\tconst oMetaModel = oContext.getModel().getMetaModel();\n\t\tconst getRootPath = function (sPath: string, model: ODataModel, firstIteration = true): string | undefined {\n\t\t\tconst sIterationPath = firstIteration ? sPath : new RegExp(/.*(?=\\/)/).exec(sPath)?.[0]; // *Regex to get the ancestor\n\t\t\tif (sIterationPath && sIterationPath !== \"/\") {\n\t\t\t\tconst sEntityPath = oMetaModel.getMetaPath(sIterationPath);\n\t\t\t\tconst mDataModel = MetaModelConverter.getInvolvedDataModelObjects(oMetaModel.getContext(sEntityPath));\n\t\t\t\tif ((mDataModel.targetEntitySet as EntitySet)?.annotations.Common?.DraftRoot) {\n\t\t\t\t\treturn sIterationPath;\n\t\t\t\t}\n\t\t\t\treturn getRootPath(sIterationPath, model, false);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t\treturn getRootPath(oContext.getPath(), oContext.getModel());\n\t},\n\n\t/**\n\t * Method to get the path of the StickyRoot path according to the provided context.\n\t * @param oContext OdataModel context\n\t * @returns Returns the path of the StickyRoot entity, or undefined if no StickyRoot is found\n\t */\n\tgetStickyRootPath: function (oContext: Context): string | undefined {\n\t\tconst oMetaModel = oContext.getModel().getMetaModel();\n\t\tconst getRootPath = function (sPath: string, model: ODataModel, firstIteration = true): string | undefined {\n\t\t\tconst sIterationPath = firstIteration ? sPath : new RegExp(/.*(?=\\/)/).exec(sPath)?.[0]; // *Regex to get the ancestor\n\t\t\tif (sIterationPath && sIterationPath !== \"/\") {\n\t\t\t\tconst sEntityPath = oMetaModel.getMetaPath(sIterationPath);\n\t\t\t\tconst mDataModel = MetaModelConverter.getInvolvedDataModelObjects(oMetaModel.getContext(sEntityPath));\n\t\t\t\tif (\n\t\t\t\t\tmDataModel.startingEntitySet === mDataModel.targetEntitySet &&\n\t\t\t\t\t(mDataModel.targetEntitySet as EntitySet)?.annotations?.Session?.StickySessionSupported\n\t\t\t\t) {\n\t\t\t\t\treturn sIterationPath;\n\t\t\t\t}\n\t\t\t\treturn getRootPath(sIterationPath, model, false);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t\treturn getRootPath(oContext.getPath(), oContext.getModel());\n\t},\n\t/**\n\t * Returns the path to the target entity set with navigation property binding.\n\t * @param oContext Context for which the target entity set will be determined\n\t * @returns Returns the path to the target entity set\n\t */\n\tgetTargetEntitySet: function (oContext: BaseContext): string {\n\t\tconst sPath = oContext.getPath();\n\t\tif (\n\t\t\toContext.getObject(\"$kind\") === \"EntitySet\" ||\n\t\t\toContext.getObject(\"$kind\") === \"Action\" ||\n\t\t\toContext.getObject(\"0/$kind\") === \"Action\"\n\t\t) {\n\t\t\treturn sPath;\n\t\t}\n\t\tconst sEntitySetPath = ModelHelper.getEntitySetPath(sPath);\n\t\treturn `/${oContext.getObject(sEntitySetPath)}`;\n\t},\n\n\t/**\n\t * Returns complete path to the entity set via using navigation property binding. Note: To be used only after the metamodel has loaded.\n\t * @param path Path for which complete entitySet path needs to be determined from entityType path\n\t * @param odataMetaModel Metamodel to be used.(Optional in normal scenarios, but needed for parameterized service scenarios)\n\t * @returns Returns complete path to the entity set\n\t */\n\tgetEntitySetPath: function (path: string, odataMetaModel?: ODataMetaModel): string {\n\t\tlet entitySetPath = \"\";\n\t\tif (!odataMetaModel) {\n\t\t\t// Previous implementation for getting entitySetPath from entityTypePath\n\t\t\tentitySetPath = `/${path.split(\"/\").filter(ModelHelper.filterOutNavPropBinding).join(\"/$NavigationPropertyBinding/\")}`;\n\t\t} else {\n\t\t\t// Calculating the entitySetPath from MetaModel.\n\t\t\tconst pathParts = path.split(\"/\").filter(ModelHelper.filterOutNavPropBinding);\n\t\t\tif (pathParts.length > 1) {\n\t\t\t\tconst initialPathObject = {\n\t\t\t\t\tgrowingPath: \"/\",\n\t\t\t\t\tpendingNavPropBinding: \"\"\n\t\t\t\t};\n\n\t\t\t\tconst pathObject = pathParts.reduce(\n\t\t\t\t\t(pathUnderConstruction: { growingPath: string; pendingNavPropBinding: string }, pathPart: string, idx: number) => {\n\t\t\t\t\t\tconst delimiter = (!!idx && \"/$NavigationPropertyBinding/\") || \"\";\n\t\t\t\t\t\tlet { growingPath, pendingNavPropBinding } = pathUnderConstruction;\n\t\t\t\t\t\tconst tempPath = growingPath + delimiter;\n\t\t\t\t\t\tconst navPropBindings = odataMetaModel.getObject(tempPath);\n\t\t\t\t\t\tconst navPropBindingToCheck = pendingNavPropBinding ? `${pendingNavPropBinding}/${pathPart}` : pathPart;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnavPropBindings &&\n\t\t\t\t\t\t\tObject.keys(navPropBindings).length > 0 &&\n\t\t\t\t\t\t\tnavPropBindings.hasOwnProperty(navPropBindingToCheck)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tgrowingPath = tempPath + navPropBindingToCheck.replace(\"/\", \"%2F\");\n\t\t\t\t\t\t\tpendingNavPropBinding = \"\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpendingNavPropBinding += pendingNavPropBinding ? `/${pathPart}` : pathPart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { growingPath, pendingNavPropBinding };\n\t\t\t\t\t},\n\t\t\t\t\tinitialPathObject\n\t\t\t\t);\n\n\t\t\t\tentitySetPath = pathObject.growingPath;\n\t\t\t} else {\n\t\t\t\tentitySetPath = `/${pathParts[0]}`;\n\t\t\t}\n\t\t}\n\n\t\treturn entitySetPath;\n\t},\n\n\t/**\n\t * Gets the path for the items property of MultiValueField parameters.\n\t * @param oParameter Action Parameter\n\t * @returns Returns the complete model path for the items property of MultiValueField parameters\n\t */\n\tgetActionParameterItemsModelPath: function (oParameter: MetaModelActionParameter): string | undefined {\n\t\treturn oParameter && oParameter.$Name ? `{path: 'mvfview>/${oParameter.$Name}'}` : undefined;\n\t},\n\n\tfilterOutNavPropBinding: function (sPathPart: string): boolean {\n\t\treturn sPathPart !== \"\" && sPathPart !== \"$NavigationPropertyBinding\";\n\t},\n\n\t/**\n\t * Adds a setProperty to the created binding contexts of the internal JSON model.\n\t * @param Internal JSON Model which is enhanced\n\t */\n\n\tenhanceInternalJSONModel: function (oInternalModel: JSONModel): void {\n\t\tconst fnBindContext = oInternalModel.bindContext;\n\t\toInternalModel.bindContext = function (\n\t\t\tsPath: string,\n\t\t\tcontext: BaseContext,\n\t\t\tmParameters: object | undefined,\n\t\t\toEvents: object | undefined\n\t\t): ContextBinding {\n\t\t\tconst contextBinding = fnBindContext.apply(this, [sPath, context, mParameters, oEvents]);\n\t\t\tconst fnGetBoundContext = contextBinding.getBoundContext;\n\n\t\t\tcontextBinding.getBoundContext = function (): BaseContext | null {\n\t\t\t\tconst oBoundContext = fnGetBoundContext.apply(this);\n\t\t\t\tif (oBoundContext) {\n\t\t\t\t\toBoundContext.setProperty = function (propertyPath: string, value: unknown): void {\n\t\t\t\t\t\tif (this.getObject() === undefined) {\n\t\t\t\t\t\t\t// initialize\n\t\t\t\t\t\t\tthis.getModel().setProperty(this.getPath(), {});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst propertyPathSplit = propertyPath.split(\"/\");\n\t\t\t\t\t\tlet path = this.getPath().replace(/\\/$/, \"\"); // Remove slash if it is at the end\n\t\t\t\t\t\t// let's ensure that sub objects are initialized\n\t\t\t\t\t\tfor (let i = 0; i < propertyPathSplit.length - 1; i++) {\n\t\t\t\t\t\t\tpath = `${path}/${propertyPathSplit[i]}`;\n\t\t\t\t\t\t\tif (this.getModel().getProperty(path) === undefined) {\n\t\t\t\t\t\t\t\t// initialize\n\t\t\t\t\t\t\t\tthis.getModel().setProperty(path, {});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.getModel().setProperty(propertyPath, value, this);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn oBoundContext;\n\t\t\t};\n\t\t\treturn contextBinding;\n\t\t};\n\t},\n\n\t/**\n\t * Adds an handler on propertyChange.\n\t * The property \"/editMode\" is changed according to property '/isEditable' when this last one is set\n\t * in order to be compliant with former versions where building blocks use the property \"/editMode\"\n\t * @param uiModel JSON Model which is enhanced\n\t * @param library Core library of SAP Fiori elements\n\t */\n\n\tenhanceUiJSONModel: function (uiModel: JSONModel, library: { EditMode: { Editable: string; Display: string } }): void {\n\t\tconst fnSetProperty = uiModel.setProperty;\n\t\tuiModel.setProperty = function (\n\t\t\tpath: string,\n\t\t\tvalue: unknown,\n\t\t\tcontext: BaseContext | undefined,\n\t\t\tasyncUpdate: boolean | undefined\n\t\t): boolean {\n\t\t\tif (path === \"/isEditable\") {\n\t\t\t\tuiModel.setProperty(\"/editMode\", value ? library.EditMode.Editable : library.EditMode.Display, context, asyncUpdate);\n\t\t\t}\n\t\t\treturn fnSetProperty.apply(this, [path, value, context, asyncUpdate]);\n\t\t};\n\t},\n\n\tenhanceViewJSONModel: function (viewModel: JSONModel & { _getObject: Function }): void {\n\t\tconst fnGetObject = viewModel._getObject;\n\t\tviewModel._getObject = function (sPath: string, oContext?: Context): unknown {\n\t\t\tif (sPath === undefined || sPath === \"\") {\n\t\t\t\tsPath = \"/\";\n\t\t\t}\n\t\t\treturn fnGetObject.apply(this, [sPath, oContext]);\n\t\t};\n\t},\n\t/**\n\t * Returns whether filtering on the table is case sensitive.\n\t * @param oMetaModel The instance of the meta model\n\t * @param filterFunctions Filter functions supported by the service\n\t * @returns Returns 'false' if the service supports 'tolower', else 'true'\n\t */\n\tisFilteringCaseSensitive: function (oMetaModel?: ODataMetaModel, filterFunctions?: FilterFunctions | string[]): boolean {\n\t\tconst _filterFunctions = filterFunctions ?? oMetaModel?.getObject(\"/@Org.OData.Capabilities.V1.FilterFunctions\");\n\n\t\tif (!_filterFunctions) {\n\t\t\t// if no filters function defined in service, we assume that the service is case sensitive\n\t\t\treturn true;\n\t\t}\n\n\t\treturn _filterFunctions.indexOf(\"tolower\") === -1;\n\t},\n\n\t/**\n\t * Get MetaPath for the context.\n\t * @param oContext Context to be used\n\t * @returns Returns the metapath for the context.\n\t */\n\tgetMetaPathForContext: function (oContext: Context): string {\n\t\tconst oModel = oContext.getModel(),\n\t\t\toMetaModel = oModel.getMetaModel(),\n\t\t\tsPath = oContext.getPath();\n\t\treturn oMetaModel && sPath && oMetaModel.getMetaPath(sPath);\n\t},\n\n\t/**\n\t * Get MetaPath for the context.\n\t * @param contextPath MetaPath to be used\n\t * @returns Returns the root entity set path.\n\t */\n\tgetRootEntitySetPath: function (contextPath: string): string {\n\t\tlet rootEntitySetPath = \"\";\n\t\tconst aPaths = contextPath ? contextPath.split(\"/\") : [];\n\t\tif (aPaths.length > 1) {\n\t\t\trootEntitySetPath = aPaths[1];\n\t\t}\n\t\treturn rootEntitySetPath;\n\t},\n\t/**\n\t * Get MetaPath for the listBinding.\n\t * @param oView View of the control using listBinding\n\t * @param vListBinding ODataListBinding object or the binding path for a temporary list binding\n\t * @returns Returns the metapath for the listbinding.\n\t */\n\tgetAbsoluteMetaPathForListBinding: function (oView: FEView, vListBinding: ODataListBinding | string): string {\n\t\tconst oMetaModel = oView.getModel().getMetaModel();\n\t\tlet sMetaPath;\n\n\t\tif (typeof vListBinding === \"string\") {\n\t\t\tif (vListBinding.startsWith(\"/\")) {\n\t\t\t\t// absolute path\n\t\t\t\tsMetaPath = oMetaModel.getMetaPath(vListBinding);\n\t\t\t} else {\n\t\t\t\t// relative path\n\t\t\t\tconst oBindingContext = oView.getBindingContext();\n\t\t\t\tconst sRootContextPath = oBindingContext.getPath();\n\t\t\t\tsMetaPath = oMetaModel.getMetaPath(`${sRootContextPath}/${vListBinding}`);\n\t\t\t}\n\t\t} else {\n\t\t\t// we already get a list binding use this one\n\t\t\tconst oBinding = vListBinding;\n\t\t\tconst oRootBinding = oBinding.getRootBinding();\n\t\t\tif (oBinding === oRootBinding) {\n\t\t\t\t// absolute path\n\t\t\t\tsMetaPath = oMetaModel.getMetaPath(oBinding.getPath());\n\t\t\t} else {\n\t\t\t\t// relative path\n\t\t\t\tconst sRootBindingPath = oRootBinding!.getPath();\n\t\t\t\tconst sRelativePath = oBinding.getPath();\n\t\t\t\tsMetaPath = oMetaModel.getMetaPath(`${sRootBindingPath}/${sRelativePath}`);\n\t\t\t}\n\t\t}\n\t\treturn sMetaPath;\n\t},\n\n\t/**\n\t * Method to determine whether the argument is a draft root.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @returns Whether the argument is a draft root\n\t */\n\tisDraftRoot: function (entitySet: EntitySet | Singleton | unknown | undefined): boolean {\n\t\treturn this.getDraftRoot(entitySet) !== undefined;\n\t},\n\n\t/**\n\t * Method to determine whether the argument is a draft node.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @returns Whether the argument is a draft node\n\t */\n\tisDraftNode: function (entitySet: EntitySet | Singleton | unknown | undefined): boolean {\n\t\treturn this.getDraftNode(entitySet) !== undefined;\n\t},\n\n\t/**\n\t * Method to determine whether the argument is a sticky session root.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @returns Whether the argument is a sticky session root\n\t */\n\tisSticky: function (entitySet: EntitySet | Singleton | undefined): boolean {\n\t\treturn this.getStickySession(entitySet) !== undefined;\n\t},\n\n\t/**\n\t * Method to determine if entity is updatable or not.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @param entityType EntityType\n\t * @returns True if updatable else false\n\t */\n\tisUpdateHidden: function (entitySet: EntitySet | Singleton | undefined, entityType: EntityType): UpdateHidden | undefined {\n\t\tif (isEntitySet(entitySet)) {\n\t\t\treturn entitySet.annotations.UI?.UpdateHidden ?? entityType?.annotations.UI?.UpdateHidden;\n\t\t}\n\t},\n\t/**\n\t * Gets the @Common.DraftRoot annotation if the argument is an EntitySet.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @returns DraftRoot\n\t */\n\tgetDraftRoot: function (entitySet: EntitySet | Singleton | unknown | undefined): DraftRoot | undefined {\n\t\treturn isEntitySet(entitySet) ? entitySet.annotations.Common?.DraftRoot : undefined;\n\t},\n\n\t/**\n\t * Gets the @Common.DraftNode annotation if the argument is an EntitySet.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @returns DraftRoot\n\t */\n\tgetDraftNode: function (entitySet: EntitySet | Singleton | unknown | undefined): DraftNode | undefined {\n\t\treturn isEntitySet(entitySet) ? entitySet.annotations.Common?.DraftNode : undefined;\n\t},\n\n\t/**\n\t * Helper method to get sticky session.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @returns Session StickySessionSupported\n\t */\n\tgetStickySession: function (entitySet: EntitySet | Singleton | unknown | undefined): StickySessionSupported | undefined {\n\t\treturn isEntitySet(entitySet) ? entitySet.annotations.Session?.StickySessionSupported : undefined;\n\t},\n\n\t/**\n\t * Method to get the visibility state of delete button.\n\t * @param entitySet EntitySet | Singleton | undefined\n\t * @param entityType EntityType\n\t * @returns True if delete button is hidden\n\t */\n\tgetDeleteHidden: function (entitySet: EntitySet | Singleton | undefined, entityType: EntityType): DeleteHidden | undefined {\n\t\tif (isEntitySet(entitySet)) {\n\t\t\treturn entitySet.annotations.UI?.DeleteHidden ?? entityType.annotations.UI?.DeleteHidden;\n\t\t}\n\t},\n\t/**\n\t * This function will return metapath for the given list binding.\n\t * @param listBinding ListBinding.\n\t * @returns MetaPath\n\t */\n\tgetAbsolutePathFromListBinding(listBinding: ODataListBinding): string {\n\t\tconst metamodel = listBinding.getModel().getMetaModel();\n\t\tlet metaPath;\n\t\tconst rootBinding = listBinding.getRootBinding();\n\t\tif (listBinding === rootBinding) {\n\t\t\tmetaPath = metamodel.getMetaPath(listBinding.getPath());\n\t\t} else {\n\t\t\tconst rootBindingPath = rootBinding?.getPath();\n\t\t\tconst relativePath = listBinding.getPath();\n\t\t\tmetaPath = metamodel.getMetaPath(`${rootBindingPath}/${relativePath}`);\n\t\t}\n\t\treturn metaPath;\n\t},\n\n\tenhanceODataModel(odataModel: ODataModel, appComponent: AppComponent): void {\n\t\todataModel.virtualPropertyBindingRegistry = new Array<ODataPropertyBinding>();\n\t\tconst fnMessage = odataModel.setMessages;\n\t\tconst localAnnotationModel = new JSONModel({});\n\t\tlocalAnnotationModel.setDefaultBindingMode(BindingMode.OneWay);\n\t\tconst baseSetProperty = localAnnotationModel.setProperty;\n\t\tconst baseGetProperty = localAnnotationModel.getProperty;\n\t\tlocalAnnotationModel.getProperty = function (path, context: ODataV4Context): unknown {\n\t\t\tconst [propertyName, annotationType] = path.split(\"@$ui5.fe.\");\n\n\t\t\tif (context && context.isTransient() !== true && annotationType === \"@Common/ExternalID\") {\n\t\t\t\tconst contextObject = context.getObject();\n\t\t\t\tif (contextObject) {\n\t\t\t\t\tconst metaPath = new MetaPath<EntitySet>(\n\t\t\t\t\t\tconvertTypes(odataModel.getMetaModel()),\n\t\t\t\t\t\todataModel.getMetaModel().getMetaPath(context.getPath()),\n\t\t\t\t\t\todataModel.getMetaModel().getMetaPath(context.getPath())\n\t\t\t\t\t);\n\t\t\t\t\tconst externalIdProperty = metaPath.getMetaPathForPath<Property>(propertyName)?.getTarget().annotations.Common\n\t\t\t\t\t\t?.ExternalID;\n\t\t\t\t\tif (isPathAnnotationExpression(externalIdProperty)) {\n\t\t\t\t\t\treturn context.getObject(externalIdProperty.path);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn context.getObject(propertyName);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t} else if (context && annotationType === \"contextPath\") {\n\t\t\t\treturn context.getPath();\n\t\t\t}\n\n\t\t\treturn baseGetProperty.apply(this, [path, context]);\n\t\t};\n\n\t\tlocalAnnotationModel.setProperty = function (path, value, context, asyncUpdate): boolean {\n\t\t\tlet fullPath = path;\n\t\t\tif (context) {\n\t\t\t\tfullPath = context.getPath(path);\n\t\t\t}\n\t\t\tconst _refreshLocalModel = (): void => {\n\t\t\t\tthis.refresh();\n\t\t\t};\n\t\t\tconst [propertyName, annotationType] = path.split(\"@$ui5.fe.\");\n\t\t\tif (context && annotationType === \"@Common/ExternalID\") {\n\t\t\t\tcontext.setProperty(propertyName, value);\n\t\t\t\t// refreshing ExternalID and text properties (paths need to be determined generically)\n\t\t\t\tconst metaPath = new MetaPath<EntitySet>(\n\t\t\t\t\tconvertTypes(odataModel.getMetaModel()),\n\t\t\t\t\todataModel.getMetaModel().getMetaPath(context.getPath()),\n\t\t\t\t\todataModel.getMetaModel().getMetaPath(context.getPath())\n\t\t\t\t);\n\t\t\t\tconst externalIdProperty = metaPath.getMetaPathForPath<Property>(propertyName)?.getTarget().annotations.Common?.ExternalID;\n\t\t\t\tif (isPathAnnotationExpression(externalIdProperty)) {\n\t\t\t\t\tconst externalIdPropPath = externalIdProperty.path;\n\t\t\t\t\tconst propertiesToRequest = [externalIdPropPath.substring(0, externalIdPropPath.lastIndexOf(\"/\"))];\n\t\t\t\t\tconst textProperty = metaPath.getMetaPathForPath<Property>(externalIdPropPath)?.getTarget().annotations.Common?.Text;\n\t\t\t\t\tif (isPathAnnotationExpression(textProperty)) {\n\t\t\t\t\t\tconst textPropPath = textProperty.path;\n\t\t\t\t\t\tif (textPropPath.includes(\"/\")) {\n\t\t\t\t\t\t\tpropertiesToRequest.push(textPropPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(context as ODataV4Context)\n\t\t\t\t\t\t.requestSideEffects(propertiesToRequest)\n\t\t\t\t\t\t.then(_refreshLocalModel)\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tLog.error(err as string);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst propertyPathSplit = fullPath.split(\"/\");\n\t\t\t// let's ensure that sub objects are initialized\n\t\t\tlet pathFromRoot = \"\";\n\t\t\tfor (let i = 0; i < propertyPathSplit.length - 1; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpathFromRoot += \"/\";\n\t\t\t\t}\n\t\t\t\tpathFromRoot += propertyPathSplit[i];\n\t\t\t\tif (this.getObject(pathFromRoot) === undefined) {\n\t\t\t\t\t// initialize\n\t\t\t\t\tthis.setProperty(pathFromRoot, {});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn baseSetProperty.apply(this, [path, value, context, asyncUpdate]);\n\t\t};\n\t\tfunction clearAnnotationType(annotationTypes: string[], dataSet: Record<string, unknown>): object {\n\t\t\tfor (const contextPath in dataSet) {\n\t\t\t\t// we added a context for accepting recommendations eventually.\n\t\t\t\t// the context is a deeply nested object iterating over it cause the code the break\n\t\t\t\t// hence we are skipping it here.\n\t\t\t\tconst context = dataSet?.[contextPath] as ODataV4Context;\n\t\t\t\tconst isContext = context?.isA?.(\"sap.ui.model.odata.v4.Context\");\n\t\t\t\tif (typeof context === \"object\" && !isContext) {\n\t\t\t\t\tdataSet[contextPath] = clearAnnotationType(annotationTypes, dataSet[contextPath] as Record<string, unknown>);\n\t\t\t\t\tif (dataSet[contextPath] && Object.keys(dataSet[contextPath] as object).length === 0) {\n\t\t\t\t\t\tdelete dataSet[contextPath];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const annotationType of annotationTypes) {\n\t\t\t\t\tif (contextPath.endsWith(annotationType)) {\n\t\t\t\t\t\tdelete dataSet[contextPath];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dataSet;\n\t\t}\n\t\todataModel._localAnnotationModel = localAnnotationModel;\n\t\todataModel.getLocalAnnotationModel = function (): JSONModel {\n\t\t\treturn this._localAnnotationModel;\n\t\t};\n\t\todataModel.setMessages = function (messages: Record<string, Message[]>): void {\n\t\t\tconst cleanedData = clearAnnotationType([\"@$ui5.fe.messageType\", \"@$ui5.fe.messageText\"], this._localAnnotationModel.getData());\n\t\t\tthis._localAnnotationModel.setData(cleanedData);\n\t\t\tfor (const messageTarget in messages) {\n\t\t\t\tthis._localAnnotationModel.setProperty(`${messageTarget}@$ui5.fe.messageType`, messages[messageTarget][0].getType());\n\t\t\t\tthis._localAnnotationModel.setProperty(`${messageTarget}@$ui5.fe.messageText`, messages[messageTarget][0].getMessage());\n\t\t\t}\n\t\t\tfnMessage.apply(this, [messages]);\n\t\t};\n\t\tconst fnBindProperty = odataModel.bindProperty.bind(odataModel);\n\t\todataModel.bindProperty = function (path: string, context: ODataV4Context, parameters): ODataPropertyBinding {\n\t\t\tconst recommendationFeatureDisabled = appComponent.getEnvironmentCapabilities()?.getCapabilities().DisableInputAssistance;\n\t\t\tconst recommendationPropertyBinding = ModelHelper.setUpRecommendationLocalModelBinding(\n\t\t\t\tthis,\n\t\t\t\tfnBindProperty,\n\t\t\t\tpath,\n\t\t\t\tcontext,\n\t\t\t\trecommendationFeatureDisabled\n\t\t\t);\n\t\t\tif (recommendationPropertyBinding) {\n\t\t\t\treturn recommendationPropertyBinding as ODataPropertyBinding;\n\t\t\t}\n\t\t\tif (path.endsWith(\"@$ui5.fe.@Common/ExternalID\") && context) {\n\t\t\t\tconst internalIdBinding = fnBindProperty(path, context);\n\t\t\t\todataModel.virtualPropertyBindingRegistry.push(internalIdBinding);\n\t\t\t\tconst externalIdBinding = this._localAnnotationModel.bindProperty(path, context) as unknown as ODataPropertyBinding;\n\n\t\t\t\tinternalIdBinding.attachChange(() => {\n\t\t\t\t\texternalIdBinding.refresh();\n\t\t\t\t});\n\t\t\t\tinternalIdBinding\n\t\t\t\t\t.requestValue()\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\texternalIdBinding.refresh();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tLog.error(err as string);\n\t\t\t\t\t});\n\t\t\t\treturn externalIdBinding;\n\t\t\t}\n\t\t\tif (path.includes(\"@$ui5.fe.\")) {\n\t\t\t\tconst propBinding = this._localAnnotationModel.bindProperty(path, context) as ODataPropertyBinding & {\n\t\t\t\t\tsetContext?: Function;\n\t\t\t\t};\n\t\t\t\tif (path.endsWith(\"@$ui5.fe.@Common/ExternalID\")) {\n\t\t\t\t\treturn propBinding;\n\t\t\t\t}\n\t\t\t\tpropBinding.updateRequired = function (model: object): boolean {\n\t\t\t\t\treturn model && model === odataModel;\n\t\t\t\t};\n\t\t\t\tif (path.includes(\"@$ui5.fe.virtual.\")) {\n\t\t\t\t\tconst expression = MetaModelConverter.getVirtualBindingExpression(\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tMetaModelConverter.convertTypes(this.getMetaModel())\n\t\t\t\t\t);\n\t\t\t\t\tconst ghostControl = new Any({ any: compileExpression(expression), bindBackProperty: path });\n\t\t\t\t\tconst fnDestroyPropertyBinding = propBinding.destroy.bind(propBinding);\n\t\t\t\t\tpropBinding.destroy = (): void => {\n\t\t\t\t\t\tghostControl?.destroy();\n\t\t\t\t\t\treturn fnDestroyPropertyBinding();\n\t\t\t\t\t};\n\t\t\t\t\tconst fnSetContext = propBinding.setContext;\n\t\t\t\t\tif (fnSetContext) {\n\t\t\t\t\t\tpropBinding.setContext = (newContext: Context): void => {\n\t\t\t\t\t\t\tghostControl?.setBindingContext(newContext);\n\t\t\t\t\t\t\treturn fnSetContext.bind(propBinding)(newContext);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tghostControl.setModel(this);\n\t\t\t\t\tconst ghostBinding = ghostControl.getBindingInfo(\"any\")?.binding;\n\t\t\t\t\tconst fnCheckUpdate = ghostBinding?.checkUpdate;\n\t\t\t\t\tif (fnCheckUpdate) {\n\t\t\t\t\t\tghostControl.getBindingInfo(\"any\").binding.checkUpdate = (): void => {\n\t\t\t\t\t\t\treturn fnCheckUpdate.bind(ghostBinding)(true);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tghostControl.setBindingContext(context);\n\t\t\t\t}\n\t\t\t\treturn propBinding;\n\t\t\t}\n\t\t\treturn fnBindProperty(path, context, parameters);\n\t\t};\n\t\tconst fnDestroy = odataModel.destroy.bind(odataModel);\n\t\todataModel.destroy = function (): void {\n\t\t\tfor (const vpBinding of odataModel.virtualPropertyBindingRegistry) {\n\t\t\t\tvpBinding.destroy();\n\t\t\t}\n\t\t\tthis._localAnnotationModel.destroy();\n\t\t\treturn fnDestroy.apply(this);\n\t\t};\n\t},\n\t/**\n\t * Resolves a metadata binding to its text, either using the converterContext or the metaModel directly.\n\t * @param path\n\t * @param converterContext\n\t * @param metaModel\n\t * @returns The resolved text if possible, else the input value or an empty string if the path was undefined\n\t */\n\tfetchTextFromMetaModel(path: string | undefined, converterContext?: ConverterContext<unknown>, metaModel?: MetaModel): string {\n\t\tlet text = path !== undefined ? path : \"\";\n\t\tif (path?.startsWith(\"{metaModel>\")) {\n\t\t\tconst metaModelPath = path.substring(11, path.length - 1);\n\t\t\ttry {\n\t\t\t\tif (converterContext) {\n\t\t\t\t\ttext = converterContext.getEntityTypeAnnotation(metaModelPath).annotation?.toString() ?? \"\";\n\t\t\t\t} else {\n\t\t\t\t\ttext = metaModel?.getObject(metaModelPath);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tLog.info(`Unable to retrieve text from meta model using path ${metaModelPath}`);\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t},\n\n\t/**\n\t * Method to retrieve the property path corresponding to state messages.\n\t * @param metaModel The metamodel\n\t * @param contextPath Path for the context on which we what to retreive the message path\n\t * @returns Returns the property path, or undefined if no Messages annotation is defined\n\t */\n\tgetMessagesPath: function (metaModel: ODataMetaModel, contextPath: string): string | undefined {\n\t\tconst metaContext = metaModel.getMetaContext(contextPath);\n\t\tconst objectPath = getInvolvedDataModelObjects(metaContext);\n\t\tconst messages = objectPath.targetEntityType.annotations.Common?.Messages;\n\t\treturn isPathAnnotationExpression(messages) ? messages.path : undefined;\n\t},\n\t/**\n\t * Setup recommendation local binding to make recommendations accessible via client side instance annotations.\n\t *\n\t * Recommendations is a complex property.\n\t * Model does not provide an easy way to bind to complex properties. It has 2 major limitations.\n\t *\n\t * It only supports one time binding to complex properties. This is needed to show updated recommendations on the UI.\n\t * It does not support bindings to properties inside a complex property which is needed for recommendations.\n\t *\n\t * This function provides a workaround to overcome the above two short comings and\n\t * to support client side instance annotations for recommendations.\n\t * @param odataModel The odata model instance.\n\t * @param fnBindProperty Original bind property of the oDataModel\n\t * @param path Binding path for which recommendation is being requested\n\t * @param context Context where recommendation is being requested\n\t * @param recommendationFeatureDisabled Flag which toggles the recommendation feature\n\t * @returns Recommendation property path for the entity related to the context and whether the bindingPath is relevant or not based on metadata.\n\t */\n\tsetUpRecommendationLocalModelBinding: function (\n\t\todataModel: ODataModel,\n\t\tfnBindProperty: Function,\n\t\tpath: string,\n\t\tcontext: ODataV4Context,\n\t\trecommendationFeatureDisabled: boolean\n\t): PropertyBinding | undefined {\n\t\tif (path.includes(\"ui5.fe.recommendations\")) {\n\t\t\tconst recommendationbinding = odataModel.getLocalAnnotationModel().bindProperty(path, context) as ODataPropertyBinding & {\n\t\t\t\tsetContext: Function;\n\t\t\t};\n\t\t\tconst setContextOnRecommendationBinding = (odataPropertyBinding: ODataPropertyBinding & { setContext: Function }): void => {\n\t\t\t\t//we make sure the parent context is set to the propertybinding\n\t\t\t\tconst fnSetContext = recommendationbinding.setContext;\n\t\t\t\tif (fnSetContext) {\n\t\t\t\t\trecommendationbinding.setContext = (newContext: Context): void => {\n\t\t\t\t\t\todataPropertyBinding?.setContext(newContext);\n\t\t\t\t\t\treturn fnSetContext.bind(odataPropertyBinding)(newContext);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (context) {\n\t\t\t\tconst { recommendationComplexProperty, isRecommendedProperty } = ModelHelper.validateRecommendationBindingPath(\n\t\t\t\t\tcontext,\n\t\t\t\t\tpath\n\t\t\t\t);\n\t\t\t\tif (recommendationComplexProperty && isRecommendedProperty && !recommendationFeatureDisabled) {\n\t\t\t\t\tconst alreadyBound = odataModel.virtualPropertyBindingRegistry.some((existingBinding) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t// binding exists but the context can be destroyed sometimes because of discard and delete.\n\t\t\t\t\t\t\t// hence we need to check if context exists or not before deciding if we already have a binding or not.\n\t\t\t\t\t\t\t// TODO: We might want to clear the property binding when the contex is destroyed.\n\t\t\t\t\t\t\tcontext.getPath() === existingBinding.getContext()?.getPath() &&\n\t\t\t\t\t\t\trecommendationComplexProperty === existingBinding.getPath()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tif (!alreadyBound) {\n\t\t\t\t\t\tconst odataPropertyBinding = fnBindProperty(recommendationComplexProperty, context) as ODataPropertyBinding & {\n\t\t\t\t\t\t\tsetContext: Function;\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Becuase recommendations is a complex property and not a primitive type hence use a raw type.\n\t\t\t\t\t\todataPropertyBinding.setType(new Raw(), \"any\");\n\t\t\t\t\t\todataPropertyBinding.setBindingMode(BindingMode.OneWay);\n\t\t\t\t\t\todataModel.virtualPropertyBindingRegistry.push(odataPropertyBinding);\n\t\t\t\t\t\todataPropertyBinding.attachChange((event: ODataPropertyBinding$ChangeEvent) => {\n\t\t\t\t\t\t\t// refresh the local annotation binding once recommendation binding is updated.\n\t\t\t\t\t\t\tconst propertyBinding = event.getSource();\n\t\t\t\t\t\t\tconst currentContext = event.getSource().getContext() as ODataV4Context;\n\t\t\t\t\t\t\tif (currentContext) {\n\t\t\t\t\t\t\t\tconst contextRecommendations = propertyBinding.getValue();\n\t\t\t\t\t\t\t\tModelHelper.setRecommendationsOnLocalAnnotationModel(contextRecommendations, currentContext);\n\t\t\t\t\t\t\t\trecommendationbinding.refresh();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// reuestValue will add the recommendation property to the $select\n\t\t\t\t\t\t// hence we do not need to add it to the $select when constructing the binding at various places (forms, table etc.)\n\t\t\t\t\t\todataPropertyBinding.requestValue().catch((error) => {\n\t\t\t\t\t\t\tLog.error(\"Recommendations could not be resolved\", error);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetContextOnRecommendationBinding(odataPropertyBinding);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// We need to ensure that the binding becomes invalid and a new binding is created so the recommendation property binding can be created.\n\t\t\t//\n\t\t\t// For this we need to override updateRequired so that the binding is updated until it has not received a context\n\t\t\t// post that we do not need the binding to be updated.\n\t\t\t// If we remove the updateRequired override then recommendations work fine by during save of a newly created document\n\t\t\t// we get binding related issues.\n\t\t\t//\n\t\t\t// Updating the binding to recommendations will be done by setProperty on the localAnnotationModel\n\t\t\t// when the recommendation property is actually updated.\n\t\t\trecommendationbinding.updateRequired = function (model: object): boolean {\n\t\t\t\treturn this.getContext() ? model && model === odataModel : model && this.getModel() === model;\n\t\t\t};\n\t\t\treturn recommendationbinding;\n\t\t}\n\t},\n\t/**\n\t * Validates based on metadata whether a given binding should deal with recommendations or not.\n\t * @param context Context where recommendation is being requested.\n\t * @param bindingPath Binding path for which recommendation is being requested.\n\t * @returns Recommendation property path for the entity related to the context and whether the bindingPath is relevant or not based on metadata.\n\t */\n\tvalidateRecommendationBindingPath: function (\n\t\tcontext: ODataV4Context,\n\t\tbindingPath: string\n\t): { recommendationComplexProperty: string | undefined; isRecommendedProperty: boolean } {\n\t\tconst metaModel = context.getModel().getMetaModel();\n\t\tconst contextMetaPath = metaModel.getMetaPath(context.getPath());\n\t\tconst metaContext = metaModel.getMetaContext(contextMetaPath);\n\t\tconst targetEntityType = getInvolvedDataModelObjects(metaContext).targetEntityType;\n\t\tconst recommendationComplexProperty = (targetEntityType?.annotations?.UI as EntityTypeAnnotations_UI_With_Recommendations)\n\t\t\t?.Recommendations?.path;\n\t\t// sample binding - ShippingCondition@$ui5.fe.recommendations.placeholderValue\n\t\tconst propertyPath = bindingPath.split(\"@$ui5.fe.recommendations\")[0];\n\t\tconst isRecommendedProperty = targetEntityType.entityProperties.some((entityProperty) => {\n\t\t\tif (entityProperty.name === recommendationComplexProperty) {\n\t\t\t\treturn (entityProperty?.targetType as ComplexType)?.properties.some((property) => {\n\t\t\t\t\treturn propertyPath === property.name;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\trecommendationComplexProperty,\n\t\t\tisRecommendedProperty\n\t\t};\n\t},\n\t/**\n\t * Update recommendation client side instance annotations.\n\t * @param contextRecommendations Updated recommendations.\n\t * @param currentContext Context where recommendation was updated.\n\t */\n\tsetRecommendationsOnLocalAnnotationModel: function (contextRecommendations: Recommendations, currentContext: ODataV4Context): void {\n\t\tif (contextRecommendations) {\n\t\t\tfor (const recommendedProperty in contextRecommendations) {\n\t\t\t\tconst propertyRecommendations = contextRecommendations[recommendedProperty];\n\t\t\t\tconst localModelPath = recommendedProperty;\n\t\t\t\tconst localAnnotationModel = currentContext.getModel().getLocalAnnotationModel();\n\t\t\t\tconst typeAheadValues = [];\n\t\t\t\tfor (const propertyRecommendation of propertyRecommendations) {\n\t\t\t\t\tif (propertyRecommendation.RecommendedFieldIsSuggestion) {\n\t\t\t\t\t\tconst placeholderValueAnnotationPath = currentContext.getPath(\n\t\t\t\t\t\t\tlocalModelPath + \"@$ui5.fe.recommendations.placeholderValue\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst placeholderDescriptionAnnotationPath = currentContext.getPath(\n\t\t\t\t\t\t\tlocalModelPath + \"@$ui5.fe.recommendations.placeholderDescription\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlocalAnnotationModel.setProperty(\n\t\t\t\t\t\t\tplaceholderValueAnnotationPath,\n\t\t\t\t\t\t\tpropertyRecommendation.RecommendedFieldValue,\n\t\t\t\t\t\t\tcurrentContext,\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlocalAnnotationModel.setProperty(\n\t\t\t\t\t\t\tplaceholderDescriptionAnnotationPath,\n\t\t\t\t\t\t\tpropertyRecommendation.RecommendedFieldDescription,\n\t\t\t\t\t\t\tcurrentContext,\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// set placeholder description and values\n\t\t\t\t\t}\n\t\t\t\t\t//localAnnotationModel.\n\t\t\t\t\t// push top 3 recommendation values\n\t\t\t\t\tif (propertyRecommendation.RecommendedFieldValue) {\n\t\t\t\t\t\ttypeAheadValues.push(propertyRecommendation.RecommendedFieldValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!propertyRecommendations || !propertyRecommendations.length) {\n\t\t\t\t\tconst placeholderValueAnnotationPath = currentContext.getPath(\n\t\t\t\t\t\tlocalModelPath + \"@$ui5.fe.recommendations.placeholderValue\"\n\t\t\t\t\t);\n\t\t\t\t\tconst placeholderDescriptionAnnotationPath = currentContext.getPath(\n\t\t\t\t\t\tlocalModelPath + \"@$ui5.fe.recommendations.placeholderDescription\"\n\t\t\t\t\t);\n\t\t\t\t\tlocalAnnotationModel.setProperty(placeholderValueAnnotationPath, null, currentContext, false);\n\t\t\t\t\tlocalAnnotationModel.setProperty(placeholderDescriptionAnnotationPath, \"\", currentContext, false);\n\t\t\t\t}\n\t\t\t\tlocalAnnotationModel.setProperty(\n\t\t\t\t\tcurrentContext.getPath(localModelPath + \"@$ui5.fe.recommendations.typeAheadValues\"),\n\t\t\t\t\ttypeAheadValues,\n\t\t\t\t\tcurrentContext,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\tlocalAnnotationModel.setProperty(currentContext.getPath(\"recommendationContext\"), currentContext);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Fetches the SecondaryKeys from entitytype.\n\t * @param entityType Datamodel object of entityType\n\t * @param entitySet Datamodel object of entitySet\n\t * @returns An array of alternate keys\n\t */\n\tgetAlternateAndSecondaryKeys: (entityType: EntityType, entitySet: EntitySet): string[] => {\n\t\tconst alternateKeys: string[] = [];\n\t\tconst _fetchAlternateKeys = (entityTypeOrSet: EntitySet | EntityType): void => {\n\t\t\tentityTypeOrSet?.annotations?.Core?.AlternateKeys?.forEach((alternateKey: AlternateKey) => {\n\t\t\t\talternateKey.Key.forEach((key: PropertyRef) => {\n\t\t\t\t\talternateKeys.push(key.Name.value);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tconst _fetchSecondaryKeys = (eT: EntityType): void => {\n\t\t\teT?.annotations?.Common?.SecondaryKey?.forEach((secondaryKey: PropertyPath) => {\n\t\t\t\tif (!alternateKeys.includes(secondaryKey.value)) {\n\t\t\t\t\talternateKeys.push(secondaryKey.value);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\t_fetchAlternateKeys(entitySet);\n\t\tif (!alternateKeys.length) {\n\t\t\t_fetchAlternateKeys(entityType);\n\t\t}\n\t\t_fetchSecondaryKeys(entityType);\n\t\treturn alternateKeys;\n\t}\n};\n\ntype Recommendations = Record<string, RecommendationDetails[]>;\ntype RecommendationDetails = {\n\tRecommendedFieldValue: string;\n\tRecommendedFieldIsSuggestion: boolean;\n\tRecommendedFieldDescription: string;\n};\n\nexport type InternalModelContext = { getModel(): JSONModel } & BaseContext & {\n\t\tsetProperty(sPath: string, vValue: unknown): void;\n\t};\n\nexport default ModelHelper;\n"],"mappings":"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","ignoreList":[]}