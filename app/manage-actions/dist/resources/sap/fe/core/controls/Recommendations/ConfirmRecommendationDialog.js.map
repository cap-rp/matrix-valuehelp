{"version":3,"file":"ConfirmRecommendationDialog.js","names":["RecommendationDialogDecision","_exports","ConfirmRecommendationDialog","_dec","defineUI5Class","_dec2","defineReference","_class","_class2","_ManagedObject","props","_this","call","this","_initializerDefineProperty","_descriptor","view","confirmRecommendationDialogResourceModel","getResourceModel","_inheritsLoose","_proto","prototype","getOpenRecommendations","visibleContextPaths","getVisiblePageContextPaths","openRecommendations","getOpenRecommendationsForVisibleContextPaths","recommendations","length","forEach","recommendation","context","getBindingContext","propertyPath","getProperty","undefined","push","visiblePageContextPaths","getPath","controller","getController","fclController","getAppComponent","getRootViewController","isFclEnabled","_isFclEnabled","isFullScreen","getHelper","getCurrentUIState","rightMostContext","getRightmostContext","contextPaths","localAnnotationModel","getModel","getLocalAnnotationModel","contextPath","localAnnotationObject","getObject","annotationObject","fetchLocalAnnotationObject","recommendationObject","currentKey","currentValue","includes","keys","MetaModelConverter","getInvolvedDataModelObjectEntityKeys","contextIdentifier","getOpenRecommendationsForContext","contextData","recommendationContext","contextKey","arguments","currentValueIsContext","isA","split","openRecommendation","value","contextIdentifierText","description","text","Array","isArray","open","async","isSave","standardRecommendationHelper","addContextIdentifierText","recommendationData","acceptAllParams","legacyRecommendationsExist","checkIfRecommendationsExist","fetchAcceptAllParams","acceptModel","getAcceptAllModel","setModel","getData","items","Skipped","dialog","getContent","setEscapeHandler","onContinueEditing","bind","addDependent","Promise","resolve","reject","promiseResolve","promiseReject","close","confirmRecommendationDialog","current","destroy","onAcceptAndSave","isAccepted","acceptRecommendations","Accept","Log","error","onIgnoreAndSave","ignoreRecommendationForContexts","Ignore","Continue","getFieldName","targetPath","involvedDataModelObject","getInvolvedDataModelObjectsForTargetPath","getMetaModel","targetObject","annotations","Common","Label","toString","getText","displayMode","valueFormatters","formatWithBrackets","getButton","type","pressHandler","_jsx","Button","width","press","children","layoutData","_Fragment","FlexItemData","minWidth","getFooter","Toolbar","content","_jsxs","ToolbarSpacer","_getDialogButtonText","save","recommendationDialogDecision","isAcceptButton","HasActiveEntity","JSONModel","entityNameLabel","getEntityName","identifierTexts","getDisplayModeForTargetPath","listData","fieldName","valueOf","fieldValue","setData","getGroup","getMessage","acceptAllData","messageText","Text","getDialogContent","List","model","path","sorter","Sorter","CustomListItem","HBox","class","Dialog","title","state","ValueState","Information","ref","resizable","contentWidth","footer","ManagedObject","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./ConfirmRecommendationDialog.tsx"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineReference, defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport HBox from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type { default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { EventHandler } from \"types/extension_types\";\nimport type BaseController from \"../../BaseController\";\nimport type PageController from \"../../PageController\";\nimport type ResourceModel from \"../../ResourceModel\";\nimport type { AcceptAllParams, RecommendationData } from \"../../controllerextensions/Recommendations\";\nimport valueFormatters from \"../../formatters/ValueFormatter\";\nimport type { RecommendationContextsInfo } from \"../../helpers/StandardRecommendationHelper\";\nimport { standardRecommendationHelper, type StandardRecommendationDataType } from \"../../helpers/StandardRecommendationHelper\";\nimport type FclController from \"../../rootView/Fcl.controller\";\n\nexport enum RecommendationDialogDecision {\n\tAccept = \"Accept_Recommendations\",\n\tIgnore = \"Ignore_Recommendations\",\n\tContinue = \"Continue_Editing\",\n\tSkipped = \"Skipped\"\n}\n\n@defineUI5Class(\"sap.fe.core.controls.Recommendations.ConfirmRecommendationDialog\")\nexport class ConfirmRecommendationDialog extends ManagedObject {\n\tconstructor(props: PropertiesOf<ConfirmRecommendationDialog>) {\n\t\tsuper(props);\n\t\tthis.view = props.view as View;\n\t\tthis.confirmRecommendationDialogResourceModel = getResourceModel(this.view);\n\t}\n\n\t@defineReference()\n\tconfirmRecommendationDialog!: Ref<Dialog>;\n\n\tpublic view!: View;\n\n\tprivate confirmRecommendationDialogResourceModel!: ResourceModel;\n\n\tprotected key!: string;\n\n\tprivate isSave!: boolean;\n\n\tprivate acceptAllParams!: AcceptAllParams;\n\n\t/**\n\t * Resolves the promise with the selected dialog list option\n\t */\n\tprivate promiseResolve!: Function;\n\n\t/**\n\t * Rejects the promise of open dialog\n\t */\n\tpublic promiseReject!: Function;\n\n\t/**\n\t *\n\t * @returns Recommendation Data\n\t */\n\n\tpublic getOpenRecommendations(): RecommendationData[] {\n\t\tconst visibleContextPaths = this.getVisiblePageContextPaths();\n\t\tconst openRecommendations = this.getOpenRecommendationsForVisibleContextPaths(visibleContextPaths);\n\t\tconst recommendations: RecommendationData[] = [];\n\t\tif (openRecommendations.length > 0) {\n\t\t\topenRecommendations.forEach((recommendation) => {\n\t\t\t\tconst context = this.view.getBindingContext();\n\t\t\t\tconst propertyPath: string = recommendation.propertyPath ? recommendation.propertyPath : \"\";\n\t\t\t\tif (\n\t\t\t\t\tcontext?.getProperty(propertyPath) === null ||\n\t\t\t\t\tcontext?.getProperty(propertyPath) === undefined ||\n\t\t\t\t\tcontext?.getProperty(propertyPath) == \"\"\n\t\t\t\t) {\n\t\t\t\t\trecommendations.push(recommendation);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn recommendations;\n\t\t// check if we have recommendations from the current page in the localAnnotationModel\n\t\t// return open recommendations.\n\t}\n\n\t/**\n\t *\n\t * @returns Collection of context paths\n\t */\n\n\tpublic getVisiblePageContextPaths(): (string | undefined)[] {\n\t\tconst visiblePageContextPaths = [this.view.getBindingContext()?.getPath()];\n\t\tconst controller = this.view.getController() as BaseController;\n\t\tconst fclController = controller.getAppComponent().getRootViewController() as FclController;\n\t\tconst isFclEnabled = controller.getAppComponent()._isFclEnabled();\n\t\tconst isFullScreen = isFclEnabled ? fclController.getHelper().getCurrentUIState().isFullScreen : true;\n\t\tif (isFclEnabled && !isFullScreen) {\n\t\t\tconst rightMostContext = fclController.getRightmostContext();\n\t\t\tvisiblePageContextPaths.push(rightMostContext?.getPath());\n\t\t}\n\t\treturn visiblePageContextPaths;\n\t}\n\n\t/**\n\t *\n\t * @param contextPaths Paths of the contexts\n\t * @returns RecommendationData for visible contexts\n\t */\n\tpublic getOpenRecommendationsForVisibleContextPaths(contextPaths: (string | undefined)[]): RecommendationData[] {\n\t\tconst openRecommendations: RecommendationData[] = [];\n\t\tif (contextPaths.length > 0) {\n\t\t\tconst localAnnotationModel = (this.view.getModel() as ODataModel).getLocalAnnotationModel();\n\t\t\t// check context paths in local annotation models which match to\n\t\t\t// 1. current page and\n\t\t\t// 2. immediate children of the current page\n\t\t\t// Need to consider also immediate children\n\t\t\t// iterate over all keys\n\t\t\tcontextPaths.forEach((contextPath) => {\n\t\t\t\tif (contextPath !== undefined) {\n\t\t\t\t\tconst localAnnotationObject = localAnnotationModel.getObject(contextPath);\n\t\t\t\t\tif (localAnnotationObject) {\n\t\t\t\t\t\tconst annotationObject = localAnnotationObject;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The local annotation object will be of the following structure :\n\t\t\t\t\t\t * {\n\t\t\t\t\t\t * \"PropertyName@$ui5.fe.recommendations.placeholderDescription\": Value\n\t\t\t\t\t\t * \"PropertyName@$ui5.fe.recommendations.placeholderValue\": Value\n\t\t\t\t\t\t * \"PropertyName@$ui5.fe.recommendations.typeAheadValues\": Value\n\t\t\t\t\t\t * PropertyName: {\n\t\t\t\t\t\t * \t\t\"PropertyName@$ui5.fe.recommendations.placeholderDescription\": Value\n\t\t\t\t\t\t * \t\t\"PropertyName@$ui5.fe.recommendations.placeholderValue\": Value\n\t\t\t\t\t\t * \t\t\"PropertyName@$ui5.fe.recommendations.typeAheadValues\": Value\n\t\t\t\t\t\t * \t\trecommendationContext:{ context }\n\t\t\t\t\t\t * \t }\n\t\t\t\t\t\t * recommendationContext:{ context }\n\t\t\t\t\t\t * }\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * so in order to get the recommendations as per each context - for parent/child entities we need to iterate over each keys recursively in the fetchLocalAnnotationObject function,\n\t\t\t\t\t\t * form the corresponding structure and then send it for getting the recommendations accordingly.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.fetchLocalAnnotationObject(annotationObject, openRecommendations);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn openRecommendations;\n\t}\n\n\t/**\n\t *\n\t * @param annotationObject\n\t * @param openRecommendations Recommendation Data\n\t */\n\n\tprivate fetchLocalAnnotationObject(annotationObject: Record<string, unknown>, openRecommendations: RecommendationData[]): void {\n\t\tif (annotationObject[\"recommendationContext\"]) {\n\t\t\tconst recommendationObject: Record<string, unknown> = {};\n\t\t\trecommendationObject[\"recommendationContext\"] = annotationObject[\"recommendationContext\"] as ODataV4Context;\n\t\t\tfor (const currentKey in annotationObject) {\n\t\t\t\tconst currentValue = annotationObject[currentKey];\n\t\t\t\tif (currentValue) {\n\t\t\t\t\tif ((currentValue as Record<string, ODataV4Context>)[\"recommendationContext\"]) {\n\t\t\t\t\t\tthis.fetchLocalAnnotationObject(annotationObject[currentKey] as Record<string, unknown>, openRecommendations);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcurrentKey.includes(\"@$ui5.fe.recommendations.placeholderValue\") ||\n\t\t\t\t\t\tcurrentKey.includes(\"@$ui5.fe.recommendations.placeholderDescription\") ||\n\t\t\t\t\t\tcurrentKey.includes(\"@$ui5.fe.recommendations.typeAheadValues\")\n\t\t\t\t\t) {\n\t\t\t\t\t\trecommendationObject[currentKey] = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst keys = MetaModelConverter.getInvolvedDataModelObjectEntityKeys(\n\t\t\t\trecommendationObject[\"recommendationContext\"] as ODataV4Context\n\t\t\t);\n\t\t\t(recommendationObject[\"recommendationContext\"] as RecommendationContextsInfo).contextIdentifier = keys[\"semanticKeys\"]\n\t\t\t\t? keys[\"semanticKeys\"]\n\t\t\t\t: keys[\"technicalKeys\"];\n\t\t\tthis.getOpenRecommendationsForContext(\n\t\t\t\trecommendationObject,\n\t\t\t\trecommendationObject[\"recommendationContext\"] as ODataV4Context,\n\t\t\t\topenRecommendations\n\t\t\t);\n\t\t}\n\t}\n\t/**\n\t *\n\t * @param contextData The context data object for recommendations\n\t * @param recommendationContext The recommendation context\n\t * @param openRecommendations RecommendationData\n\t * @param contextKey Context Key\n\t */\n\n\tprivate getOpenRecommendationsForContext(\n\t\tcontextData: Record<string, unknown>,\n\t\trecommendationContext: ODataV4Context,\n\t\topenRecommendations: RecommendationData[],\n\t\tcontextKey = \"\"\n\t): void {\n\t\tfor (const currentKey in contextData) {\n\t\t\tconst currentValue = contextData[currentKey];\n\t\t\tif (currentValue) {\n\t\t\t\tconst currentValueIsContext =\n\t\t\t\t\t(currentValue as ODataV4Context).isA && (currentValue as ODataV4Context).isA(\"sap.ui.model.odata.v4.Context\");\n\t\t\t\tif (currentKey.includes(\"@$ui5.fe.recommendations.placeholderValue\")) {\n\t\t\t\t\tconst propertyPath = currentKey.split(\"@$ui5.fe.recommendations.placeholderValue\")[0];\n\t\t\t\t\tconst openRecommendation: RecommendationData = {\n\t\t\t\t\t\tcontext: recommendationContext,\n\t\t\t\t\t\tpropertyPath: contextKey ? `${contextKey}/${propertyPath}` : propertyPath,\n\t\t\t\t\t\tvalue: currentValue as string,\n\t\t\t\t\t\tcontextIdentifier: (recommendationContext as RecommendationContextsInfo).contextIdentifier,\n\t\t\t\t\t\tcontextIdentifierText: []\n\t\t\t\t\t};\n\t\t\t\t\tconst description = contextData[`${propertyPath}@$ui5.fe.recommendations.placeholderDescription`];\n\t\t\t\t\tif (description) {\n\t\t\t\t\t\topenRecommendation.text = description as string;\n\t\t\t\t\t}\n\t\t\t\t\topenRecommendations.push(openRecommendation);\n\t\t\t\t} else if (typeof currentValue === \"object\" && !Array.isArray(currentValue) && !currentValueIsContext) {\n\t\t\t\t\tthis.getOpenRecommendationsForContext(\n\t\t\t\t\t\tcurrentValue as Record<string, unknown>,\n\t\t\t\t\t\trecommendationContext,\n\t\t\t\t\t\topenRecommendations,\n\t\t\t\t\t\tcurrentKey\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens the confirm recommendations dialog.\n\t * @param isSave Boolean flag which would be set to true if we are saving the document and would be false if we do apply changes\n\t * @returns Promise which would resolve with RecommendationDialogDecision (Accept, Ignore, Continue, Skipped)\n\t */\n\tpublic async open(isSave: boolean): Promise<RecommendationDialogDecision | undefined> {\n\t\t// check for built-in recommendations\n\t\tconst openRecommendations = this.getOpenRecommendations();\n\t\tif (openRecommendations.length > 0) {\n\t\t\tstandardRecommendationHelper.addContextIdentifierText(\n\t\t\t\t{ recommendationData: openRecommendations },\n\t\t\t\tthis.view.getBindingContext()?.getPath()\n\t\t\t);\n\t\t\tthis.acceptAllParams = {\n\t\t\t\trecommendationData: openRecommendations\n\t\t\t};\n\t\t} else {\n\t\t\t// if built-in recommendations are not found then check for legacy recommendations.\n\t\t\tconst legacyRecommendationsExist = (this.view?.getController() as PageController).recommendations.checkIfRecommendationsExist();\n\t\t\tif (legacyRecommendationsExist) {\n\t\t\t\tthis.acceptAllParams = await (this.view?.getController() as PageController).recommendations.fetchAcceptAllParams();\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\tconst acceptModel = this.getAcceptAllModel();\n\t\tthis.view.setModel(acceptModel, \"_acceptDialogModel\");\n\t\tif (!acceptModel.getData().items?.length) {\n\t\t\treturn RecommendationDialogDecision.Skipped;\n\t\t}\n\t\tthis.isSave = isSave;\n\t\tconst dialog = this.getContent();\n\t\tdialog?.setEscapeHandler(this.onContinueEditing.bind(this));\n\t\tthis.view.addDependent(dialog as UI5Element);\n\t\tdialog?.open();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.promiseResolve = resolve;\n\t\t\tthis.promiseReject = reject;\n\t\t});\n\t}\n\n\t/**\n\t * Handler to close the confirmRecommendation dialog.\n\t *\n\t */\n\tpublic close(): void {\n\t\tthis.confirmRecommendationDialog.current?.close();\n\t\tthis.confirmRecommendationDialog.current?.destroy();\n\t}\n\n\t/**\n\t * Handler for Accept and Save button.\n\t */\n\tprivate async onAcceptAndSave(): Promise<void> {\n\t\ttry {\n\t\t\tconst isAccepted = await (this.view?.getController() as PageController).recommendations.acceptRecommendations(\n\t\t\t\tthis.acceptAllParams\n\t\t\t);\n\t\t\tif (!isAccepted) {\n\t\t\t\tthis.promiseReject(\"Accept Failed\");\n\t\t\t}\n\t\t\tthis.promiseResolve(RecommendationDialogDecision.Accept);\n\t\t} catch {\n\t\t\tLog.error(\"Accept Recommendations Failed\");\n\t\t\tthis.promiseReject(\"Accept Failed\");\n\t\t} finally {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\t/**\n\t * Handler for Ignore and Save button.\n\t */\n\tprivate onIgnoreAndSave(): void {\n\t\t(this.view?.getController() as PageController).recommendations.ignoreRecommendationForContexts();\n\t\tthis.promiseResolve(RecommendationDialogDecision.Ignore);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Handler for Continue Editing button.\n\t */\n\tprivate onContinueEditing(): void {\n\t\tthis.promiseResolve(RecommendationDialogDecision.Continue);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Gets the label or name of the Field based on its property path.\n\t * @param targetPath\n\t * @returns Returns the label of the Field.\n\t */\n\tprivate getFieldName(targetPath: string): string {\n\t\tconst involvedDataModelObject = MetaModelConverter.getInvolvedDataModelObjectsForTargetPath<Property>(\n\t\t\ttargetPath,\n\t\t\tthis.view?.getBindingContext()?.getModel()?.getMetaModel() as ODataMetaModel\n\t\t);\n\t\treturn (\n\t\t\tinvolvedDataModelObject?.targetObject?.annotations?.Common?.Label?.toString() ||\n\t\t\ttargetPath.split(\"/\")[targetPath.split(\"/\").length - 1]\n\t\t);\n\t}\n\n\t/**\n\t * Fetches text for recommendation based on display mode.\n\t * @param recommendation\n\t * @param displayMode\n\t * @returns Text for a recommendation\n\t */\n\tprivate getText(recommendation: StandardRecommendationDataType, displayMode: string): string {\n\t\tif (recommendation.text || recommendation.value) {\n\t\t\tswitch (displayMode) {\n\t\t\t\tcase \"Description\":\n\t\t\t\t\treturn recommendation.text!;\n\t\t\t\tcase \"DescriptionValue\":\n\t\t\t\t\treturn valueFormatters.formatWithBrackets(recommendation.text, recommendation.value);\n\t\t\t\tcase \"ValueDescription\":\n\t\t\t\t\treturn valueFormatters.formatWithBrackets(recommendation.value, recommendation.text);\n\t\t\t\tcase \"Value\":\n\t\t\t\t\treturn recommendation.value!;\n\t\t\t}\n\t\t}\n\t\treturn recommendation.value || \"\";\n\t}\n\n\t/**\n\t * Returns Button with given text, type and pressHandler.\n\t * @param text Text for the button\n\t * @param type Type of the button\n\t * @param pressHandler Press Handler for the button\n\t * @returns Button with the given settings\n\t */\n\tprivate getButton(text: string, type: string, pressHandler: EventHandler): Button {\n\t\treturn (\n\t\t\t<Button text={text} type={type} width={\"auto\"} press={pressHandler}>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FlexItemData minWidth={\"100%\"}></FlexItemData>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Button>\n\t\t);\n\t}\n\n\t/**\n\t * Returns Footer with Buttons.\n\t * @returns Footer\n\t */\n\n\tprivate getFooter(): Toolbar {\n\t\treturn (\n\t\t\t<Toolbar>\n\t\t\t\t{{\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t\t\t\t{this.getButton(\n\t\t\t\t\t\t\t\tthis._getDialogButtonText(this.isSave, RecommendationDialogDecision.Accept),\n\t\t\t\t\t\t\t\t\"Emphasized\",\n\t\t\t\t\t\t\t\tthis.onAcceptAndSave.bind(this)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.getButton(\n\t\t\t\t\t\t\t\tthis._getDialogButtonText(this.isSave, RecommendationDialogDecision.Ignore),\n\t\t\t\t\t\t\t\t\"Ghost\",\n\t\t\t\t\t\t\t\tthis.onIgnoreAndSave.bind(this)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.getButton(\n\t\t\t\t\t\t\t\tthis.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_CONTINUE_EDITING\"),\n\t\t\t\t\t\t\t\t\"Ghost\",\n\t\t\t\t\t\t\t\tthis.onContinueEditing.bind(this)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Toolbar>\n\t\t);\n\t}\n\n\tprivate _getDialogButtonText(save: boolean, recommendationDialogDecision: RecommendationDialogDecision): string {\n\t\tconst isAcceptButton: boolean = recommendationDialogDecision === RecommendationDialogDecision.Accept;\n\t\tif (save) {\n\t\t\tif (!this.view.getBindingContext()?.getObject().HasActiveEntity) {\n\t\t\t\treturn isAcceptButton\n\t\t\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_ACCEPT_AND_CREATE\")\n\t\t\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_IGNORE_AND_CREATE\");\n\t\t\t}\n\t\t\treturn isAcceptButton\n\t\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_ACCEPT_AND_SAVE\")\n\t\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_IGNORE_AND_SAVE\");\n\t\t} else {\n\t\t\treturn isAcceptButton\n\t\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_ACCEPT\")\n\t\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_IGNORE\");\n\t\t}\n\t}\n\n\t/**\n\t * This method created a JSON Model for the accept all dialog data.\n\t * @returns The JSON Model for accept all dialog.\n\t */\n\tgetAcceptAllModel(): JSONModel {\n\t\tconst acceptModel = new JSONModel();\n\t\tconst items = [];\n\t\tfor (const recommendationData of this.acceptAllParams?.recommendationData || []) {\n\t\t\tconst entityNameLabel = standardRecommendationHelper.getEntityName(recommendationData.context as ODataV4Context) || \"\";\n\n\t\t\tconst identifierTexts =\n\t\t\t\trecommendationData.contextIdentifierText && recommendationData.contextIdentifierText.length > 0\n\t\t\t\t\t? `${entityNameLabel} (${recommendationData.contextIdentifierText})`\n\t\t\t\t\t: entityNameLabel;\n\n\t\t\tif (recommendationData.value || recommendationData.text) {\n\t\t\t\tconst targetPath = recommendationData.context?.getPath() + \"/\" + recommendationData.propertyPath;\n\t\t\t\tconst displayMode = standardRecommendationHelper.getDisplayModeForTargetPath(\n\t\t\t\t\ttargetPath,\n\t\t\t\t\tthis.view?.getBindingContext()?.getModel()?.getMetaModel() as ODataMetaModel\n\t\t\t\t);\n\t\t\t\tconst listData = {\n\t\t\t\t\tfieldName: this.getFieldName(targetPath).valueOf(),\n\t\t\t\t\tfieldValue: this.getText(recommendationData, displayMode),\n\t\t\t\t\tidentifierTexts: identifierTexts\n\t\t\t\t};\n\t\t\t\titems.push(listData);\n\t\t\t}\n\t\t}\n\t\tacceptModel.setData({ items: items });\n\t\treturn acceptModel;\n\t}\n\n\t/**\n\t * This method groups the contexts according to the identifier texts.\n\t * @param context The context of the item\n\t * @returns The text of the group\n\t */\n\tgetGroup(context: ODataV4Context): string {\n\t\treturn context.getProperty(\"identifierTexts\");\n\t}\n\n\t/**\n\t * This function returns the message to be shown in the accept dialog.\n\t * @returns A message with the desired text.\n\t */\n\tgetMessage(): Text {\n\t\tconst acceptAllData = (this.view.getModel(\"_acceptDialogModel\") as JSONModel)?.getData()?.items;\n\t\tconst messageText =\n\t\t\tacceptAllData.length > 1\n\t\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_TEXT\", [acceptAllData.length])\n\t\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_TEXT_SINGULAR\");\n\t\treturn <Text text={messageText} />;\n\t}\n\n\t/**\n\t * This method creates the content for the dialog.\n\t * @returns A list as content of the dialog.\n\t */\n\tgetDialogContent(): List {\n\t\treturn (\n\t\t\t<List items={{ model: \"_acceptDialogModel\", path: \"/items\", sorter: new Sorter(\"identifierTexts\", false, this.getGroup) }}>\n\t\t\t\t<CustomListItem>\n\t\t\t\t\t<HBox class=\"sapUiSmallMarginBegin sapUiTinyMargin\">\n\t\t\t\t\t\t<Text text=\"{_acceptDialogModel>fieldName}: {_acceptDialogModel>fieldValue}\" />\n\t\t\t\t\t</HBox>\n\t\t\t\t</CustomListItem>\n\t\t\t</List>\n\t\t);\n\t}\n\n\t/**\n\t * The building block render function.\n\t * @returns An XML-based string\n\t */\n\tgetContent(): Dialog {\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\ttitle={this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_TITLE\")}\n\t\t\t\tstate={ValueState.Information}\n\t\t\t\ttype={\"Message\"}\n\t\t\t\tref={this.confirmRecommendationDialog}\n\t\t\t\tresizable={\"true\"}\n\t\t\t\tcontentWidth={\"35rem\"}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{this.getMessage()}\n\t\t\t\t\t\t\t{this.getDialogContent()}\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t\tfooter: <>{this.getFooter()}</>\n\t\t\t\t}}\n\t\t\t</Dialog>\n\t\t) as Dialog;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}