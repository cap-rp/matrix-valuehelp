{"version":3,"file":"EditButton.js","names":["EditButton","_dec","defineUI5Class","_dec2","property","type","_dec3","bindToState","_class","_class2","_BuildingBlock","_this","_len","arguments","length","args","Array","_key","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","_ownerComponent","content","createContent","buildEmphasizedButtonExpression","metaPath","identification","getTarget","annotations","UI","Identification","dataFieldsWithCriticality","filter","dataField","$Type","Criticality","dataFieldsBindingExpressions","map","criticalityVisibleBindingExpression","getExpressionFromAnnotation","and","not","equal","Hidden","or","constant","compileExpression","ifElse","ButtonType","Ghost","Emphasized","_easyEditDocument","async","getAppComponent","getEnvironmentCapabilities","getCapabilities","EasyEdit","controller","getPageController","view","getView","getModel","getProperty","editFlow","editDocument","apply","getBindingContext","easyEditDialog","getOwnerComponent","runAsOwner","EasyFillDialog","getEditableFields","_getEditableFields","bind","open","addDependent","allFields","findAggregatedObjects","control","isA","editableFields","forEach","field","propertyRelativePath","getMainPropertyRelativePath","isEditable","getEditable","Promise","resolve","_createId","id","createId","metaPathObject","getMetaPathObject","getOwnerContextPath","_jsx","CommandExecution","execute","command","MenuButton","enabled","bindState","text","buttonMode","useDefaultActionOnly","children","_jsxs","Menu","MenuItem","icon","getTranslatedText","Button","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./EditButton.tsx"],"sourcesContent":["import type { EntityType } from \"@sap-ux/vocabularies-types\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, equal, getExpressionFromAnnotation, ifElse, not, or } from \"sap/fe/base/BindingToolkit\";\nimport { defineUI5Class, property, type EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport type MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport type Field from \"sap/fe/macros/Field\";\nimport EasyFillDialog from \"sap/fe/macros/ai/EasyFillDialog\";\nimport Button from \"sap/m/Button\";\nimport Menu from \"sap/m/Menu\";\nimport MenuButton from \"sap/m/MenuButton\";\nimport MenuItem from \"sap/m/MenuItem\";\nimport { ButtonType } from \"sap/m/library\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\n\n@defineUI5Class(\"sap.fe.macros.EditButton\")\nexport default class EditButton extends BuildingBlock<Button, { enabled: boolean }> {\n\t@property({ type: \"string\" })\n\ttext?: string;\n\n\t@property({ type: \"boolean\", bindToState: true })\n\tenabled?: boolean;\n\n\tonMetadataAvailable(_ownerComponent: TemplateComponent): void {\n\t\tsuper.onMetadataAvailable(_ownerComponent);\n\t\tthis.content = this.createContent();\n\t}\n\n\tbuildEmphasizedButtonExpression(metaPath: MetaPath<EntityType> | null): CompiledBindingToolkitExpression {\n\t\tconst identification = metaPath?.getTarget()?.annotations?.UI?.Identification;\n\t\tconst dataFieldsWithCriticality =\n\t\t\tidentification?.filter((dataField) => dataField.$Type === UIAnnotationTypes.DataFieldForAction && dataField.Criticality) || [];\n\n\t\tconst dataFieldsBindingExpressions = dataFieldsWithCriticality.length\n\t\t\t? dataFieldsWithCriticality.map((dataField) => {\n\t\t\t\t\tconst criticalityVisibleBindingExpression = getExpressionFromAnnotation(dataField.Criticality);\n\t\t\t\t\treturn and(\n\t\t\t\t\t\tnot(equal(getExpressionFromAnnotation(dataField.annotations?.UI?.Hidden), true)),\n\t\t\t\t\t\tor(\n\t\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"UI.CriticalityType/Negative\"),\n\t\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"1\"),\n\t\t\t\t\t\t\tequal(criticalityVisibleBindingExpression as BindingToolkitExpression<number>, 1),\n\t\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"UI.CriticalityType/Positive\"),\n\t\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"3\"),\n\t\t\t\t\t\t\tequal(criticalityVisibleBindingExpression as BindingToolkitExpression<number>, 3)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t  })\n\t\t\t: ([constant(false)] as BindingToolkitExpression<boolean>[]);\n\n\t\t// If there is at least one visible dataField with criticality negative or positive, the type is set as Ghost\n\t\t// else it is emphasized\n\t\treturn compileExpression(ifElse(or(...dataFieldsBindingExpressions), ButtonType.Ghost, ButtonType.Emphasized));\n\t}\n\n\tasync _easyEditDocument(): Promise<void> {\n\t\tif (this.getAppComponent()?.getEnvironmentCapabilities().getCapabilities().EasyEdit) {\n\t\t\tconst controller = this.getPageController();\n\t\t\tconst view = controller.getView();\n\t\t\tif (!this.getPageController()?.getModel(\"ui\").getProperty(\"/isEditable\")) {\n\t\t\t\tawait controller.editFlow.editDocument.apply(controller.editFlow, [view?.getBindingContext()]);\n\t\t\t}\n\t\t\t// Open easy create dialog\n\t\t\tconst easyEditDialog = this.getPageController()\n\t\t\t\t.getOwnerComponent()\n\t\t\t\t?.runAsOwner(() => {\n\t\t\t\t\treturn new EasyFillDialog({ getEditableFields: this._getEditableFields.bind(this) });\n\t\t\t\t});\n\n\t\t\teasyEditDialog.open();\n\t\t\tview?.addDependent(easyEditDialog);\n\t\t}\n\t}\n\n\tasync _getEditableFields(): Promise<unknown> {\n\t\t// Connect all sections\n\t\tconst allFields = this.getPageController()\n\t\t\t.getView()\n\t\t\t?.findAggregatedObjects(true, (control: ManagedObject): boolean => {\n\t\t\t\treturn control.isA(\"sap.fe.macros.Field\");\n\t\t\t}) as EnhanceWithUI5<Field>[];\n\t\tconst editableFields: Record<string, { isEditable: boolean }> = {};\n\t\tallFields.forEach((field) => {\n\t\t\tconst propertyRelativePath = field.getMainPropertyRelativePath();\n\t\t\tif (propertyRelativePath) {\n\t\t\t\teditableFields[propertyRelativePath] = { isEditable: field.getEditable() };\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve(editableFields);\n\t}\n\n\t_createId(id: string): string {\n\t\treturn this.getPageController().getView().createId(id);\n\t}\n\n\tcreateContent(): Button {\n\t\tconst metaPathObject = this.getMetaPathObject<EntityType>(this.getOwnerContextPath()!);\n\t\tif (this.getAppComponent()?.getEnvironmentCapabilities().getCapabilities().EasyEdit) {\n\t\t\tthis.getPageController()\n\t\t\t\t.getView()\n\t\t\t\t?.addDependent(<CommandExecution execute={this._easyEditDocument.bind(this)} command=\"EasyEdit\" />);\n\t\t\treturn (\n\t\t\t\t<MenuButton\n\t\t\t\t\tid={this._createId(\"fe::StandardAction::EditMenu\")}\n\t\t\t\t\tenabled={this.bindState(\"enabled\")}\n\t\t\t\t\ttype={this.buildEmphasizedButtonExpression(metaPathObject)}\n\t\t\t\t\tdt:designtime=\"not-adaptable\"\n\t\t\t\t\ttext={this.text}\n\t\t\t\t\tjsx:command={\"cmd:Edit|defaultAction\"}\n\t\t\t\t\tbuttonMode=\"Split\"\n\t\t\t\t\tuseDefaultActionOnly=\"true\"\n\t\t\t\t>\n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tid={this._createId(\"fe::StandardAction::Edit\")}\n\t\t\t\t\t\t\ticon=\"sap-icon://edit\"\n\t\t\t\t\t\t\ttext=\"{sap.fe.i18n>C_COMMON_OBJECT_PAGE_EDIT}\"\n\t\t\t\t\t\t\tjsx:command=\"cmd:Edit|press\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tid={this._createId(\"fe::StandardAction::EasyEdit\")}\n\t\t\t\t\t\t\ticon=\"sap-icon://ai\"\n\t\t\t\t\t\t\tjsx:command=\"cmd:EasyEdit|press\"\n\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_EASYEDIT_BUTTON\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Menu>\n\t\t\t\t</MenuButton>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tid={this._createId(\"fe::StandardAction::Edit\")}\n\t\t\t\t\tdt:designtime=\"not-adaptable\"\n\t\t\t\t\ttext={this.text}\n\t\t\t\t\ttype={this.buildEmphasizedButtonExpression(metaPathObject)}\n\t\t\t\t\tjsx:command=\"cmd:Edit|press\"\n\t\t\t\t\tenabled={this.bindState(\"enabled\")}\n\t\t\t\t/>\n\t\t\t) as Button;\n\t\t}\n\t}\n}\n"],"mappings":";;;;siDAmBqBA,GAAUC,EAD9BC,EAAe,4BAA2BC,EAEzCC,EAAS,CAAEC,KAAM,WAAWC,EAG5BF,EAAS,CAAEC,KAAM,UAAWE,YAAa,OAAON,EAAAO,GAAAC,EAAA,SAAAC,GAAA,SAAAV,IAAA,IAAAW,EAAA,QAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAA,CAAAF,EAAAE,GAAAJ,UAAAI,EAAA,CAAAN,EAAAD,EAAAQ,KAAAC,QAAAJ,IAAAI,KAAAC,EAAAT,EAAA,OAAAU,EAAAV,GAAAS,EAAAT,EAAA,UAAAW,EAAAX,GAAA,OAAAA,CAAA,CAAAY,EAAAvB,EAAAwB,EAAAxB,EAAAU,GAAA,IAAAe,EAAAzB,EAAA0B,UAAAD,EAGjDE,oBAAA,SAAAA,EAAoBC,GACnBlB,EAAAgB,UAAMC,oBAAmBT,KAAAC,KAACS,GAC1BT,KAAKU,QAAUV,KAAKW,eACrB,EAACL,EAEDM,gCAAA,SAAAA,EAAgCC,GAC/B,MAAMC,EAAiBD,GAAUE,aAAaC,aAAaC,IAAIC,eAC/D,MAAMC,EACLL,GAAgBM,OAAQC,GAAcA,EAAUC,QAAK,iDAA6CD,EAAUE,cAAgB,GAE7H,MAAMC,EAA+BL,EAA0BxB,OAC5DwB,EAA0BM,IAAKJ,IAC/B,MAAMK,EAAsCC,EAA4BN,EAAUE,aAClF,OAAOK,EACNC,EAAIC,EAAMH,EAA4BN,EAAUL,aAAaC,IAAIc,QAAS,OAC1EC,EACCF,EAAMJ,EAAqC,+BAC3CI,EAAMJ,EAAqC,KAC3CI,EAAMJ,EAAyE,GAC/EI,EAAMJ,EAAqC,+BAC3CI,EAAMJ,EAAqC,KAC3CI,EAAMJ,EAAyE,OAIhF,CAACO,EAAS,QAId,OAAOC,EAAkBC,EAAOH,KAAMR,GAA+BY,EAAWC,MAAOD,EAAWE,YACnG,EAAChC,EAEKiC,kBAANC,eAAMD,IACL,GAAIvC,KAAKyC,mBAAmBC,6BAA6BC,kBAAkBC,SAAU,CACpF,MAAMC,EAAa7C,KAAK8C,oBACxB,MAAMC,EAAOF,EAAWG,UACxB,IAAKhD,KAAK8C,qBAAqBG,SAAS,MAAMC,YAAY,eAAgB,OACnEL,EAAWM,SAASC,aAAaC,MAAMR,EAAWM,SAAU,CAACJ,GAAMO,qBAC1E,CAEA,MAAMC,EAAiBvD,KAAK8C,oBAC1BU,qBACCC,WAAW,IACL,IAAIC,EAAe,CAAEC,kBAAmB3D,KAAK4D,mBAAmBC,KAAK7D,SAG9EuD,EAAeO,OACff,GAAMgB,aAAaR,EACpB,CACD,EAACjD,EAEKsD,mBAANpB,eAAMoB,IAEL,MAAMI,EAAYhE,KAAK8C,oBACrBE,WACCiB,sBAAsB,KAAOC,GACvBA,EAAQC,IAAI,wBAErB,MAAMC,EAA0D,CAAC,EACjEJ,EAAUK,QAASC,IAClB,MAAMC,EAAuBD,EAAME,8BACnC,GAAID,EAAsB,CACzBH,EAAeG,GAAwB,CAAEE,WAAYH,EAAMI,cAC5D,IAED,OAAOC,QAAQC,QAAQR,EACxB,EAAC9D,EAEDuE,UAAA,SAAAA,EAAUC,GACT,OAAO9E,KAAK8C,oBAAoBE,UAAU+B,SAASD,EACpD,EAACxE,EAEDK,cAAA,SAAAA,IACC,MAAMqE,EAAiBhF,KAAKiF,kBAA8BjF,KAAKkF,uBAC/D,GAAIlF,KAAKyC,mBAAmBC,6BAA6BC,kBAAkBC,SAAU,CACpF5C,KAAK8C,oBACHE,WACCe,aAAaoB,EAACC,EAAgB,CAACC,QAASrF,KAAKuC,kBAAkBsB,KAAK7D,MAAOsF,QAAQ,cACtF,OACCH,EAACI,EAAU,CACVT,GAAI9E,KAAK6E,UAAU,gCACnBW,QAASxF,KAAKyF,UAAU,WACxBvG,KAAMc,KAAKY,gCAAgCoE,GAC3C,gBAAc,gBACdU,KAAM1F,KAAK0F,KACX,cAAa,yBACbC,WAAW,QACXC,qBAAqB,OAAMC,SAE3BC,EAACC,EAAI,CAAAF,SAAA,CACJV,EAACa,EAAQ,CACRlB,GAAI9E,KAAK6E,UAAU,4BACnBoB,KAAK,kBACLP,KAAK,0CACL,cAAY,mBAEbP,EAACa,EAAQ,CACRlB,GAAI9E,KAAK6E,UAAU,gCACnBoB,KAAK,gBACL,cAAY,qBACZP,KAAM1F,KAAKkG,kBAAkB,2BAKlC,KAAO,CACN,OACCf,EAACgB,EAAM,CACNrB,GAAI9E,KAAK6E,UAAU,4BACnB,gBAAc,gBACda,KAAM1F,KAAK0F,KACXxG,KAAMc,KAAKY,gCAAgCoE,GAC3C,cAAY,iBACZQ,QAASxF,KAAKyF,UAAU,YAG3B,CACD,EAAC,OAAA5G,CAAA,CAxHgD,CAJVuH,GAAalG,EAAAmG,EAAA/G,EAAAiB,UAAA,QAAAvB,GAAA,CAAAsH,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAtG,EAAAkG,EAAA/G,EAAAiB,UAAA,WAAApB,GAAA,CAAAmH,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAnH,KAAAD,GAAAe,EAAAvB,EAAA,OAAAuB,CAAA","ignoreList":[]}