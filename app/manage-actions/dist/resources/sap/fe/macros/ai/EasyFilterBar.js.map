{"version":3,"file":"EasyFilterBar.js","names":["EasyFilterBar","_dec","defineUI5Class","_dec2","implementInterface","_dec3","association","type","_dec4","_dec5","property","_dec6","_dec7","aggregation","_class","_class2","_BuildingBlock","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","getAppComponent","getEnvironmentCapabilities","prepareFeature","then","easyFilterPath","content","setEasyFilterLib","catch","error","Log","debug","undefined","_exports","_inheritsLoose","_proto","prototype","applyLegacyState","async","getContrilState","oNavParameters","_shouldApplyDiffState","_skipMerge","selectionVariant","selectOptionsNames","getSelectOptionsPropertyNames","filterBarMetadata","forEach","field","includes","name","defaultValue","getSelectOption","map","option","Sign","Option","operator","FilterOperator","BT","selectedValues","value1","Low","value2","High","NE","resetState","Promise","resolve","applyState","_state","_oNavParameters","retrieveState","getApplicationId","getManifestEntry","id","onMetadataAvailable","_fetchedCodeList","prepareFilterBarMetadata","recommendedQueries","macros","easyFilter","createContent","owner","_getOwner","definitionForPage","preprocessorContext","getDefinitionForPage","filterBarDef","getFilterBarDefinition","metaModel","models","getType","edmType","codeList","startupParameters","getComponentData","filterFields","getFilterFields","result","propertyObject","getTarget","hasCodeList","hasValueHelpWithFixedValues","getCodeListForProperty","annotationPath","unitAnnotation","annotations","Measures","ISOCurrency","Unit","unitProperty","isPathAnnotationExpression","$target","unit","find","f","hasOwnProperty","EQ","isParameter","substring","path","label","dataType","required","filterable","sortable","ModelHelper","isMetaPathDraftSupported","getMetaPath","props","JSONModel","isDraftCollaborative","isCollaborationDraftSupported","createBindingContext","editingStatusCodeList","DraftEditState","getEditStatesContext","getObject","state","value","description","display","push","getTranslatedText","key","propertyPath","defaultValueList","getValueList","valueListInfo","listBinding","$model","bindList","CollectionPath","$select","generateSelectParameter","data","requestContexts","filterGroupValues","mapValueListToCodeList","codeListProperty","resolveTokenValuesForField","fieldName","values","_ref","valueList","ValueListHelper","isValueListSearchable","resolvedTokenValues","all","resolveTokenValue","flat","unresolvedResult","getMetaModel","valueLists","getValueListInfo","onTokensChanged","e","filterBar","UI5Element","getElementById","filterBarAPI","getParent","tokens","getParameter","clearEditFilter","some","tokenDefinition","_clearFilterValuesWithOptions","formateDataTypes","token","tokenKeySpecification","keySpecificSelectedValues","FilterUtils","addFilterValues","triggerSearch","dateType","Date1","dateTimeOffsetType","DateTimeOffset","V4","timeOfDayType","TimeOfDay","keySpecificSelectedValue","requiredConverter","idx","parseValue","showValueHelpForKey","_currentValue","fnCallback","showFilterField","openValueHelpForFilterField","onBeforeQueryProcessing","uiModel","getModel","BusyLocker","lock","onAfterQueryProcessing","unlock","onClearFilters","onQueryChanged","fireFiltersChanged","conditionsBased","_jsx","EasyFilterBarContainer","contextPath","getOwnerContextPath","appId","easyFilterLib","showValueHelp","selectedConditions","tokenSelectedValues","condition","NB","dataFetcher","bind","recommendedValues","queryChanged","tokensChanged","beforeQueryProcessing","afterQueryProcessing","clearFilters","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./EasyFilterBar.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, association, defineUI5Class, implementInterface, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport type {\n\tBetweenSelectedValues,\n\tEasyFilterPropertyMetadata,\n\tTokenDefinition,\n\tTokenSelectedValuesDefinition,\n\tTokenType,\n\tValueHelpSelectedValuesDefinition\n} from \"sap/fe/controls/easyFilter/EasyFilterBarContainer\";\nimport EasyFilterBarContainer from \"sap/fe/controls/easyFilter/EasyFilterBarContainer\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport type { ControlState, NavigationParameter } from \"sap/fe/core/controllerextensions/ViewState\";\nimport type IViewStateContributor from \"sap/fe/core/controllerextensions/viewState/IViewStateContributor\";\nimport type { FilterField } from \"sap/fe/core/definition/FEDefinition\";\nimport type MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport { hasValueHelpWithFixedValues } from \"sap/fe/core/templating/PropertyHelper\";\nimport {\n\tgenerateSelectParameter,\n\tmapValueListToCodeList,\n\tresolveTokenValue,\n\tunresolvedResult\n} from \"sap/fe/macros/ai/EasyFilterDataFetcher\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport DraftEditState from \"sap/fe/macros/filterBar/DraftEditState\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport ValueListHelper, { type ValueListInfo } from \"sap/fe/macros/internal/valuehelp/ValueListHelper\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Date1 from \"sap/ui/model/odata/type/Date\";\nimport DateTimeOffset from \"sap/ui/model/odata/type/DateTimeOffset\";\nimport type ODataType from \"sap/ui/model/odata/type/ODataType\";\nimport TimeOfDay from \"sap/ui/model/odata/type/TimeOfDay\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { CodeListEntry } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\n\ntype EasyFilterBarState = {};\n/**\n * Delivery for beta release for the easy filter feature.\n * @experimental\n */\n@defineUI5Class(\"sap.fe.macros.EasyFilterBar\")\nexport default class EasyFilterBar extends BuildingBlock implements IViewStateContributor<EasyFilterBarState> {\n\t@implementInterface(\"sap.fe.core.controllerextensions.viewState.IViewStateContributor\")\n\t__implements__sap_fe_core_controllerextensions_viewState_IViewStateContributor!: boolean;\n\n\t@association({ type: \"sap.fe.macros.filterBar.FilterBarAPI\" })\n\tfilterBar!: string;\n\n\t@association({ type: \"sap.fe.macros.contentSwitcher.ContentSwitcher\" })\n\tcontentSwitcher!: string;\n\n\t@property({ type: \"string\" })\n\tcontentSwitcherKey?: string;\n\n\t@property({ type: \"string\" })\n\tcontextPath?: string;\n\n\t@aggregation({ type: \"sap.fe.controls.easyFilter.EasyFilterBarContainer\" })\n\tcontent?: EnhanceWithUI5<EasyFilterBarContainer>;\n\n\t_fetchedCodeList!: Record<string, unknown>;\n\n\tprivate filterBarMetadata!: (EasyFilterPropertyMetadata & { path?: string })[];\n\n\tprivate easyFilterPath?: string;\n\n\tprivate recommendedQueries?: string[];\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<EasyFilterBar>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t\tthis.getAppComponent()\n\t\t\t?.getEnvironmentCapabilities()\n\t\t\t.prepareFeature(\"MagicFiltering\")\n\t\t\t.then(() => {\n\t\t\t\tthis.easyFilterPath = \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\n\t\t\t\tthis.content?.setEasyFilterLib(this.easyFilterPath);\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tLog.debug(\"Error while loading EasyFilter\", error);\n\t\t\t\treturn undefined;\n\t\t\t});\n\t}\n\n\tasync applyLegacyState(\n\t\tgetContrilState?: (control: ManagedObject) => ControlState,\n\t\toNavParameters?: NavigationParameter,\n\t\t_shouldApplyDiffState?: boolean,\n\t\t_skipMerge?: boolean\n\t): Promise<void> {\n\t\tif (oNavParameters?.selectionVariant) {\n\t\t\tconst selectOptionsNames = oNavParameters.selectionVariant.getSelectOptionsPropertyNames();\n\t\t\tthis.filterBarMetadata.forEach((field) => {\n\t\t\t\tif (selectOptionsNames.includes(field.name)) {\n\t\t\t\t\tfield.defaultValue = oNavParameters.selectionVariant!.getSelectOption(field.name)?.map((option) => {\n\t\t\t\t\t\tif (option.Sign === \"I\") {\n\t\t\t\t\t\t\tif (option.Option === \"BT\") {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: FilterOperator.BT,\n\t\t\t\t\t\t\t\t\tselectedValues: [{ value1: option.Low, value2: option.High }]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: option.Option,\n\t\t\t\t\t\t\t\t\tselectedValues: [option.Low]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\toperator: FilterOperator.NE,\n\t\t\t\t\t\t\t\tselectedValues: [option.Low]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}) as TokenSelectedValuesDefinition[];\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.content?.resetState(false);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tapplyState(_state: EasyFilterBarState, _oNavParameters?: NavigationParameter): Promise<void> | void {\n\t\treturn undefined;\n\t}\n\n\tretrieveState(): EasyFilterBarState | null {\n\t\treturn {};\n\t}\n\n\tgetApplicationId(): string {\n\t\treturn this.getAppComponent()?.getManifestEntry(\"sap.app\").id ?? \"<unknownID>\";\n\t}\n\n\tonMetadataAvailable(): void {\n\t\tthis._fetchedCodeList ??= {};\n\t\tthis.filterBarMetadata = this.prepareFilterBarMetadata();\n\t\tthis.recommendedQueries = this.getAppComponent()?.getManifestEntry(\"sap.fe\")?.macros?.easyFilter?.recommendedQueries ?? [];\n\t\tthis.content = this.createContent() as EnhanceWithUI5<EasyFilterBarContainer>;\n\t\tthis.content.filterBarMetadata = this.filterBarMetadata;\n\t}\n\n\tprepareFilterBarMetadata(): EasyFilterPropertyMetadata[] {\n\t\tconst owner = this._getOwner()!;\n\t\tconst definitionForPage = owner.preprocessorContext?.getDefinitionForPage();\n\t\tlet filterBarDef;\n\t\tif (definitionForPage) {\n\t\t\tfilterBarDef = definitionForPage.getFilterBarDefinition({});\n\n\t\t\tconst metaModel = owner.preprocessorContext?.models.metaModel as ODataMetaModel;\n\n\t\t\tconst getType = (edmType: string, codeList: unknown): TokenType => {\n\t\t\t\tif (codeList) {\n\t\t\t\t\treturn \"MenuWithCheckBox\";\n\t\t\t\t}\n\t\t\t\tswitch (edmType) {\n\t\t\t\t\tcase \"Edm.Date\":\n\t\t\t\t\t\treturn \"Calendar\";\n\t\t\t\t\tcase \"Edm.TimeOfDay\":\n\t\t\t\t\t\treturn \"Time\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"ValueHelp\";\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst startupParameters = owner.getAppComponent().getComponentData()?.startupParameters ?? {};\n\n\t\t\tconst filterFields = filterBarDef.getFilterFields();\n\t\t\tconst result = filterFields.map((field: FilterField): EasyFilterPropertyMetadata => {\n\t\t\t\t// Exclude hidden filter fields. It is not possible to set a value for hidden filters, and users would not understand anyway as they cannot see these values.\n\t\t\t\tconst propertyObject = field.getTarget();\n\t\t\t\tlet codeList;\n\t\t\t\tconst hasCodeList = hasValueHelpWithFixedValues(propertyObject);\n\t\t\t\tif (hasCodeList) {\n\t\t\t\t\tcodeList = this._fetchedCodeList[field.name];\n\t\t\t\t\tif (!codeList) {\n\t\t\t\t\t\tcodeList = async (): Promise<CodeListEntry[]> => this.getCodeListForProperty(field.name, field.annotationPath!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if the filter field's target property has a currency or a unit. If so, look for the corresponding filter field (the\n\t\t\t\t// annotation has to be a path for that) and set the 'unit' property.\n\t\t\t\tconst unitAnnotation = propertyObject.annotations.Measures?.ISOCurrency ?? propertyObject.annotations.Measures?.Unit;\n\t\t\t\tconst unitProperty = isPathAnnotationExpression(unitAnnotation) ? unitAnnotation.$target : undefined;\n\t\t\t\tconst unit = unitProperty ? filterFields.find((f) => f.getTarget() === unitProperty)?.name : undefined;\n\t\t\t\tlet defaultValue;\n\t\t\t\tif (startupParameters.hasOwnProperty(field.name)) {\n\t\t\t\t\tdefaultValue = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\tselectedValues: startupParameters[field.name]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t} else if (field.isParameter && startupParameters.hasOwnProperty(field.name.substring(2))) {\n\t\t\t\t\tdefaultValue = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\tselectedValues: startupParameters[field.name.substring(2)]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tname: field.name,\n\t\t\t\t\tpath: field.annotationPath,\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tdataType: propertyObject.type,\n\t\t\t\t\trequired: field.required ?? false,\n\t\t\t\t\tdefaultValue: defaultValue,\n\t\t\t\t\tfilterable: true,\n\t\t\t\t\tsortable: !field.isParameter,\n\t\t\t\t\tcodeList: codeList,\n\t\t\t\t\ttype: getType(propertyObject.type, codeList),\n\t\t\t\t\tunit: unit\n\t\t\t\t} as EasyFilterPropertyMetadata;\n\t\t\t});\n\n\t\t\t// [Editing Status]\n\n\t\t\tif (ModelHelper.isMetaPathDraftSupported(definitionForPage.getMetaPath() as unknown as MetaPath<unknown>)) {\n\t\t\t\t// Assemble the code list for the editing status filter values:\n\t\t\t\tconst props = new JSONModel({\n\t\t\t\t\tisDraftCollaborative: ModelHelper.isCollaborationDraftSupported(metaModel)\n\t\t\t\t}).createBindingContext(\"/\");\n\n\t\t\t\tconst editingStatusCodeList = DraftEditState.getEditStatesContext(props)\n\t\t\t\t\t.getObject(\"/\")\n\t\t\t\t\t.map((state: { id: string; display: string }) => ({ value: state.id, description: state.display }));\n\n\t\t\t\tresult.push({\n\t\t\t\t\tname: \"$editState\",\n\t\t\t\t\tlabel: this.getTranslatedText(\"FILTERBAR_EDITING_STATUS\"),\n\t\t\t\t\tdataType: \"Edm.String\",\n\t\t\t\t\trequired: false,\n\t\t\t\t\tfilterable: true,\n\t\t\t\t\tsortable: false,\n\t\t\t\t\tcodeList: editingStatusCodeList,\n\t\t\t\t\ttype: \"MenuWithCheckBox\"\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getCodeListForProperty(key: string, propertyPath: string): Promise<CodeListEntry[]> {\n\t\tconst defaultValueList = await this.getValueList(propertyPath);\n\n\t\tif (!defaultValueList) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst valueListInfo = defaultValueList.valueListInfo;\n\n\t\tconst listBinding = valueListInfo.$model.bindList(`/${valueListInfo.CollectionPath}`, undefined, undefined, undefined, {\n\t\t\t$select: generateSelectParameter(defaultValueList)\n\t\t});\n\t\tconst data = await listBinding.requestContexts();\n\n\t\tconst filterGroupValues = data.map(mapValueListToCodeList(defaultValueList));\n\t\tthis._fetchedCodeList[key] = filterGroupValues;\n\t\tconst codeListProperty = this.filterBarMetadata.find((field) => field.name === key);\n\t\tif (codeListProperty) {\n\t\t\tcodeListProperty.codeList = filterGroupValues;\n\t\t}\n\t\treturn filterGroupValues;\n\t}\n\n\tasync resolveTokenValuesForField(\n\t\tfieldName: string,\n\t\tvalues: TokenSelectedValuesDefinition[]\n\t): Promise<ValueHelpSelectedValuesDefinition[]> {\n\t\tconst field = this.filterBarMetadata.find(({ name }) => name === fieldName);\n\t\tif (field?.path) {\n\t\t\tconst valueList = await this.getValueList(field.path);\n\n\t\t\tif (valueList && ValueListHelper.isValueListSearchable(field.path, valueList)) {\n\t\t\t\tconst resolvedTokenValues = await Promise.all(values.map(async (value) => resolveTokenValue(valueList, value)));\n\t\t\t\treturn resolvedTokenValues.flat();\n\t\t\t}\n\t\t}\n\n\t\t// return original values converted to the expected format\n\t\treturn unresolvedResult(values);\n\t}\n\n\tasync getValueList(propertyPath: string): Promise<ValueListInfo | undefined> {\n\t\tconst metaModel = this.getMetaModel()!;\n\t\tconst valueLists = await ValueListHelper.getValueListInfo(undefined, propertyPath, undefined, metaModel);\n\t\treturn valueLists[0];\n\t}\n\n\tasync onTokensChanged(e: UI5Event<{ tokens: TokenDefinition[] }, EasyFilterBarContainer>): Promise<void> {\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\tconst tokens = e.getParameter(\"tokens\");\n\t\tconst clearEditFilter = tokens.some((tokenDefinition) => tokenDefinition.key === \"$editState\");\n\t\tawait filterBarAPI._clearFilterValuesWithOptions(filterBar, { clearEditFilter });\n\t\tthis.formateDataTypes(tokens);\n\n\t\tfor (const token of tokens) {\n\t\t\tif (token.key === \"$editState\") {\n\t\t\t\t// convert the $editState filter condition\n\t\t\t\tfor (const tokenKeySpecification of token.keySpecificSelectedValues) {\n\t\t\t\t\tawait FilterUtils.addFilterValues(\n\t\t\t\t\t\tfilterBarAPI.content,\n\t\t\t\t\t\ttoken.key,\n\t\t\t\t\t\t\"DRAFT_EDIT_STATE\",\n\t\t\t\t\t\ttokenKeySpecification.selectedValues\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//BT and NB case to be handled in future, currently its crashing\n\t\t\t\tfor (const tokenKeySpecification of token.keySpecificSelectedValues) {\n\t\t\t\t\tconst { operator, selectedValues } = tokenKeySpecification;\n\t\t\t\t\tawait FilterUtils.addFilterValues(filterBarAPI.content, token.key, operator, selectedValues);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tawait filterBarAPI.triggerSearch();\n\t}\n\n\t//We need the below function so that the date objects and dateTimeOffsets would be converted to string type as the date object is not a valid type in V4 world\n\tformateDataTypes(tokens: TokenDefinition[]): void {\n\t\tconst dateType = new Date1(),\n\t\t\tdateTimeOffsetType = new DateTimeOffset(undefined, { V4: true }),\n\t\t\ttimeOfDayType = new TimeOfDay();\n\t\ttokens.forEach((token) => {\n\t\t\tconst edmType = this.filterBarMetadata.find((data) => data.name === token.key)?.dataType;\n\t\t\ttoken.keySpecificSelectedValues.forEach((keySpecificSelectedValue) => {\n\t\t\t\tlet requiredConverter: ODataType;\n\t\t\t\tswitch (edmType) {\n\t\t\t\t\tcase \"Edm.Date\":\n\t\t\t\t\t\trequiredConverter = dateType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Edm.TimeOfDay\":\n\t\t\t\t\t\trequiredConverter = timeOfDayType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Edm.DateTimeOffset\":\n\t\t\t\t\t\trequiredConverter = dateTimeOffsetType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tkeySpecificSelectedValue.selectedValues.forEach((value, idx) => {\n\t\t\t\t\tkeySpecificSelectedValue.selectedValues[idx] = requiredConverter.parseValue(value, \"object\");\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync showValueHelpForKey(key: string, _currentValue: unknown, fnCallback: Function): Promise<void> {\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\tawait filterBarAPI.showFilterField(key);\n\t\tfilterBarAPI.openValueHelpForFilterField(key, undefined, fnCallback);\n\t}\n\n\tonBeforeQueryProcessing(): void {\n\t\tconst uiModel = this.getModel(\"ui\") as JSONModel;\n\t\tBusyLocker.lock(uiModel);\n\t}\n\n\tonAfterQueryProcessing(): void {\n\t\tconst uiModel = this.getModel(\"ui\") as JSONModel;\n\t\tBusyLocker.unlock(uiModel);\n\t}\n\n\tasync onClearFilters(): Promise<void> {\n\t\t// Empty input: clear the filters and refresh the list\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\tawait filterBarAPI._clearFilterValuesWithOptions(filterBar);\n\t\tawait filterBarAPI.triggerSearch();\n\t}\n\n\tonQueryChanged(): void {\n\t\tconst filterBar = UI5Element.getElementById(this.filterBar) as FilterBar;\n\t\tfilterBar.fireFiltersChanged({ conditionsBased: true });\n\t}\n\n\tcreateContent(): EasyFilterBarContainer {\n\t\treturn (\n\t\t\t<EasyFilterBarContainer\n\t\t\t\tcontextPath={this.getOwnerContextPath()}\n\t\t\t\tappId={this.getApplicationId()}\n\t\t\t\tfilterBarMetadata={this.filterBarMetadata}\n\t\t\t\teasyFilterLib={this.easyFilterPath}\n\t\t\t\tshowValueHelp={(e): void => {\n\t\t\t\t\tthis.showValueHelpForKey(e.getParameter(\"key\"), e.getParameter(\"values\"), (selectedConditions: ConditionObject[]) => {\n\t\t\t\t\t\tconst tokenSelectedValues: TokenSelectedValuesDefinition[] = selectedConditions.map((condition) => {\n\t\t\t\t\t\t\tif (condition.operator === FilterOperator.BT || condition.operator === FilterOperator.NB) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: condition.operator,\n\t\t\t\t\t\t\t\t\tselectedValues: condition.values as BetweenSelectedValues\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperator: condition.operator as Exclude<FilterOperator, FilterOperator.BT | FilterOperator.NB>,\n\t\t\t\t\t\t\t\t\tselectedValues: condition.values as string[] | boolean[] | number[] | Date[]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\te.getParameter(\"resolve\")(tokenSelectedValues);\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tdataFetcher={this.resolveTokenValuesForField.bind(this)}\n\t\t\t\trecommendedValues={this.recommendedQueries}\n\t\t\t\tqueryChanged={this.onQueryChanged.bind(this)}\n\t\t\t\ttokensChanged={this.onTokensChanged.bind(this)}\n\t\t\t\tbeforeQueryProcessing={this.onBeforeQueryProcessing.bind(this)}\n\t\t\t\tafterQueryProcessing={this.onAfterQueryProcessing.bind(this)}\n\t\t\t\tclearFilters={this.onClearFilters.bind(this)}\n\t\t\t/>\n\t\t) as EasyFilterBarContainer;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}