{"version":3,"file":"EasyFillDialog.js","names":["EasyFillDialog","_dec","defineUI5Class","_dec2","defineReference","_dec3","property","type","_class","_class2","_BuildingBlock","idOrProps","props","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","_ownerComponent","state","newValues","hasValues","content","createContent","onConfirm","async","_e","mainPageBindingContext","getPageController","getView","getBindingContext","allProps","_bindingContext","getObject","newValuesKey","startsWith","setProperty","push","applyUpdatesForChange","getPath","Promise","all","close","view","propertyPathForUpdate","metaModel","getModel","getMetaModel","metaContext","getMetaContext","dataModelObject","MetaModelConverter","getInvolvedDataModelObjects","targetContext","sideEffectsPromises","sideEffectsService","CollaborationUtils","getAppComponent","getSideEffectsService","targetMetaPath","getMetaPath","relativeMetaPathForUpdate","replace","slice","requestSideEffects","fieldGroupIds","computeFieldGroupIds","targetEntityType","fullyQualifiedName","targetObject","length","pageController","getController","sideEffectsMapForFieldGroup","_sideEffects","getSideEffectsMapForFieldGroups","Object","keys","forEach","sideEffectName","sideEffect","sideEffects","context","undefined","err","Log","error","onCancel","open","_getFieldMapping","definitionPage","fieldMapping","pageTarget","getTarget","entityType","_type","targetType","entityProperty","entityProperties","isImmutable","isComputed","annotations","UI","Hidden","valueOf","name","description","getLabel","dataType","generateListBinding","path","model","transientListBinding","bindList","$$updateGroupId","refreshInternal","onEasyEditPressed","metaPath","getOwnerPageDefinition","easyFillLibrary","__ui5_require_async","odataModel","create","aiCallResult","extractFieldValuesFromText","enteredText","success","updatedFields","data","editableFields","getEditableFields","hasIncorrectValues","$reviewArea","current","removeAllItems","reviewAreaForm","_jsx","Form","editable","class","visible","bindState","children","layout","ColumnLayout","columnsM","columnsL","columnsXL","labelCellsLarge","emptyCellsLarge","incorrectValuesForm","previousValuesFormContainer","FormContainer","title","CoreTitle","text","getTranslatedText","previousValuesFormContainer2","newValuesFormContainer","newValuesFormContainer2","uiContext","createBindingContext","setBindingContext","addFormContainer","incorrectValues","setModel","updatedField","isEditable","valueBinding","getValueBinding","getDataModelObjectForMetaPath","getOwnerContextPath","transformRecursively","modelName","addFormElement","FormElement","label","Field","contextPath","readOnly","$vBox","createReference","addItem","ScrollContainer","vertical","VBox","ref","items","Title","easyEditDescription","InvisibleText","Dialog","resizable","horizontalScrolling","verticalScrolling","contentWidth","contentHeight","escapeHandler","afterClose","destroy","_jsxs","FlexBox","direction","FlexDirection","Row","renderType","width","height","id","createId","Column","FormattedText","htmlText","TextArea","value","rows","growing","growingMaxLines","ariaLabelledBy","Button","icon","enabled","press","bind","layoutData","FlexItemData","alignSelf","EasyFillPlaceholder","footer","OverflowToolbar","ToolbarSpacer","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./EasyFillDialog.tsx"],"sourcesContent":["import type { EntityType, Property } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression, PathInModelExpression } from \"sap/fe/base/BindingToolkit\";\nimport { transformRecursively } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { createReference, defineReference, defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport EasyFillPlaceholder from \"sap/fe/controls/easyFill/EasyFillPlaceholder\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport type { FieldSideEffectDictionary } from \"sap/fe/core/controllerextensions/SideEffects\";\nimport { CollaborationUtils } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { DefinitionPage } from \"sap/fe/core/definition/FEDefinition\";\nimport { getLabel, isComputed, isImmutable } from \"sap/fe/core/templating/PropertyHelper\";\nimport Field from \"sap/fe/macros/Field\";\nimport { getValueBinding } from \"sap/fe/macros/field/FieldTemplating\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport ScrollContainer from \"sap/m/ScrollContainer\";\nimport TextArea from \"sap/m/TextArea\";\nimport Title from \"sap/m/Title\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport { FlexDirection } from \"sap/m/library\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport CoreTitle from \"sap/ui/core/Title\";\nimport ColumnLayout from \"sap/ui/layout/form/ColumnLayout\";\nimport Form from \"sap/ui/layout/form/Form\";\nimport FormContainer from \"sap/ui/layout/form/FormContainer\";\nimport FormElement from \"sap/ui/layout/form/FormElement\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { FieldMetadata } from \"ux/eng/fioriai/reuse/easyfill/EasyFill\";\n\n@defineUI5Class(\"sap.fe.macros.ai.EasyFillDialog\")\nexport default class EasyFillDialog extends BuildingBlock<\n\tDialog,\n\t{\n\t\tenteredText: string;\n\t\tincorrectValues: Record<string, unknown>;\n\t\tnewValues: Record<string, unknown>;\n\t\thasValues: boolean;\n\t\thasIncorrectValues: boolean;\n\t}\n> {\n\t@defineReference()\n\t$reviewArea!: Ref<FlexBox>;\n\n\t@property({ type: \"Function\" })\n\tgetEditableFields?: Function;\n\n\tprivate _bindingContext?: Context;\n\n\tconstructor(idOrProps: string | PropertiesOf<EasyFillDialog>, props?: PropertiesOf<EasyFillDialog>) {\n\t\tsuper(idOrProps, props);\n\t}\n\n\tonMetadataAvailable(_ownerComponent: TemplateComponent): void {\n\t\tsuper.onMetadataAvailable(_ownerComponent);\n\t\tthis.state.newValues = {};\n\t\tthis.state.hasValues = false;\n\t\tthis.content = this.createContent();\n\t}\n\n\tasync onConfirm(_e: Button$PressEvent): Promise<void> {\n\t\t// Validate the data handling\n\t\tconst mainPageBindingContext = this.getPageController().getView()?.getBindingContext();\n\t\tconst allProps = [];\n\t\tconst newValues = this._bindingContext?.getObject() ?? this.state.newValues;\n\t\tfor (const newValuesKey in newValues) {\n\t\t\tif (newValuesKey !== \"__bindingInfo\" && !newValuesKey.startsWith(\"@$\")) {\n\t\t\t\tif (typeof newValues[newValuesKey] !== \"object\") {\n\t\t\t\t\tmainPageBindingContext?.setProperty(newValuesKey, newValues[newValuesKey]);\n\t\t\t\t\tallProps.push(\n\t\t\t\t\t\tthis.applyUpdatesForChange(this.getPageController().getView(), mainPageBindingContext.getPath(newValuesKey))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tawait Promise.all(allProps);\n\n\t\tthis.content?.close();\n\t}\n\n\tasync applyUpdatesForChange(view: FEView, propertyPathForUpdate: string): Promise<void> {\n\t\tconst metaModel = view.getModel().getMetaModel();\n\t\tconst metaContext = metaModel.getMetaContext(propertyPathForUpdate);\n\t\tconst dataModelObject = MetaModelConverter.getInvolvedDataModelObjects<Property>(metaContext);\n\t\tconst targetContext = view.getBindingContext();\n\t\ttry {\n\t\t\tconst sideEffectsPromises: Promise<unknown>[] = [];\n\t\t\tconst sideEffectsService = CollaborationUtils.getAppComponent(view).getSideEffectsService();\n\n\t\t\t// We have a target context, so we can retrieve the updated property\n\t\t\tconst targetMetaPath = metaModel.getMetaPath(targetContext.getPath());\n\t\t\tconst relativeMetaPathForUpdate = metaModel.getMetaPath(propertyPathForUpdate).replace(targetMetaPath, \"\").slice(1);\n\t\t\tsideEffectsPromises.push(sideEffectsService.requestSideEffects([relativeMetaPathForUpdate], targetContext, \"$auto\"));\n\n\t\t\t// Get the fieldGroupIds corresponding to pathForUpdate\n\t\t\tconst fieldGroupIds = sideEffectsService.computeFieldGroupIds(\n\t\t\t\tdataModelObject.targetEntityType.fullyQualifiedName,\n\t\t\t\tdataModelObject.targetObject!.fullyQualifiedName\n\t\t\t);\n\n\t\t\t// Execute the side effects for the fieldGroupIds\n\t\t\tif (fieldGroupIds.length) {\n\t\t\t\tconst pageController = view.getController();\n\t\t\t\tconst sideEffectsMapForFieldGroup = pageController._sideEffects.getSideEffectsMapForFieldGroups(\n\t\t\t\t\tfieldGroupIds,\n\t\t\t\t\ttargetContext\n\t\t\t\t) as FieldSideEffectDictionary;\n\t\t\t\tObject.keys(sideEffectsMapForFieldGroup).forEach((sideEffectName) => {\n\t\t\t\t\tconst sideEffect = sideEffectsMapForFieldGroup[sideEffectName];\n\t\t\t\t\tsideEffectsPromises.push(\n\t\t\t\t\t\tpageController._sideEffects.requestSideEffects(sideEffect.sideEffects, sideEffect.context, \"$auto\", undefined, true)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tawait Promise.all(sideEffectsPromises);\n\t\t} catch (err) {\n\t\t\tLog.error(\"Failed to update data after change:\" + err);\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tonCancel(): void {\n\t\tthis.content?.close();\n\t}\n\n\topen(): void {\n\t\tthis.content?.open();\n\t}\n\n\t_getFieldMapping(definitionPage: DefinitionPage | undefined): FieldMetadata {\n\t\tconst fieldMapping: FieldMetadata = {};\n\t\tif (definitionPage) {\n\t\t\tconst pageTarget = definitionPage.getMetaPath().getTarget();\n\t\t\tlet entityType: EntityType | undefined;\n\t\t\tswitch (pageTarget._type) {\n\t\t\t\tcase \"EntitySet\":\n\t\t\t\tcase \"Singleton\":\n\t\t\t\t\tentityType = pageTarget.entityType;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"NavigationProperty\":\n\t\t\t\t\tentityType = pageTarget.targetType;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (entityType !== undefined) {\n\t\t\t\tfor (const entityProperty of entityType.entityProperties) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isImmutable(entityProperty) &&\n\t\t\t\t\t\t!isComputed(entityProperty) &&\n\t\t\t\t\t\tentityProperty.annotations.UI?.Hidden?.valueOf() !== true\n\t\t\t\t\t) {\n\t\t\t\t\t\t// If not immutable, computed or hidden add to the field mapping\n\t\t\t\t\t\tfieldMapping[entityProperty.name] = {\n\t\t\t\t\t\t\tdescription: getLabel(entityProperty) ?? entityProperty.name,\n\t\t\t\t\t\t\tdataType: entityProperty.type\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn fieldMapping;\n\t}\n\n\tprivate generateListBinding(path: string, model: ODataModel): ODataListBinding {\n\t\tconst transientListBinding = model.bindList(\n\t\t\tpath,\n\t\t\tundefined,\n\n\t\t\t[],\n\t\t\t[],\n\t\t\t{\n\t\t\t\t$$updateGroupId: \"submitLater\"\n\t\t\t}\n\t\t);\n\t\ttransientListBinding.refreshInternal = (): void => {\n\t\t\t/* */\n\t\t};\n\t\treturn transientListBinding;\n\t}\n\n\tasync onEasyEditPressed(): Promise<void> {\n\t\t// Call the AI service\n\t\t// Process through chat completion API\n\t\tconst metaPath = this.getOwnerPageDefinition();\n\t\tconst fieldMapping = this._getFieldMapping(metaPath);\n\t\tconst easyFillLibrary = await import(\"ux/eng/fioriai/reuse/easyfill/EasyFill\");\n\t\tconst odataModel = this.getModel() as ODataModel;\n\t\tconst transientListBinding = this.generateListBinding(\n\t\t\todataModel.getMetaModel().getMetaPath(this.getPageController().getView()?.getBindingContext()?.getPath()),\n\t\t\tthis.getModel() as ODataModel\n\t\t);\n\t\tthis._bindingContext = transientListBinding.create({}, true);\n\n\t\tconst aiCallResult = await easyFillLibrary.extractFieldValuesFromText(this.state.enteredText, fieldMapping);\n\t\tif (aiCallResult.success) {\n\t\t\tconst updatedFields = aiCallResult.data;\n\t\t\tconst editableFields = (await this.getEditableFields?.()) ?? {};\n\t\t\tthis.state.hasValues = false;\n\t\t\tthis.state.hasIncorrectValues = false;\n\t\t\tthis.$reviewArea.current?.removeAllItems();\n\t\t\tconst reviewAreaForm = (\n\t\t\t\t<Form editable={true} class={\"sapUiSmallMarginTopBottom\"} visible={this.bindState(\"hasValues\")}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tlayout: <ColumnLayout columnsM={2} columnsL={2} columnsXL={2} labelCellsLarge={1} emptyCellsLarge={1} />\n\t\t\t\t\t}}\n\t\t\t\t</Form>\n\t\t\t) as Form;\n\t\t\tconst incorrectValuesForm = (\n\t\t\t\t<Form editable={false} class={\"sapUiSmallMarginTopBottom\"} visible={this.bindState(\"hasIncorrectValues\")}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tlayout: <ColumnLayout columnsM={2} columnsL={2} columnsXL={2} labelCellsLarge={1} emptyCellsLarge={1} />\n\t\t\t\t\t}}\n\t\t\t\t</Form>\n\t\t\t);\n\t\t\tconst previousValuesFormContainer = (\n\t\t\t\t<FormContainer>{{ title: <CoreTitle text={this.getTranslatedText(\"C_EASYEDIT_PREVIOUS_VALUES\")} /> }}</FormContainer>\n\t\t\t) as FormContainer;\n\t\t\tconst previousValuesFormContainer2 = (\n\t\t\t\t<FormContainer>{{ title: <CoreTitle text={this.getTranslatedText(\"C_EASYEDIT_PREVIOUS_VALUES\")} /> }}</FormContainer>\n\t\t\t) as FormContainer;\n\n\t\t\tconst newValuesFormContainer = (\n\t\t\t\t<FormContainer>{{ title: <CoreTitle text={this.getTranslatedText(\"C_EASYEDIT_NEW_VALUES\")} /> }}</FormContainer>\n\t\t\t) as FormContainer;\n\t\t\tconst newValuesFormContainer2 = (\n\t\t\t\t<FormContainer>{{ title: <CoreTitle text={this.getTranslatedText(\"C_EASYEDIT_NEW_VALUES\")} /> }}</FormContainer>\n\t\t\t) as FormContainer;\n\t\t\tconst uiContext = this.getPageController().getModel(\"ui\")?.createBindingContext(\"/easyEditDialog\");\n\n\t\t\tthis.getPageController().getModel(\"ui\").setProperty(\"/easyEditDialog\", {});\n\t\t\tuiContext.setProperty(\"isEditable\", true);\n\t\t\tnewValuesFormContainer.setBindingContext(uiContext, \"ui\");\n\n\t\t\treviewAreaForm.addFormContainer(previousValuesFormContainer);\n\t\t\treviewAreaForm.addFormContainer(newValuesFormContainer);\n\t\t\tincorrectValuesForm.addFormContainer(previousValuesFormContainer2);\n\t\t\tincorrectValuesForm.addFormContainer(newValuesFormContainer2);\n\t\t\tconst newValues: Record<string, unknown> = {};\n\t\t\tconst incorrectValues: Record<string, unknown> = {};\n\t\t\tnewValuesFormContainer.setBindingContext(this._bindingContext);\n\t\t\tnewValuesFormContainer2.setBindingContext(this.getModel(\"$componentState\")?.createBindingContext(\"/incorrectValues\"));\n\t\t\tnewValuesFormContainer2.setModel(this.getModel(\"$componentState\"));\n\t\t\tfor (const updatedField in updatedFields) {\n\t\t\t\tif (editableFields[updatedField] && editableFields[updatedField].isEditable === true) {\n\t\t\t\t\tnewValues[updatedField] = updatedFields[updatedField];\n\t\t\t\t\tthis._bindingContext.setProperty(updatedField, updatedFields[updatedField]);\n\t\t\t\t\tthis.state.hasValues = true;\n\t\t\t\t\tlet valueBinding = getValueBinding(\n\t\t\t\t\t\tthis.getDataModelObjectForMetaPath(updatedField, this.getOwnerContextPath())!,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) as unknown as BindingToolkitExpression<unknown>;\n\t\t\t\t\tvalueBinding = transformRecursively(valueBinding, \"PathInModel\", (path: PathInModelExpression<unknown>) => {\n\t\t\t\t\t\tpath.modelName = \"$componentState\";\n\t\t\t\t\t\tpath.path = \"/newValues/\" + path.path;\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t});\n\t\t\t\t\tpreviousValuesFormContainer.addFormElement(\n\t\t\t\t\t\t<FormElement label={fieldMapping[updatedField].description}>\n\t\t\t\t\t\t\t<Field metaPath={updatedField} contextPath={this.getOwnerContextPath()} readOnly={true} />\n\t\t\t\t\t\t</FormElement>\n\t\t\t\t\t);\n\n\t\t\t\t\tnewValuesFormContainer.addFormElement(\n\t\t\t\t\t\t<FormElement label={fieldMapping[updatedField].description}>\n\t\t\t\t\t\t\t<Field metaPath={updatedField} contextPath={this.getOwnerContextPath()} />\n\t\t\t\t\t\t</FormElement>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tincorrectValues[updatedField] = updatedFields[updatedField];\n\t\t\t\t\tthis.state.hasIncorrectValues = true;\n\t\t\t\t\tpreviousValuesFormContainer2.addFormElement(\n\t\t\t\t\t\t<FormElement label={fieldMapping[updatedField].description}>\n\t\t\t\t\t\t\t<Field metaPath={updatedField} contextPath={this.getOwnerContextPath()} readOnly={true} />\n\t\t\t\t\t\t</FormElement>\n\t\t\t\t\t);\n\t\t\t\t\tnewValuesFormContainer2.addFormElement(\n\t\t\t\t\t\t<FormElement label={fieldMapping[updatedField].description}>\n\t\t\t\t\t\t\t<Field metaPath={updatedField} contextPath={this.getOwnerContextPath()} readOnly={true} />\n\t\t\t\t\t\t</FormElement>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst $vBox = createReference<VBox>();\n\t\t\tthis.$reviewArea.current?.addItem(\n\t\t\t\t<ScrollContainer vertical={true} class={\"sapUiContentPadding\"}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontent: (\n\t\t\t\t\t\t\t<VBox ref={$vBox}>\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_EASYEDIT_FILLED_FIELDS\")}\n\t\t\t\t\t\t\t\t\t\t\tvisible={this.bindState(\"hasValues\")}\n\t\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t\treviewAreaForm,\n\t\t\t\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_EASYEDIT_INCORRECT_FIELDS\")}\n\t\t\t\t\t\t\t\t\t\t\tclass={\"sapUiSmallMarginTopBottom\"}\n\t\t\t\t\t\t\t\t\t\t\tvisible={this.bindState(\"hasIncorrectValues\")}\n\t\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t\tincorrectValuesForm\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</ScrollContainer>\n\t\t\t);\n\t\t\t$vBox.current?.setBindingContext(this.getPageController().getView()?.getBindingContext());\n\t\t\t$vBox.current?.setModel(this.getPageController().getModel());\n\t\t\t$vBox.current?.setModel(this.getPageController().getModel(\"ui\"), \"ui\");\n\n\t\t\tthis.state.newValues = newValues;\n\t\t\tthis.state.incorrectValues = incorrectValues;\n\t\t}\n\t}\n\n\tcreateContent(): Dialog {\n\t\tconst easyEditDescription = <InvisibleText text={this.getTranslatedText(\"C_EASYEDIT_DIALOG_DESCRIPTION\")} />;\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\ttitle={this.getTranslatedText(\"C_EASYEDIT_DIALOG_TITLE\")}\n\t\t\t\tresizable={true}\n\t\t\t\thorizontalScrolling={false}\n\t\t\t\tverticalScrolling={false}\n\t\t\t\tcontentWidth=\"1100px\"\n\t\t\t\tcontentHeight={\"800px\"}\n\t\t\t\tescapeHandler={(): void => {\n\t\t\t\t\tthis.onCancel();\n\t\t\t\t}}\n\t\t\t\tafterClose={(): void => {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<FlexBox direction={FlexDirection.Row} renderType={\"Bare\"} width={\"100%\"} height={\"100%\"}>\n\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\twidth={\"40%\"}\n\t\t\t\t\t\t\t\tid={this.createId(\"inputArea\")}\n\t\t\t\t\t\t\t\tdirection={FlexDirection.Column}\n\t\t\t\t\t\t\t\tclass={\"sapUiContentPadding\"}\n\t\t\t\t\t\t\t\trenderType={\"Bare\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FormattedText\n\t\t\t\t\t\t\t\t\thtmlText={this.getTranslatedText(\"C_EASYEDIT_DIALOG_DESCRIPTION\")}\n\t\t\t\t\t\t\t\t\tclass={\"sapUiMarginEnd\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{easyEditDescription}\n\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\tvalue={this.bindState(\"enteredText\")}\n\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\trows={20}\n\t\t\t\t\t\t\t\t\tgrowing={true}\n\t\t\t\t\t\t\t\t\tgrowingMaxLines={30}\n\t\t\t\t\t\t\t\t\tariaLabelledBy={easyEditDescription}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_EASYEDIT_BUTTON\")}\n\t\t\t\t\t\t\t\t\ticon={\"sap-icon://ai\"}\n\t\t\t\t\t\t\t\t\tenabled={true}\n\t\t\t\t\t\t\t\t\tpress={this.onEasyEditPressed.bind(this)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{{ layoutData: <FlexItemData alignSelf=\"End\" /> }}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\tid={this.createId(\"reviewArea\")}\n\t\t\t\t\t\t\t\tref={this.$reviewArea}\n\t\t\t\t\t\t\t\twidth={\"60%\"}\n\t\t\t\t\t\t\t\trenderType={\"Bare\"}\n\t\t\t\t\t\t\t\tdirection={FlexDirection.Column}\n\t\t\t\t\t\t\t\tclass={\"sapFeEasyFillReviewArea\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EasyFillPlaceholder />\n\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t),\n\t\t\t\t\tfooter: (\n\t\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_EASYEDIT_DIALOG_SAVE\")}\n\t\t\t\t\t\t\t\ttype=\"Emphasized\"\n\t\t\t\t\t\t\t\tenabled={this.bindState(\"hasValues\")}\n\t\t\t\t\t\t\t\tpress={this.onConfirm.bind(this)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_EASYEDIT_DIALOG_CANCEL\")}\n\t\t\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\t\t\tpress={this.onCancel.bind(this)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}