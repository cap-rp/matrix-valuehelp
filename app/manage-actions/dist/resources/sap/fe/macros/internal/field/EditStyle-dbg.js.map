{"version":3,"names":["EditStyle","getLayoutData","field","layoutData","collaborationEnabled","_jsx","FlexItemData","growFactor","getCollaborationAvatar","collaborationHasActivityExpression","compileExpression","collaborationExpression","collaborationInitialsExpression","UIFormatter","getCollaborationExpression","dataModelPath","CollaborationFormatters","getCollaborationActivityInitials","collaborationColorExpression","getCollaborationActivityColor","Avatar","visible","initials","displaySize","customDisplaySize","customFontSize","backgroundColor","press","eventHandlers","showCollaborationEditUser","children","dependents","EventDelegateHook","stopTapPropagation","getDateTimePickerGeneric","type","dataModelObjectPath","MetaModelConverter","getInvolvedDataModelObjects","metaPath","contextPath","textAlign","getTextAlignment","formatOptions","editModeAsObject","dateTimePickerProperties","id","editStyleId","width","editable","editableExpression","enabled","enabledExpression","required","requiredExpression","ariaLabelledBy","value","valueBindingExpression","fieldGroupIds","showTimezone","minDate","minDateExpression","undefined","maxDate","maxDateExpression","change","liveChange","validateFieldGroup","getDateTimePicker","dateTimePickerType","dateTimePicker","DatePicker","customData","CustomData","dataSourcePath","DateTimePicker","TimePicker","getInputTemplate","Input","placeholder","editStylePlaceholder","description","staticDescription","editStyle","maxLength","textMaxLength","showAsRadioButton","radioButtonConfigured","property","annotations","Common","ValueListWithFixedValues","hasValueHelpWithFixedValues","ValueListShowValuesImmediately","valueOf","fieldEditStyle","valueListParameterInOut","ValueList","Parameters","find","valueListParameter","$Type","LocalDataProperty","name","ValueListRelevantQualifiers","getRadioButtonTemplate","fixedValuesPath","CollectionPath","valueListKeyPath","pathInModel","ValueListProperty","valueListDescriptionPath","valueHelpKeyTextAnnotationPath","targetEntityType","resolvePath","entityType","keys","Text","path","RadioButtons","radioButtonTextProperty","radioButtonKeyProperty","horizontalLayout","radioButtonsHorizontalLayout","getInputWithValueHelpTemplate","dataFieldDataModelObjectPath","delegate","FieldHelper","computeFieldBaseDelegate","retrieveTextFromValueList","display","getFieldDisplay","displayMode","hasMultilineAnnotation","UI","MultiLineText","multipleLines","getMultipleLinesForDataField","label","computeLabelText","context","optionalContentEdit","TextArea","rows","textLinesEdit","growing","textMaxLines","growingMaxLines","optionalLayoutData","Field","valueState","editMode","computedEditMode","additionalValue","textBindingExpression","valueHelp","valueHelpId","contentEdit","getCheckBoxTemplate","CheckBox","selected","select","getTextAreaTemplate","showExceededText","TextAreaEx","cols","getRatingIndicatorTemplate","tooltip","ratingIndicatorTooltip","RatingIndicator","maxValue","ratingIndicatorTargetValue","iconSize","class","getTemplateWithWrapper","FieldEditMode","Display","_jsxs","CollaborationHBox","alignItems","getTemplate","getInputMaskTemplate","optionalMaskInputRules","mask","maskRule","rule","push","MaskInputRule","maskFormatSymbol","symbol","regex","MaskInput","placeholderSymbol","rules","innerFieldContent"],"sourceRoot":".","sources":["EditStyle.tsx"],"sourcesContent":["import type { DataFieldTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport EventDelegateHook from \"sap/fe/base/EventDelegateHook\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport * as CollaborationFormatters from \"sap/fe/core/formatters/CollaborationFormatter\";\nimport { hasValueHelpWithFixedValues } from \"sap/fe/core/templating/PropertyHelper\";\nimport * as UIFormatter from \"sap/fe/core/templating/UIFormatters\";\nimport CollaborationHBox from \"sap/fe/macros/controls/CollaborationHBox\";\nimport RadioButtons from \"sap/fe/macros/controls/RadioButtons\";\nimport { getMultipleLinesForDataField, getTextAlignment } from \"sap/fe/macros/field/FieldTemplating\";\nimport type { FieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport Avatar from \"sap/m/Avatar\";\nimport type { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport DatePicker from \"sap/m/DatePicker\";\nimport DateTimePicker from \"sap/m/DateTimePicker\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport Input from \"sap/m/Input\";\nimport type { InputBase$ChangeEvent } from \"sap/m/InputBase\";\nimport type { MaskInput$LiveChangeEvent } from \"sap/m/MaskInput\";\nimport MaskInput from \"sap/m/MaskInput\";\nimport MaskInputRule from \"sap/m/MaskInputRule\";\nimport type { RatingIndicator$ChangeEvent } from \"sap/m/RatingIndicator\";\nimport RatingIndicator from \"sap/m/RatingIndicator\";\nimport TextArea from \"sap/m/TextArea\";\nimport TimePicker from \"sap/m/TimePicker\";\nimport type Event from \"sap/ui/base/Event\";\nimport type { default as Control, Control$ValidateFieldGroupEvent, default as Control1 } from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type { Field$ChangeEvent } from \"sap/ui/mdc/Field\";\nimport Field from \"sap/ui/mdc/Field\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type { MetaModelType } from \"../../../../../../../../types/metamodel_types\";\nimport FieldHelper from \"../../field/FieldHelper\";\nimport TextAreaEx from \"../../field/TextAreaEx\";\n\nconst EditStyle = {\n\t/**\n\t * An internal helper to retrieve the reused layout data.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLayoutData(field: FieldBlockProperties): string {\n\t\tlet layoutData = \"\";\n\t\tif (field.collaborationEnabled) {\n\t\t\tlayoutData = <FlexItemData growFactor=\"9\" />;\n\t\t}\n\t\treturn layoutData;\n\t},\n\n\t/**\n\t * Generates the avatar control next a field locked.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the avatar\n\t */\n\tgetCollaborationAvatar(field: FieldBlockProperties): string {\n\t\tconst collaborationHasActivityExpression = compileExpression(field.collaborationExpression);\n\t\tconst collaborationInitialsExpression = compileExpression(\n\t\t\tUIFormatter.getCollaborationExpression(field.dataModelPath, CollaborationFormatters.getCollaborationActivityInitials)\n\t\t);\n\t\tconst collaborationColorExpression = compileExpression(\n\t\t\tUIFormatter.getCollaborationExpression(field.dataModelPath, CollaborationFormatters.getCollaborationActivityColor)\n\t\t);\n\n\t\treturn (\n\t\t\t<Avatar\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tvisible={collaborationHasActivityExpression}\n\t\t\t\tinitials={collaborationInitialsExpression}\n\t\t\t\tdisplaySize=\"Custom\"\n\t\t\t\tcustomDisplaySize=\"1.5rem\"\n\t\t\t\tcustomFontSize=\"0.8rem\"\n\t\t\t\tbackgroundColor={collaborationColorExpression}\n\t\t\t\tpress={field.eventHandlers.showCollaborationEditUser as unknown as ((oEvent: Event) => void) | undefined}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdependents: <EventDelegateHook stopTapPropagation={true} />\n\t\t\t\t}}\n\t\t\t</Avatar>\n\t\t);\n\t},\n\n\t/**\n\t * Generates a template for one of the pickers reference in the type.\n\t * @param field Reference to the current field instance\n\t * @param type Reference to one of the edit style picker types\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDateTimePickerGeneric(field: FieldBlockProperties, type: \"DatePicker\" | \"DateTimePicker\" | \"TimePicker\"): string {\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(field.metaPath, field.contextPath);\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\n\t\tconst dateTimePickerProperties = {\n\t\t\t\"core:require\": \"{Field: 'sap/fe/macros/Field'}\",\n\t\t\tid: field.editStyleId,\n\t\t\twidth: \"100%\",\n\t\t\teditable: field.editableExpression,\n\t\t\tenabled: field.enabledExpression,\n\t\t\trequired: field.requiredExpression,\n\t\t\ttextAlign: textAlign,\n\t\t\tariaLabelledBy: field.ariaLabelledBy as unknown as Array<Control | string>,\n\t\t\tvalue: field.valueBindingExpression,\n\t\t\tfieldGroupIds: field.fieldGroupIds,\n\t\t\tshowTimezone: field.showTimezone,\n\t\t\tminDate: type === \"DateTimePicker\" || type === \"DatePicker\" ? field.minDateExpression : undefined,\n\t\t\tmaxDate: type === \"DateTimePicker\" || type === \"DatePicker\" ? field.maxDateExpression : undefined,\n\t\t\tchange:\n\t\t\t\ttype === \"DateTimePicker\"\n\t\t\t\t\t? ((field.change || field.eventHandlers.change) as unknown as (oEvent: InputBase$ChangeEvent) => void)\n\t\t\t\t\t: (field.eventHandlers.change as unknown as (oEvent: InputBase$ChangeEvent) => void),\n\t\t\tliveChange: field.eventHandlers.liveChange,\n\t\t\tvalidateFieldGroup: field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void\n\t\t};\n\n\t\tfunction getDateTimePicker(dateTimePickerType: string): string {\n\t\t\tlet dateTimePicker;\n\t\t\tswitch (dateTimePickerType) {\n\t\t\t\tcase \"DatePicker\":\n\t\t\t\t\tdateTimePicker = (\n\t\t\t\t\t\t<DatePicker {...dateTimePickerProperties}>\n\t\t\t\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DateTimePicker\":\n\t\t\t\t\tdateTimePicker = (\n\t\t\t\t\t\t<DateTimePicker {...dateTimePickerProperties}>\n\t\t\t\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t\t\t\t</DateTimePicker>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"TimePicker\":\n\t\t\t\t\tdateTimePicker = (\n\t\t\t\t\t\t<TimePicker {...dateTimePickerProperties}>\n\t\t\t\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t\t\t\t</TimePicker>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn dateTimePicker;\n\t\t}\n\n\t\treturn getDateTimePicker(type);\n\t},\n\n\t/**\n\t * Generates the Input template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetInputTemplate(field: FieldBlockProperties): string {\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(field.metaPath, field.contextPath);\n\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\n\t\treturn (\n\t\t\t<Input\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\twidth=\"100%\"\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tdescription={field.staticDescription}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\trequired={field.requiredExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\ttextAlign={textAlign}\n\t\t\t\ttype={field.editStyle === \"Masked\" ? \"Password\" : undefined}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tmaxLength={field.formatOptions.textMaxLength}\n\t\t\t\tchange={field.eventHandlers.change as (oEvent: InputBase$ChangeEvent) => void}\n\t\t\t\tliveChange={field.eventHandlers.liveChange}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: EditStyle.getLayoutData(field),\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t}}\n\t\t\t</Input>\n\t\t);\n\t},\n\n\t/**\n\t * Returns if a field shall be templated as a radio button group.\n\t * @param field Reference to the current field instance\n\t * @returns The evaluation result\n\t */\n\tshowAsRadioButton(field: FieldBlockProperties): boolean {\n\t\t// Determine if we need to render the field as a radio button group\n\t\t// TODO: Remove the next two lines once UX updated the vocabulary module including the new experimental annotation\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst radioButtonConfigured: boolean =\n\t\t\tfield.property.annotations?.Common?.ValueListWithFixedValues &&\n\t\t\thasValueHelpWithFixedValues(field.property) === true &&\n\t\t\t((field.property.annotations.Common.ValueListWithFixedValues.annotations?.Common?.ValueListShowValuesImmediately &&\n\t\t\t\tfield.property.annotations.Common.ValueListWithFixedValues.annotations?.Common?.ValueListShowValuesImmediately.valueOf() ===\n\t\t\t\t\ttrue) ||\n\t\t\t\tfield.formatOptions.fieldEditStyle === \"RadioButtons\");\n\n\t\t// Exclude not supported cases\n\t\t// - ValueListParamaterInOut / ...Out must not be empty\n\t\t// - ValueListRelevantQualifiers annotation must not be used\n\t\t// Further cases may not make sense with radio buttons but we do not explicitly exclude them but mention this in documentation.\n\t\t// Check documentation, discuss and decide before adding further restrictions here.\n\t\tconst valueListParameterInOut = field.property?.annotations?.Common?.ValueList?.Parameters.find(\n\t\t\t(valueListParameter) =>\n\t\t\t\t(valueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\tvalueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterOut\") &&\n\t\t\t\tvalueListParameter.LocalDataProperty.value === field.property.name\n\t\t);\n\t\treturn (\n\t\t\tradioButtonConfigured &&\n\t\t\tvalueListParameterInOut !== undefined &&\n\t\t\t!field.property.annotations?.Common?.ValueListRelevantQualifiers\n\t\t);\n\t},\n\n\t/**\n\t * Generates the RadioButton template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the radio button definition\n\t */\n\tgetRadioButtonTemplate(field: FieldBlockProperties): string {\n\t\tconst fixedValuesPath = \"/\" + field.property?.annotations?.Common?.ValueList?.CollectionPath;\n\n\t\tconst valueListParameterInOut = field.property?.annotations?.Common?.ValueList?.Parameters.find(\n\t\t\t(valueListParameter) =>\n\t\t\t\t(valueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\tvalueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterOut\") &&\n\t\t\t\tvalueListParameter.LocalDataProperty.value === field.property.name\n\t\t);\n\n\t\t// we know that a valueListProperty exists because we check this already in showAsRadioButton\n\t\tconst valueListKeyPath = pathInModel(valueListParameterInOut!.ValueListProperty as string);\n\n\t\tlet valueListDescriptionPath;\n\t\tconst valueHelpKeyTextAnnotationPath =\n\t\t\tfield.dataModelPath.targetEntityType.resolvePath(fixedValuesPath).entityType.keys[0].annotations?.Common?.Text?.path;\n\t\tif (valueHelpKeyTextAnnotationPath) {\n\t\t\tvalueListDescriptionPath = pathInModel(valueHelpKeyTextAnnotationPath);\n\t\t} else {\n\t\t\tvalueListDescriptionPath = valueListKeyPath;\n\t\t}\n\n\t\treturn (\n\t\t\t<RadioButtons\n\t\t\t\tid={field.editStyleId}\n\t\t\t\trequiredExpression={field.requiredExpression}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t\tfixedValuesPath={fixedValuesPath as unknown as `{${string}}`}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tenabledExpression={field.enabledExpression}\n\t\t\t\tradioButtonTextProperty={valueListDescriptionPath}\n\t\t\t\tradioButtonKeyProperty={valueListKeyPath}\n\t\t\t\thorizontalLayout={field.formatOptions.radioButtonsHorizontalLayout}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the InputWithValueHelp template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetInputWithValueHelpTemplate(field: FieldBlockProperties): string {\n\t\tconst dataFieldDataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(\n\t\t\tfield.metaPath,\n\t\t\tfield.contextPath\n\t\t);\n\n\t\tconst delegate = FieldHelper.computeFieldBaseDelegate(\n\t\t\t\"sap/fe/macros/field/FieldBaseDelegate\",\n\t\t\tfield.formatOptions.retrieveTextFromValueList as boolean\n\t\t);\n\t\tconst display = UIFormatter.getFieldDisplay(\n\t\t\tfield.property,\n\t\t\tfield.formatOptions.displayMode as string,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\t\tconst hasMultilineAnnotation = !!field.property?.annotations?.UI?.MultiLineText;\n\t\tconst multipleLines = getMultipleLinesForDataField(field, hasMultilineAnnotation);\n\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataFieldDataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>,\n\t\t\ttrue\n\t\t);\n\t\tconst label = FieldHelper.computeLabelText(field as unknown as MetaModelType<DataFieldTypes>, {\n\t\t\tcontext: field.metaPath\n\t\t});\n\n\t\tlet optionalContentEdit = \"\";\n\t\tif (field.property.type === \"Edm.String\" && hasMultilineAnnotation) {\n\t\t\toptionalContentEdit = (\n\t\t\t\t<TextArea\n\t\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\t\trequired={field.requiredExpression}\n\t\t\t\t\trows={field.formatOptions.textLinesEdit}\n\t\t\t\t\tgrowing={(field.formatOptions.textMaxLines as unknown as number) > 0 ? true : undefined}\n\t\t\t\t\tgrowingMaxLines={field.formatOptions.textMaxLines}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tchange={field.eventHandlers.change as unknown as (oEvent: InputBase$ChangeEvent) => void}\n\t\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tlet optionalLayoutData = \"\";\n\t\tif (field.collaborationEnabled === true) {\n\t\t\toptionalLayoutData = <FlexItemData growFactor=\"9\" />;\n\t\t}\n\n\t\tif (this.showAsRadioButton(field) !== true) {\n\t\t\treturn (\n\t\t\t\t<Field\n\t\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\t\tdelegate={delegate}\n\t\t\t\t\tid={field.editStyleId}\n\t\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\t\tvalueState={field.valueState}\n\t\t\t\t\teditMode={field.editMode ?? field.computedEditMode}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\trequired={field.requiredExpression}\n\t\t\t\t\tadditionalValue={field.textBindingExpression}\n\t\t\t\t\tdisplay={display}\n\t\t\t\t\tmultipleLines={multipleLines === false ? undefined : multipleLines}\n\t\t\t\t\tvalueHelp={field.valueHelpId}\n\t\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\t\ttextAlign={textAlign}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control1 | string>}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tchange={field.eventHandlers.change as (oEvent: Field$ChangeEvent) => void}\n\t\t\t\t\tliveChange={field.eventHandlers.liveChange}\n\t\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentEdit: optionalContentEdit,\n\t\t\t\t\t\tlayoutData: optionalLayoutData,\n\t\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t\t}}\n\t\t\t\t</Field>\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.getRadioButtonTemplate(field);\n\t\t}\n\t},\n\n\t/**\n\t * Generates the CheckBox template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetCheckBoxTemplate(field: FieldBlockProperties): string {\n\t\treturn (\n\t\t\t<CheckBox\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tselected={field.valueBindingExpression}\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tselect={field.eventHandlers.change as (oEvent: CheckBox$SelectEvent) => void}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t</CheckBox>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the TextArea template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTextAreaTemplate(field: FieldBlockProperties): string {\n\t\tconst growing = field.formatOptions.textMaxLines ? true : false;\n\n\t\tconst showExceededText = !!field.formatOptions.textMaxLength;\n\n\t\t//unfortunately this one is a \"different\" layoutData than the others, therefore the reuse function from above cannot be used for the textArea template\n\t\tlet layoutData = \"\";\n\t\tif (field.collaborationEnabled) {\n\t\t\tlayoutData = <FlexItemData growFactor=\"9\" />;\n\t\t}\n\n\t\treturn (\n\t\t\t<TextAreaEx\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\trequired={field.requiredExpression}\n\t\t\t\trows={field.formatOptions.textLinesEdit}\n\t\t\t\tgrowing={growing}\n\t\t\t\tgrowingMaxLines={field.formatOptions.textMaxLines}\n\t\t\t\tcols={300} //As the default is 20, the \"cols\" property is configured with a value of 300 to guarantee that the textarea will occupy all the available space.\n\t\t\t\twidth=\"100%\"\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tmaxLength={field.formatOptions.textMaxLength}\n\t\t\t\tshowExceededText={showExceededText}\n\t\t\t\tchange={field.eventHandlers.change as (oEvent: InputBase$ChangeEvent) => void}\n\t\t\t\tliveChange={field.eventHandlers.liveChange}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: layoutData,\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t}}\n\t\t\t</TextAreaEx>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the RatingIndicator template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetRatingIndicatorTemplate: (field: FieldBlockProperties): string => {\n\t\tconst tooltip = field.ratingIndicatorTooltip || \"{sap.fe.i18n>T_COMMON_RATING_INDICATOR_TITLE_LABEL}\";\n\n\t\treturn (\n\t\t\t<RatingIndicator\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tmaxValue={field.ratingIndicatorTargetValue}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\ttooltip={tooltip}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\ticonSize=\"1.375rem\"\n\t\t\t\tclass=\"sapUiTinyMarginTopBottom\"\n\t\t\t\teditable=\"true\"\n\t\t\t\tchange={field.eventHandlers.change as (oEvent: RatingIndicator$ChangeEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: EditStyle.getLayoutData(field)\n\t\t\t\t}}\n\t\t\t</RatingIndicator>\n\t\t);\n\t},\n\n\t/**\n\t * Helps to calculate the content edit functionality / templating.\n\t * Including a wrapper an hbox in case of collaboration mode finally\n\t * it calls internally EditStyle.getTemplate.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTemplateWithWrapper(field: FieldBlockProperties): string {\n\t\tlet contentEdit;\n\n\t\tif ((field.editMode ?? field.computedEditMode) !== FieldEditMode.Display && !!field.editStyle) {\n\t\t\tif (field.collaborationEnabled ?? false) {\n\t\t\t\tcontentEdit = (\n\t\t\t\t\t<CollaborationHBox width=\"100%\" alignItems=\"End\">\n\t\t\t\t\t\t{EditStyle.getTemplate(field)}\n\t\t\t\t\t\t{EditStyle.getCollaborationAvatar(field)}\n\t\t\t\t\t</CollaborationHBox>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcontentEdit = EditStyle.getTemplate(field);\n\t\t\t}\n\t\t}\n\n\t\treturn contentEdit || \"\";\n\t},\n\n\t/**\n\t * Generates the InputMask template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetInputMaskTemplate(field: FieldBlockProperties): string {\n\t\tconst optionalMaskInputRules = [];\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(field.metaPath, field.contextPath);\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\t\tif (field.mask?.maskRule) {\n\t\t\tfor (const rule of field.mask.maskRule) {\n\t\t\t\toptionalMaskInputRules.push(<MaskInputRule maskFormatSymbol={rule.symbol} regex={rule.regex} />);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<MaskInput\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\twidth=\"100%\"\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tmask={field.mask?.mask}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\trequired={field.requiredExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\ttextAlign={textAlign}\n\t\t\t\tplaceholderSymbol={field.mask?.placeholderSymbol}\n\t\t\t\tliveChange={field.eventHandlers.liveChange as (oEvent: MaskInput$LiveChangeEvent) => void}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\trules: optionalMaskInputRules,\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t}}\n\t\t\t</MaskInput>\n\t\t);\n\t},\n\n\t/**\n\t * Entry point for further templating processings.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTemplate: (field: FieldBlockProperties): string | undefined => {\n\t\tlet innerFieldContent;\n\t\tswitch (field.editStyle) {\n\t\t\tcase \"CheckBox\":\n\t\t\t\tinnerFieldContent = EditStyle.getCheckBoxTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"DatePicker\":\n\t\t\tcase \"DateTimePicker\":\n\t\t\tcase \"TimePicker\": {\n\t\t\t\tinnerFieldContent = EditStyle.getDateTimePickerGeneric(field, field.editStyle);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"Input\": {\n\t\t\t\tinnerFieldContent = EditStyle.getInputTemplate(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"Masked\": {\n\t\t\t\tinnerFieldContent = EditStyle.getInputTemplate(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"InputWithValueHelp\": {\n\t\t\t\tinnerFieldContent = EditStyle.getInputWithValueHelpTemplate(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"RatingIndicator\":\n\t\t\t\tinnerFieldContent = EditStyle.getRatingIndicatorTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"TextArea\":\n\t\t\t\tinnerFieldContent = EditStyle.getTextAreaTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"InputMask\":\n\t\t\t\tinnerFieldContent = EditStyle.getInputMaskTemplate(field);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn innerFieldContent;\n\t}\n};\n\nexport default EditStyle;\n"],"mappings":"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","ignoreList":[],"file":"EditStyle-dbg.js"}