{"version":3,"names":["DisplayStyle","getPrecisionForCurrency","field","scale","property","precision","Math","min","getCurrencyOrUnitControl","currencyOrUnit","visibleExpression","_jsx","Link","text","press","eventHandlers","displayAggregationDetails","visible","children","dependents","clone","getNumberWithUnitOrCurrencyAlignedTemplate","relativePropertyPath","getContextRelativeTargetObjectPath","dataModelPath","overallVisible","not","equal","pathInModel","undefined","currency","_jsxs","HBox","renderType","justifyContent","class","Text","textDirection","wrapping","textAlign","valueAsStringBindingExpression","unitBindingExpression","width","formatOptions","isAnalytics","ConditionalWrapper","displayVisible","condition","hasValidAnalyticalCurrencyOrUnit","contentTrue","contentFalse","getAvatarTemplate","avatarId","_flexId","idPrefix","generate","avatarVisible","FieldTemplating","getVisibleExpression","avatarSrc","getValueBinding","avatarDisplayShape","getAvatarShape","FormElementWrapper","Avatar","id","src","displaySize","imageFitType","displayShape","getButtonTemplate","icon","showIconUrl","convertedMetaPath","IconUrl","Label","tooltip","buttonPress","buttonIsBound","buttonOperationAvailable","buttonOperationAvailableFormatted","navigationAvailable","$Type","onDataFieldActionButton","ActionTarget","isBound","annotations","Core","OperationAvailable","actionTarget","bindingParamName","parameters","name","compileExpression","getExpressionFromAnnotation","path","startsWith","replace","onDataFieldWithIBN","NavigationAvailable","String","ignoreNavigationAvailable","button","Button","enabled","FieldHelper","isDataFieldActionButtonVisible","isDataFieldActionButtonEnabled","isAnalyticalAggregatedRow","and","resolveBindingString","UI","isNodeLevelNavigable","type","buildExpressionForCriticalityButtonType","getContactTemplate","contactMetaPath","metaPath","getModel","createBindingContext","contactVisible","Contact","ariaLabelledBy","getPath","contextPath","showEmptyIndicator","getDataPointInnerPart","withConditionalWrapper","convertedDataField","MetaModelConverter","convertMetaModelContext","measureDisplayMode","DataPoint","value","getDataPointTemplate","hasUnitOrCurrency","getExpandableText","ExpandableText","displayStyleId","overflowMode","textExpandBehaviorDisplay","maxCharacters","textMaxCharactersDisplay","emptyIndicatorMode","getFileTemplate","innerFilePart","fileStreamNotEmpty","fileRelativePropertyPath","fileFilenameExpression","fileUploadUrl","fileFilenamePath","ContentDisposition","Filename","fileMediaType","MediaType","fileIsImage","IsImageURL","IsImage","test","toString","fileAvatarSrc","fileAvatarDisplayShape","fileIconSrc","getPathForIconSource","fileLinkText","getFilenameExpr","fileLinkHref","getDownloadUrl","fileTextVisible","fileAcceptableMediaTypes","AcceptableMediaTypes","acceptedTypes","Array","from","map","join","fileMaximumSize","calculateMBfromByte","maxLength","avatar","customData","ImageCustomData","paramName","Icon","link","target","href","editMode","computedEditMode","FieldEditMode","Display","beforeDialogOpen","collaborationEnabled","handleOpenUploader","afterDialogOpen","handleCloseUploader","fileUploader","FileUploader","editableExpression","buttonOnly","iconOnly","multiple","style","sendXHR","useMultipart","sameFilenameAllowed","mimeType","typeMissmatch","handleTypeMissmatch","maximumFileSize","fileSizeExceed","handleFileSizeExceed","uploadOnChange","uploadComplete","handleUploadComplete","httpRequestMethod","isDynamicInstantiation","FileUploaderHttpRequestMethod","Put","change","uploadStream","afterDialogClose","uploadStart","deleteButton","removeStream","FileWrapper","uploadUrl","propertyPath","filename","mediaType","fieldGroupIds","validateFieldGroup","CustomData","dataSourcePath","getLinkTemplate","linkUrl","iconUrl","linkActived","linkTarget","computeTextWithWhiteSpace","accessibleRole","LinkAccessibleRole","onDataFieldWithNavigationPath","html5LinkTarget","HTML5","LinkTarget","linkBinding","Url","Communication","IsEmailAddress","IsPhoneNumber","linkIsEmailAddress","linkIsPhoneNumber","propertyValueBinding","mailBlockId","uid","Email","mail","ObjectStatus","openExternalLink","active","wrap","getForeignKeyForCustomData","relativePathToQuickViewEntity","QuickView","getRelativePathToQuickViewEntity","targetNavigationProperties","targetEntityType","navigationProperties","targetNavProp","find","navProp","refConstraint","referentialConstraint","key","length","targetProperty","keyToFetch","getForeignKeyValueExpression","foreignKeyRelativePath","expression","_type","ifElse","constant","getStandardLinkWithQuickViewTemplate","linkPressed","getMdcLinkForQuickView","getConditionalLinkWithQuickViewTemplate","semanticObject","bindingString","TextLink","showAsLink","getConditionalWrapperForQuickViewTemplate","getLinkWithQuickViewTemplate","retrieveTextFromValueList","textFromValueList","getQuickViewCondition","getTextTemplate","renderWhitespace","customdata","displayMode","getPasswordTemplate","textBinding","getTextBinding","textExpression","isPathInModelExpression","formatResult","valueFormatters","formatPasswordText","getObjectIdentifier","titleActive","hasQuickView","identifier","ObjectIdentifier","title","identifierTitle","identifierText","titlePress","hasSituationsIndicator","alignItems","SituationsIndicator","situationsIndicatorPropertyPath","showErrorIndicator","showErrorObjectStatus","VBox","state","getObjectStatus","objectStatus","requiredHelper","dataModelObjectPath","getInvolvedDataModelObjects","enhancedValueDataModelPath","enhanceDataModelPath","targetObject","Value","criticalityIcon","buildExpressionForCriticalityIcon","buildExpressionForCriticalityColor","content","isActive","pressAction","createContent","getLabelSemanticKey","design","hasQuickview","addDraftIndicator","semanticKeyTemplate","fieldGroupDraftIndicatorPropertyPath","getMarginClass","compactSemanticKey","DraftIndicator","draftIndicatorType","ObjectMarkerVisibility","IconAndText","draftIndicatorVisible","dataModelPathExternalID","replaceWhitespace","quickViewType","dynamicSemanticObjects","listOfDynamicSemanticObjects","semanticObjectExpression","push","semanticObjectsPath","concat","hasSemanticObjects","getTemplate","innerFieldContent","displayStyle"],"sourceRoot":".","sources":["DisplayStyle.tsx"],"sourcesContent":["import type { Action, PathAnnotationExpression, Property, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataFieldTypes,\n\tDataFieldWithUrl,\n\tDataPointType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport uid from \"sap/base/util/uid\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tformatResult,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tisPathInModelExpression,\n\tnot,\n\tpathInModel,\n\tresolveBindingString\n} from \"sap/fe/base/BindingToolkit\";\nimport FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport {\n\tbuildExpressionForCriticalityButtonType,\n\tbuildExpressionForCriticalityColor,\n\tbuildExpressionForCriticalityIcon\n} from \"sap/fe/core/templating/CriticalityFormatters\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getContextRelativeTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { hasValidAnalyticalCurrencyOrUnit } from \"sap/fe/core/templating/UIFormatters\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\nimport * as FieldTemplating from \"sap/fe/macros/field/FieldTemplating\";\nimport type { FieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport QuickView from \"sap/fe/macros/quickView/QuickView\";\nimport Avatar from \"sap/m/Avatar\";\nimport Button from \"sap/m/Button\";\nimport ExpandableText from \"sap/m/ExpandableText\";\nimport HBox from \"sap/m/HBox\";\nimport ImageCustomData from \"sap/m/ImageCustomData\";\nimport Label from \"sap/m/Label\";\nimport type { Link$PressEvent } from \"sap/m/Link\";\nimport Link from \"sap/m/Link\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport { LinkAccessibleRole, ObjectMarkerVisibility } from \"sap/m/library\";\nimport type Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Icon from \"sap/ui/core/Icon\";\nimport type MdcLink from \"sap/ui/mdc/Link\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type {\n\tFileUploader$ChangeEvent,\n\tFileUploader$FileSizeExceedEvent,\n\tFileUploader$TypeMissmatchEvent,\n\tFileUploader$UploadCompleteEvent,\n\tFileUploader$UploadStartEvent\n} from \"sap/ui/unified/FileUploader\";\nimport FileUploader from \"sap/ui/unified/FileUploader\";\nimport FileUploaderHttpRequestMethod from \"sap/ui/unified/FileUploaderHttpRequestMethod\";\nimport Contact from \"../../contact/Contact\";\nimport Email from \"../../contact/Email\";\nimport ConditionalWrapper from \"../../controls/ConditionalWrapper\";\nimport FileWrapper from \"../../controls/FileWrapper\";\nimport TextLink from \"../../controls/TextLink\";\nimport DraftIndicator from \"../../draftIndicator/DraftIndicator\";\nimport SituationsIndicator from \"../../situations/SituationsIndicator\";\nimport DataPoint from \"../DataPoint\";\nimport type { DisplayStyle as DisplayStyleType } from \"./FieldStyles\";\n\nconst DisplayStyle = {\n\tgetPrecisionForCurrency(field: FieldBlockProperties): number {\n\t\tlet scale = field.property.scale ?? 5;\n\t\tif (typeof scale !== \"number\") {\n\t\t\t// Scale can be \"variable\" but it's not typed as such. In this case, Scale equals the precision\n\t\t\tscale = field.property.precision ?? 5;\n\t\t}\n\t\treturn Math.min(scale, 5);\n\t},\n\n\tgetCurrencyOrUnitControl(\n\t\tfield: FieldBlockProperties,\n\t\tcurrencyOrUnit: string | Control,\n\t\tvisibleExpression?: BindingToolkitExpression<boolean>\n\t): Control {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tcore:require=\"{FIELDRUNTIME: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\ttext=\"{sap.fe.i18n>M_TABLE_SHOW_DETAILS}\"\n\t\t\t\tpress={field.eventHandlers.displayAggregationDetails}\n\t\t\t\tvisible={visibleExpression}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdependents: (currencyOrUnit as Control)?.clone ? (currencyOrUnit as Control).clone() : currencyOrUnit\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the NumberWithUnitOrCurrencyAligned template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetNumberWithUnitOrCurrencyAlignedTemplate(field: FieldBlockProperties): string {\n\t\t// We don't display anything if the value is undefined\n\t\tconst relativePropertyPath = getContextRelativeTargetObjectPath(field.dataModelPath);\n\t\tconst overallVisible = not(equal(pathInModel(relativePropertyPath), undefined));\n\t\tconst currency = (\n\t\t\t<HBox renderType=\"Bare\" justifyContent=\"End\" class=\"sapFeControlsUnitCurrencyHbox\">\n\t\t\t\t<Text\n\t\t\t\t\ttextDirection=\"LTR\"\n\t\t\t\t\twrapping=\"false\"\n\t\t\t\t\ttextAlign=\"End\"\n\t\t\t\t\tclass=\"sapUiTinyMarginEnd\"\n\t\t\t\t\ttext={field.valueAsStringBindingExpression}\n\t\t\t\t></Text>\n\t\t\t\t<Text textDirection=\"LTR\" wrapping=\"false\" textAlign=\"End\" text={field.unitBindingExpression} width=\"3.3em\"></Text>\n\t\t\t</HBox>\n\t\t);\n\t\tif (field.formatOptions.isAnalytics) {\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper visible={field.displayVisible} condition={field.hasValidAnalyticalCurrencyOrUnit as unknown as boolean}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: currency,\n\t\t\t\t\t\tcontentFalse: this.getCurrencyOrUnitControl(field, currency, overallVisible)\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn currency;\n\t\t}\n\t},\n\n\t/**\n\t * Generates the Avatar template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetAvatarTemplate(field: FieldBlockProperties): string {\n\t\tlet avatarId;\n\t\tif (field._flexId) {\n\t\t\tavatarId = field._flexId;\n\t\t} else if (field.idPrefix) {\n\t\t\tavatarId = generate([field.idPrefix, \"Field-content\"]);\n\t\t}\n\n\t\tconst avatarVisible = FieldTemplating.getVisibleExpression(field.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\tconst avatarSrc = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\tconst avatarDisplayShape = FieldTemplating.getAvatarShape(field.dataModelPath);\n\n\t\treturn (\n\t\t\t<FormElementWrapper visible={avatarVisible}>\n\t\t\t\t<Avatar\n\t\t\t\t\tid={avatarId}\n\t\t\t\t\tsrc={avatarSrc}\n\t\t\t\t\tdisplaySize=\"S\"\n\t\t\t\t\tclass=\"sapUiSmallMarginEnd\"\n\t\t\t\t\timageFitType=\"Cover\"\n\t\t\t\t\tdisplayShape={avatarDisplayShape}\n\t\t\t\t/>\n\t\t\t</FormElementWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the button template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetButtonTemplate: (field: FieldBlockProperties): string => {\n\t\tconst icon = field.formatOptions?.showIconUrl ?? false ? (field.convertedMetaPath as DataFieldTypes).IconUrl : undefined;\n\t\tconst text = !(field.formatOptions?.showIconUrl ?? false) ? (field.convertedMetaPath as DataFieldTypes).Label : undefined;\n\t\tconst tooltip = field.formatOptions?.showIconUrl ?? false ? (field.convertedMetaPath as DataFieldTypes).Label : undefined;\n\n\t\tlet buttonPress;\n\t\tlet buttonIsBound;\n\t\tlet buttonOperationAvailable;\n\t\tlet buttonOperationAvailableFormatted;\n\t\tlet navigationAvailable;\n\n\t\tif (field.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\tbuttonPress = field.eventHandlers.onDataFieldActionButton;\n\n\t\t\tbuttonIsBound = field.convertedMetaPath.ActionTarget ? field.convertedMetaPath.ActionTarget.isBound : true;\n\t\t\tbuttonOperationAvailable = field.convertedMetaPath.ActionTarget\n\t\t\t\t? field.convertedMetaPath.ActionTarget.annotations?.Core?.OperationAvailable\n\t\t\t\t: \"false\";\n\t\t\tbuttonOperationAvailableFormatted = field.convertedMetaPath.ActionTarget ? undefined : \"false\";\n\n\t\t\tif (buttonOperationAvailable && buttonOperationAvailable !== \"false\") {\n\t\t\t\tconst actionTarget = field.convertedMetaPath.ActionTarget as Action;\n\t\t\t\tconst bindingParamName = actionTarget.parameters[0].name;\n\t\t\t\t//QUALMS, needs to be checked whether this makes sense at that place, might be good in a dedicated helper function\n\t\t\t\tbuttonOperationAvailableFormatted = compileExpression(\n\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\tbuttonOperationAvailable as PropertyAnnotationValue<boolean>,\n\t\t\t\t\t\t[],\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t(path: string) => {\n\t\t\t\t\t\t\tif (path.startsWith(bindingParamName)) {\n\t\t\t\t\t\t\t\treturn path.replace(bindingParamName + \"/\", \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (field.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n\t\t\tbuttonPress = field.eventHandlers.onDataFieldWithIBN;\n\t\t\tnavigationAvailable = true;\n\t\t\tif (\n\t\t\t\tfield.convertedMetaPath?.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\t\tfield.convertedMetaPath.NavigationAvailable !== undefined &&\n\t\t\t\tString(field.formatOptions.ignoreNavigationAvailable) !== \"true\"\n\t\t\t) {\n\t\t\t\tnavigationAvailable = compileExpression(getExpressionFromAnnotation(field.convertedMetaPath.NavigationAvailable));\n\t\t\t}\n\t\t}\n\n\t\tlet button = \"\";\n\t\tif (field.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tvisible={field.visible}\n\t\t\t\t\ttext={text}\n\t\t\t\t\ticon={icon}\n\t\t\t\t\tenabled={navigationAvailable}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t\tpress={buttonPress as unknown as ((oEvent: Event<object, EventProvider>) => void) | undefined}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (\n\t\t\tFieldHelper.isDataFieldActionButtonVisible(\n\t\t\t\tfield.convertedMetaPath,\n\t\t\t\tbuttonIsBound,\n\t\t\t\tbuttonOperationAvailable as boolean | undefined\n\t\t\t)\n\t\t) {\n\t\t\tlet enabled: string | CompiledBindingToolkitExpression = FieldHelper.isDataFieldActionButtonEnabled(\n\t\t\t\tfield.convertedMetaPath as DataFieldForAction,\n\t\t\t\tbuttonIsBound as unknown as boolean,\n\t\t\t\tbuttonOperationAvailable,\n\t\t\t\tbuttonOperationAvailableFormatted as string\n\t\t\t);\n\n\t\t\tif (field.formatOptions.isAnalyticalAggregatedRow) {\n\t\t\t\tenabled = compileExpression(and(resolveBindingString(enabled), UI.isNodeLevelNavigable));\n\t\t\t}\n\n\t\t\tconst type = buildExpressionForCriticalityButtonType(field.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tclass={field.class}\n\t\t\t\t\ttext={text}\n\t\t\t\t\ticon={icon}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t\tpress={buttonPress as unknown as ((oEvent: Event<object, EventProvider>) => void) | undefined}\n\t\t\t\t\tenabled={enabled}\n\t\t\t\t\tvisible={field.visible}\n\t\t\t\t\ttype={type}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn button;\n\t},\n\n\t/**\n\t * Generates the Contact template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetContactTemplate(field: FieldBlockProperties): string {\n\t\tconst contactMetaPath = field.metaPath.getModel().createBindingContext(\"Target/$AnnotationPath\", field.metaPath);\n\t\tconst contactVisible = FieldTemplating.getVisibleExpression(field.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\treturn (\n\t\t\t<Contact\n\t\t\t\tidPrefix={field.idPrefix}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy}\n\t\t\t\tmetaPath={contactMetaPath.getPath()}\n\t\t\t\tcontextPath={field.contextPath.getPath()}\n\t\t\t\t_flexId={field._flexId}\n\t\t\t\tvisible={contactVisible}\n\t\t\t\tshowEmptyIndicator={field.formatOptions.showEmptyIndicator}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the innerpart of the data point to be used in getDataPointTemplate.\n\t * @param field Reference to the current field instance\n\t * @param withConditionalWrapper Boolean value to determine whether the DataPoint\n\t * \t\t\t\t\t  \t\t\tshall be generated for the conditional wrapper case\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDataPointInnerPart(field: FieldBlockProperties, withConditionalWrapper: boolean): string {\n\t\tconst convertedDataField = MetaModelConverter.convertMetaModelContext(field.metaPath) as DataFieldAbstractTypes;\n\n\t\tconst metaPath =\n\t\t\tconvertedDataField.$Type === UIAnnotationTypes.DataFieldForAnnotation\n\t\t\t\t? field.metaPath.getModel().createBindingContext(\"Target/$AnnotationPath\", field.metaPath)\n\t\t\t\t: field.metaPath;\n\n\t\tconst formatOptions = {\n\t\t\tmeasureDisplayMode: field.formatOptions.measureDisplayMode,\n\t\t\tshowEmptyIndicator: field.formatOptions.showEmptyIndicator\n\t\t};\n\n\t\treturn (\n\t\t\t<DataPoint\n\t\t\t\tidPrefix={withConditionalWrapper ? undefined : field.idPrefix}\n\t\t\t\tvisible={(!withConditionalWrapper ? field.displayVisible : undefined) as unknown as string | undefined}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy ? field.ariaLabelledBy : undefined}\n\t\t\t\tmetaPath={metaPath.getPath()}\n\t\t\t\tcontextPath={field.contextPath?.getPath()}\n\t\t\t\tvalue={field.value}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tformatOptions: { formatOptions }\n\t\t\t\t}}\n\t\t\t</DataPoint>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the DataPoint template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDataPointTemplate(field: FieldBlockProperties): string {\n\t\tif ((field.formatOptions.isAnalytics ?? false) && (field.hasUnitOrCurrency ?? false)) {\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper visible={field.displayVisible} condition={field.hasValidAnalyticalCurrencyOrUnit as unknown as boolean}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: this.getDataPointInnerPart(field, true),\n\t\t\t\t\t\tcontentFalse: this.getCurrencyOrUnitControl(field, this.getDataPointInnerPart(field, true))\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.getDataPointInnerPart(field, false);\n\t\t}\n\t},\n\n\t/**\n\t * Generates the ExpandableText template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetExpandableText(field: FieldBlockProperties): string {\n\t\treturn (\n\t\t\t<ExpandableText\n\t\t\t\tid={field?.displayStyleId}\n\t\t\t\tvisible={field?.displayVisible}\n\t\t\t\ttext={field.text}\n\t\t\t\toverflowMode={field?.formatOptions?.textExpandBehaviorDisplay}\n\t\t\t\tmaxCharacters={field?.formatOptions?.textMaxCharactersDisplay}\n\t\t\t\temptyIndicatorMode={field?.emptyIndicatorMode}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the File template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetFileTemplate(field: FieldBlockProperties): string {\n\t\tlet innerFilePart;\n\n\t\tconst fileStreamNotEmpty = compileExpression(\n\t\t\tnot(equal(pathInModel(`${field.fileRelativePropertyPath}@odata.mediaContentType`), null))\n\t\t);\n\n\t\tconst fileFilenameExpression = field.fileFilenameExpression ? \"{ path: '\" + field.fileFilenameExpression + \"' }\" : \"\";\n\n\t\t// FileWrapper\n\t\tconst fileUploadUrl = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\tconst fileFilenamePath = (field.property.annotations.Core?.ContentDisposition?.Filename as PathAnnotationExpression<string>)?.path;\n\t\tconst fileMediaType =\n\t\t\tfield.property.annotations.Core?.MediaType &&\n\t\t\tcompileExpression(getExpressionFromAnnotation(field.property.annotations.Core?.MediaType));\n\n\t\t// template:if\n\t\tconst fileIsImage =\n\t\t\t!!field.property.annotations.UI?.IsImageURL ||\n\t\t\t!!field.property.annotations.UI?.IsImage ||\n\t\t\t/image\\//i.test(field.property.annotations.Core?.MediaType?.toString() ?? \"\");\n\n\t\t// Avatar\n\t\tconst fileAvatarSrc = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\tconst fileAvatarDisplayShape = FieldTemplating.getAvatarShape(field.dataModelPath);\n\n\t\t// Icon\n\t\tconst fileIconSrc = FieldHelper.getPathForIconSource(field.fileRelativePropertyPath);\n\n\t\t// Link\n\t\tconst fileLinkText = FieldHelper.getFilenameExpr(fileFilenameExpression, \"{sap.fe.i18n>M_FIELD_FILEUPLOADER_NOFILENAME_TEXT}\");\n\t\tconst fileLinkHref = FieldHelper.getDownloadUrl(fileUploadUrl ?? \"\");\n\n\t\t// Text\n\t\tconst fileTextVisible = compileExpression(equal(pathInModel(`${field.fileRelativePropertyPath}@odata.mediaContentType`), null));\n\n\t\tlet fileAcceptableMediaTypes;\n\t\t// FileUploader\n\t\tif (field.property.annotations.Core?.AcceptableMediaTypes) {\n\t\t\tconst acceptedTypes = Array.from(field.property.annotations.Core.AcceptableMediaTypes as unknown as string[]).map(\n\t\t\t\t(type) => `'${type}'`\n\t\t\t);\n\t\t\tfileAcceptableMediaTypes = `{=odata.collection([${acceptedTypes.join(\",\")}])}`; // This does not feel right, but follows the logic of AnnotationHelper#value\n\t\t}\n\t\tconst fileMaximumSize = FieldHelper.calculateMBfromByte(field.property.maxLength);\n\n\t\tif (fileIsImage) {\n\t\t\tinnerFilePart = {\n\t\t\t\tavatar: (\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\tsrc={fileAvatarSrc}\n\t\t\t\t\t\tdisplaySize=\"S\"\n\t\t\t\t\t\tclass=\"sapUiSmallMarginEnd\"\n\t\t\t\t\t\timageFitType=\"Cover\"\n\t\t\t\t\t\tdisplayShape={fileAvatarDisplayShape}\n\t\t\t\t\t>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\tcustomData: <ImageCustomData paramName=\"xcache\" />\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Avatar>\n\t\t\t\t)\n\t\t\t};\n\t\t} else {\n\t\t\tinnerFilePart = {\n\t\t\t\ticon: <Icon src={fileIconSrc} class=\"sapUiSmallMarginEnd\" visible={fileStreamNotEmpty} />,\n\t\t\t\tlink: <Link text={fileLinkText} target=\"_blank\" href={fileLinkHref} visible={fileStreamNotEmpty} wrapping=\"true\" />,\n\t\t\t\ttext: <Text emptyIndicatorMode={field.emptyIndicatorMode} text=\"\" visible={fileTextVisible} />\n\t\t\t};\n\t\t}\n\n\t\tif ((field.editMode ?? field.computedEditMode) !== FieldEditMode.Display) {\n\t\t\tconst beforeDialogOpen = field.collaborationEnabled ? field.eventHandlers.handleOpenUploader : undefined;\n\t\t\tconst afterDialogOpen = field.collaborationEnabled ? field.eventHandlers.handleCloseUploader : undefined;\n\n\t\t\tinnerFilePart = {\n\t\t\t\t...innerFilePart,\n\t\t\t\tfileUploader: (\n\t\t\t\t\t<FileUploader\n\t\t\t\t\t\tname=\"FEV4FileUpload\"\n\t\t\t\t\t\tvisible={field.editableExpression}\n\t\t\t\t\t\tbuttonOnly=\"true\"\n\t\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\t\tmultiple=\"false\"\n\t\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_FIELD_FILEUPLOADER_UPLOAD_BUTTON_TOOLTIP}\"\n\t\t\t\t\t\ticon=\"sap-icon://upload\"\n\t\t\t\t\t\tstyle=\"Transparent\"\n\t\t\t\t\t\tsendXHR=\"true\"\n\t\t\t\t\t\tuseMultipart=\"false\"\n\t\t\t\t\t\tsameFilenameAllowed=\"true\"\n\t\t\t\t\t\tmimeType={fileAcceptableMediaTypes}\n\t\t\t\t\t\ttypeMissmatch={\n\t\t\t\t\t\t\tfield.eventHandlers.handleTypeMissmatch as unknown as (oEvent: FileUploader$TypeMissmatchEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmaximumFileSize={fileMaximumSize}\n\t\t\t\t\t\tfileSizeExceed={\n\t\t\t\t\t\t\tfield.eventHandlers.handleFileSizeExceed as unknown as (oEvent: FileUploader$FileSizeExceedEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuploadOnChange=\"false\"\n\t\t\t\t\t\tuploadComplete={\n\t\t\t\t\t\t\tfield.eventHandlers.handleUploadComplete as unknown as (oEvent: FileUploader$UploadCompleteEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\thttpRequestMethod={field.isDynamicInstantiation ? FileUploaderHttpRequestMethod.Put : \"Put\"}\n\t\t\t\t\t\tchange={field.eventHandlers.uploadStream as unknown as (oEvent: FileUploader$ChangeEvent) => void}\n\t\t\t\t\t\tbeforeDialogOpen={beforeDialogOpen as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\tafterDialogClose={afterDialogOpen as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\tuploadStart={field.eventHandlers.handleOpenUploader as unknown as (oEvent: FileUploader$UploadStartEvent) => void}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tdeleteButton: (\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon=\"sap-icon://sys-cancel\"\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\tpress={field.eventHandlers.removeStream as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_FIELD_FILEUPLOADER_DELETE_BUTTON_TOOLTIP}\"\n\t\t\t\t\t\tvisible={field.editableExpression}\n\t\t\t\t\t\tenabled={fileStreamNotEmpty}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\treturn (\n\t\t\t<FileWrapper\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tvisible={field.visible}\n\t\t\t\tuploadUrl={fileUploadUrl}\n\t\t\t\tpropertyPath={field.fileRelativePropertyPath}\n\t\t\t\tfilename={fileFilenamePath}\n\t\t\t\tmediaType={fileMediaType}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />,\n\t\t\t\t\tinnerFilePart\n\t\t\t\t}}\n\t\t\t</FileWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the Link template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLinkTemplate(field: FieldBlockProperties): string {\n\t\tlet linkUrl;\n\t\tlet iconUrl;\n\t\tlet linkActived;\n\t\ttype LinkTarget = \"_blank\" | \"_self\" | \"_top\" | \"_parent\";\n\t\tlet linkTarget: LinkTarget | undefined;\n\n\t\tswitch (field.convertedMetaPath.$Type as string) {\n\t\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={DisplayStyle.computeTextWithWhiteSpace(field)}\n\t\t\t\t\t\tpress={field.eventHandlers.onDataFieldWithIBN as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\tpress={field.eventHandlers.onDataFieldWithNavigationPath as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tenabled={field.formatOptions.isAnalyticalAggregatedRow ? UI.isNodeLevelNavigable : undefined}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\tpress={field.eventHandlers.onDataFieldActionButton as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tenabled={field.formatOptions.isAnalyticalAggregatedRow ? UI.isNodeLevelNavigable : undefined}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\t\t\tconst html5LinkTarget = field.property.annotations.HTML5?.LinkTarget;\n\t\t\t\tfield.text = DisplayStyle.computeTextWithWhiteSpace(field);\n\t\t\t\ticonUrl = (field.convertedMetaPath as DataFieldTypes).IconUrl\n\t\t\t\t\t? compileExpression(\n\t\t\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\t\t\t(field.convertedMetaPath as DataFieldTypes).IconUrl as unknown as PropertyAnnotationValue<String>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined;\n\t\t\t\tconst linkBinding = getExpressionFromAnnotation(\n\t\t\t\t\t(field.convertedMetaPath as DataFieldWithUrl).Url as unknown as PropertyAnnotationValue<String>\n\t\t\t\t);\n\t\t\t\tlinkUrl = compileExpression(linkBinding);\n\t\t\t\tlinkActived = compileExpression(not(equal(linkBinding, \"\")));\n\t\t\t\tlinkTarget = html5LinkTarget && (html5LinkTarget.toString() as LinkTarget);\n\t\t}\n\n\t\tif (field.property.annotations?.Communication?.IsEmailAddress || field.property.annotations?.Communication?.IsPhoneNumber) {\n\t\t\tconst linkIsEmailAddress = field.property.annotations.Communication?.IsEmailAddress !== undefined;\n\t\t\tconst linkIsPhoneNumber = field.property.annotations.Communication?.IsPhoneNumber !== undefined;\n\t\t\tconst propertyValueBinding = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\t\tconst mailBlockId = field.displayStyleId ? field.displayStyleId : `mailBlock${uid()}`;\n\t\t\tif (linkIsEmailAddress) {\n\t\t\t\tlinkUrl = `mailto:${propertyValueBinding}`;\n\t\t\t\treturn (\n\t\t\t\t\t<Email\n\t\t\t\t\t\tid={mailBlockId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\tmail={propertyValueBinding}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy ? field.ariaLabelledBy : undefined}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (linkIsPhoneNumber) {\n\t\t\t\tlinkUrl = `tel:${propertyValueBinding}`;\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={DisplayStyle.computeTextWithWhiteSpace(field)}\n\t\t\t\t\t\thref={linkUrl}\n\t\t\t\t\t\tenabled={linkActived}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (iconUrl) {\n\t\t\treturn (\n\t\t\t\t<ObjectStatus\n\t\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\ticon={iconUrl}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\tpress={field.eventHandlers.openExternalLink as unknown as (oEvent: Event) => void}\n\t\t\t\t\tactive={linkActived}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: <CustomData key={\"url\"} value={linkUrl} />\n\t\t\t\t\t}}\n\t\t\t\t</ObjectStatus>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Link\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\thref={linkUrl}\n\t\t\t\t\tenabled={linkActived}\n\t\t\t\t\ttarget={linkTarget === undefined ? \"_top\" : linkTarget}\n\t\t\t\t\twrapping={field.wrap === undefined ? true : field.wrap}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Find the foreign key of target entity which quick view Facets we want to display.\n\t * @param field Reference to the current field instance\n\t * @returns The key of the target entity\n\t */\n\tgetForeignKeyForCustomData(field: FieldBlockProperties): string | undefined {\n\t\tconst relativePathToQuickViewEntity = QuickView.getRelativePathToQuickViewEntity(field.dataModelPath);\n\t\tif (relativePathToQuickViewEntity) {\n\t\t\tconst targetNavigationProperties = field.dataModelPath.targetEntityType.navigationProperties;\n\t\t\tconst targetNavProp = targetNavigationProperties.find((navProp) => navProp.name === relativePathToQuickViewEntity);\n\t\t\tconst refConstraint = targetNavProp?.referentialConstraint;\n\t\t\tconst key = refConstraint?.length && typeof refConstraint[0] === \"object\" && refConstraint[0].targetProperty;\n\t\t\tconst keyToFetch = key ? `${relativePathToQuickViewEntity}/${key}` : undefined;\n\t\t\tif (keyToFetch !== undefined) {\n\t\t\t\treturn keyToFetch;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * Generates the check expression for displaying or not a quickview.\n\t * @param field Reference to the current field instance\n\t * @returns The key of the target entity\n\t */\n\tgetForeignKeyValueExpression(field: FieldBlockProperties): string {\n\t\tconst foreignKeyRelativePath = QuickView.getRelativePathToQuickViewEntity(field.dataModelPath)\n\t\t\t? this.getForeignKeyForCustomData(field)\n\t\t\t: undefined;\n\t\tconst expression: BindingToolkitExpression<string> = {\n\t\t\tpath: `${foreignKeyRelativePath}`,\n\t\t\t_type: \"PathInModel\"\n\t\t};\n\t\treturn `${compileExpression(ifElse(equal(foreignKeyRelativePath, undefined), constant(true), not(equal(null, expression))))}`;\n\t},\n\n\t/**\n\t * Generates the StandardLinkWithQuickView template.\n\t * @param field Reference to the current field instance\n\t * @param text The text to display\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetStandardLinkWithQuickViewTemplate(field: FieldBlockProperties, text: CompiledBindingToolkitExpression): string {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\ttext={text}\n\t\t\t\tvisible={field.displayVisible}\n\t\t\t\twrapping={field.wrap === undefined ? true : field.wrap}\n\t\t\t\tpress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(field)\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ConditionalLinkTemplate template.\n\t * @param field Reference to the current field instance\n\t * @param condition Condition to display a Link or a Text\n\t * @param text The text to display\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetConditionalLinkWithQuickViewTemplate(\n\t\tfield: FieldBlockProperties,\n\t\tcondition: CompiledBindingToolkitExpression,\n\t\ttext: CompiledBindingToolkitExpression\n\t): string {\n\t\tconst semanticObject = field.semanticObject?.bindingString ?? field.semanticObject;\n\t\treturn (\n\t\t\t<TextLink\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tshowAsLink={condition as unknown as boolean}\n\t\t\t\tsemanticObject={semanticObject}\n\t\t\t\ttext={text}\n\t\t\t\tvisible={field.displayVisible}\n\t\t\t\twrapping={field.wrap === undefined ? true : field.wrap}\n\t\t\t\tpress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(field)\n\t\t\t\t}}\n\t\t\t</TextLink>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ConditionalLinkTemplate template.\n\t * @param field Reference to the current field instance\n\t * @param condition Condition to display a Link or a Text\n\t * @param contentTrue The Control to display in case condition is true\n\t * @param contentFalse The Control to display in case condition is false\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetConditionalWrapperForQuickViewTemplate(\n\t\tfield: FieldBlockProperties,\n\t\tcondition: string,\n\t\tcontentTrue: string,\n\t\tcontentFalse: string\n\t): string {\n\t\treturn (\n\t\t\t<ConditionalWrapper visible={field.displayVisible} condition={condition as unknown as boolean}>\n\t\t\t\t{{\n\t\t\t\t\tcontentTrue: contentTrue,\n\t\t\t\t\tcontentFalse: contentFalse\n\t\t\t\t}}\n\t\t\t</ConditionalWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the LinkWithQuickView template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLinkWithQuickViewTemplate(field: FieldBlockProperties): string {\n\t\tconst text = field.formatOptions.retrieveTextFromValueList\n\t\t\t? field.textFromValueList\n\t\t\t: DisplayStyle.computeTextWithWhiteSpace(field);\n\t\tconst condition = this.getQuickViewCondition(field);\n\t\tif (condition === \"true\") {\n\t\t\treturn this.getStandardLinkWithQuickViewTemplate(field, text);\n\t\t}\n\t\treturn this.getConditionalLinkWithQuickViewTemplate(field, condition, text);\n\t},\n\n\t/**\n\t * Generates the Text template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTextTemplate(field: FieldBlockProperties): string {\n\t\tif (field.formatOptions.retrieveTextFromValueList) {\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.textFromValueList}\n\t\t\t\t\tcore:require=\"{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\trenderWhitespace=\"true\"\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\t// When having a TextArrangement with TextOnly, RTA can only find the binding for the text, but not for the field.\n\t\t\t// To prevent that such a field can be added twice via RTA, we need to provide the field binding as a dummy custom binding.\n\t\t\tlet customdata;\n\t\t\tif (field.formatOptions.displayMode === \"Description\" && field.valueAsStringBindingExpression) {\n\t\t\t\tcustomdata = <CustomData key=\"fieldBinding\" value={field.valueAsStringBindingExpression} />;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\twrapping={field.wrap}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\trenderWhitespace=\"true\"\n\t\t\t\t>\n\t\t\t\t\t{customdata}\n\t\t\t\t</Text>\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Gets template for the password field.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetPasswordTemplate(field: FieldBlockProperties): string {\n\t\tconst textBinding = FieldTemplating.getTextBinding(field.dataModelPath, field.formatOptions, true);\n\t\tconst textExpression =\n\t\t\tisPathInModelExpression(textBinding) || typeof textBinding === \"string\"\n\t\t\t\t? compileExpression(formatResult([textBinding], valueFormatters.formatPasswordText))\n\t\t\t\t: compileExpression(textBinding);\n\t\treturn (\n\t\t\t<Text\n\t\t\t\tcore:require=\"{valueFormatters: 'sap/fe/core/formatters/ValueFormatter'}\"\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\tvisible={field.displayVisible}\n\t\t\t\ttext={textExpression}\n\t\t\t\twrapping={field.wrap}\n\t\t\t\trenderWhitespace=\"true\"\n\t\t\t></Text>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ObjectIdentifier template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetObjectIdentifier(field: FieldBlockProperties): string {\n\t\tlet dependents: MdcLink | undefined;\n\t\tlet titleActive;\n\t\tif (field.hasQuickView) {\n\t\t\ttitleActive = this.getQuickViewCondition(field);\n\t\t\tdependents = DisplayStyle.getMdcLinkForQuickView(field);\n\t\t} else {\n\t\t\ttitleActive = false;\n\t\t}\n\n\t\tlet identifier = (\n\t\t\t<ObjectIdentifier\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\ttitle={field.identifierTitle}\n\t\t\t\ttext={field.identifierText}\n\t\t\t\ttitleActive={titleActive}\n\t\t\t\ttitlePress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: dependents\n\t\t\t\t}}\n\t\t\t</ObjectIdentifier>\n\t\t);\n\t\tif (field.hasSituationsIndicator) {\n\t\t\tidentifier = (\n\t\t\t\t<HBox alignItems=\"Center\" justifyContent=\"SpaceBetween\" width=\"100%\">\n\t\t\t\t\t{identifier}\n\t\t\t\t\t<SituationsIndicator contextPath={field.contextPath.getPath()} propertyPath={field.situationsIndicatorPropertyPath} />\n\t\t\t\t</HBox>\n\t\t\t);\n\t\t}\n\t\tif (field.showErrorIndicator && field.showErrorObjectStatus) {\n\t\t\tidentifier = (\n\t\t\t\t<VBox>\n\t\t\t\t\t{identifier}\n\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\tvisible={field.showErrorObjectStatus}\n\t\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\n\t\t\t\t\t\ttext=\"{sap.fe.i18n>Contains_Errors}\"\n\t\t\t\t\t\tstate=\"Error\"\n\t\t\t\t\t/>\n\t\t\t\t</VBox>\n\t\t\t);\n\t\t}\n\n\t\treturn identifier;\n\t},\n\n\t/**\n\t * Generates the ObjectStatus template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetObjectStatus(field: FieldBlockProperties): string {\n\t\tlet objectStatus;\n\t\tlet requiredHelper = {\n\t\t\t\"core:require\": \"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t};\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataField>(field.metaPath, field.contextPath);\n\t\tconst enhancedValueDataModelPath = enhanceDataModelPath<Property>(\n\t\t\tdataModelObjectPath,\n\t\t\tdataModelObjectPath.targetObject?.Value.path\n\t\t);\n\t\tconst condition = hasValidAnalyticalCurrencyOrUnit(enhancedValueDataModelPath);\n\t\tconst convertedDataField = MetaModelConverter.getInvolvedDataModelObjects<DataPointType>(field.metaPath);\n\t\tconst criticalityIcon = buildExpressionForCriticalityIcon(convertedDataField);\n\t\tconst state = buildExpressionForCriticalityColor(convertedDataField);\n\n\t\tconst linkUrl = (field.convertedMetaPath as DataFieldWithUrl).Url\n\t\t\t? compileExpression(\n\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\t(field.convertedMetaPath as DataFieldWithUrl).Url as unknown as PropertyAnnotationValue<String>\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: undefined;\n\n\t\tif (field.formatOptions.isAnalytics && field.hasUnitOrCurrency) {\n\t\t\tconst content = DisplayStyle.getCurrencyOrUnitControl(field, <Text text={field.text} textAlign=\"End\"></Text>);\n\t\t\tobjectStatus = (\n\t\t\t\t<ConditionalWrapper id={field.displayStyleId} condition={condition as unknown as boolean}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: (\n\t\t\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\t\t\ticon={criticalityIcon}\n\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcontentFalse: content\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\tlet dependents: MdcLink | undefined;\n\t\t\tlet active = false;\n\t\t\tlet isActive;\n\t\t\tlet pressAction;\n\t\t\tif (field.hasQuickView) {\n\t\t\t\tdependents = DisplayStyle.getMdcLinkForQuickView(field);\n\t\t\t\tisActive = this.getQuickViewCondition(field);\n\t\t\t\tpressAction = \"FieldRuntimeHelper.pressLink\";\n\t\t\t}\n\t\t\tif (linkUrl) {\n\t\t\t\tactive = true;\n\t\t\t\trequiredHelper = {\n\t\t\t\t\t\"core:require\": \"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\t};\n\t\t\t\tpressAction = field.eventHandlers.openExternalLink;\n\t\t\t}\n\n\t\t\tobjectStatus = (\n\t\t\t\t<ObjectStatus\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\ticon={criticalityIcon}\n\t\t\t\t\tstate={state}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t{...requiredHelper}\n\t\t\t\t\tactive={isActive ? isActive : active}\n\t\t\t\t\tpress={pressAction as unknown as (oEvent: Event) => void}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: [\n\t\t\t\t\t\t\t<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />,\n\t\t\t\t\t\t\t<CustomData key={\"url\"} value={linkUrl} />\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdependents: dependents\n\t\t\t\t\t}}\n\t\t\t\t</ObjectStatus>\n\t\t\t);\n\t\t}\n\n\t\treturn objectStatus;\n\t},\n\n\tgetMdcLinkForQuickView(field: FieldBlockProperties): MdcLink {\n\t\tconst semanticObject = field.semanticObject?.bindingString ?? field.semanticObject;\n\t\treturn new QuickView(\n\t\t\tfield.dataModelPath,\n\t\t\tfield.metaPath.getPath(),\n\t\t\tfield.contextPath.getPath(),\n\t\t\tsemanticObject\n\t\t).createContent() as MdcLink;\n\t},\n\n\t/**\n\t * Generates the LabelSemantickey template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLabelSemanticKey(field: FieldBlockProperties): string {\n\t\tconst contentTrue = (\n\t\t\t<Link\n\t\t\t\ttext={field.text}\n\t\t\t\twrapping=\"true\"\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tpress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(field)\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t\tconst contentFalse = <Label id={field.displayStyleId} visible={field.displayVisible} text={field.identifierTitle} design=\"Bold\" />;\n\t\tif (field.hasQuickView) {\n\t\t\tconst hasQuickview = this.getQuickViewCondition(field);\n\t\t\tif (hasQuickview === \"true\") {\n\t\t\t\treturn contentTrue;\n\t\t\t} else {\n\t\t\t\treturn this.getConditionalWrapperForQuickViewTemplate(field, hasQuickview as string, contentTrue, contentFalse);\n\t\t\t}\n\t\t}\n\t\treturn <Label id={field.displayStyleId} visible={field.displayVisible} text={field.identifierTitle} design=\"Bold\" />;\n\t},\n\t/**\n\t * Gets the template for the semantic key with draft indicator.\n\t * @param semanticKeyTemplate The template result without draft indicator\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\taddDraftIndicator(semanticKeyTemplate: string, field: FieldBlockProperties): string {\n\t\tif (!field.formatOptions.fieldGroupDraftIndicatorPropertyPath) {\n\t\t\t// if the draftIndicator is not handled at the fieldGroup level\n\t\t\t//TODO could this be a boolean no draftIndicator\n\t\t\tsemanticKeyTemplate = (\n\t\t\t\t<FormElementWrapper visible={field.displayVisible}>\n\t\t\t\t\t<VBox class={FieldHelper.getMarginClass(field.formatOptions.compactSemanticKey)}>\n\t\t\t\t\t\t{semanticKeyTemplate}\n\t\t\t\t\t\t<DraftIndicator\n\t\t\t\t\t\t\tdraftIndicatorType={ObjectMarkerVisibility.IconAndText}\n\t\t\t\t\t\t\tcontextPath={field.contextPath.getPath()}\n\t\t\t\t\t\t\tvisible={field.draftIndicatorVisible}\n\t\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy ? field.ariaLabelledBy : []}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VBox>\n\t\t\t\t</FormElementWrapper>\n\t\t\t);\n\t\t}\n\t\treturn semanticKeyTemplate;\n\t},\n\n\t/**\n\t * Computes the text property with the appropriate white space handling.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tcomputeTextWithWhiteSpace(field: FieldBlockProperties): CompiledBindingToolkitExpression {\n\t\tconst text = FieldTemplating.getTextBinding(\n\t\t\t(field.dataModelPathExternalID as DataModelObjectPath<Property>) ?? field.dataModelPath,\n\t\t\tfield.formatOptions,\n\t\t\ttrue\n\t\t);\n\t\treturn isPathInModelExpression(text) || typeof text === \"string\"\n\t\t\t? compileExpression(formatResult([text], valueFormatters.replaceWhitespace))\n\t\t\t: compileExpression(text);\n\t},\n\t/**\n\t * Gets the condition for having an active link that opens the quick view.\n\t * @param field\n\t * @returns A compile binding expression for the condition.\n\t */\n\tgetQuickViewCondition(field: FieldBlockProperties): CompiledBindingToolkitExpression {\n\t\tswitch (field.quickViewType) {\n\t\t\tcase \"Facets\":\n\t\t\t\t//there is quick viewFacets annotation only then we check if the navigation is reachable\n\t\t\t\treturn this.getForeignKeyValueExpression(field);\n\n\t\t\tcase \"SemanticLinks\":\n\t\t\t\tif (field.dynamicSemanticObjects) {\n\t\t\t\t\tconst listOfDynamicSemanticObjects: BindingToolkitExpression<string>[] = [];\n\t\t\t\t\tif (field.semanticObject) {\n\t\t\t\t\t\t// If we see a dynamic expression with a formatter, we return false. The condition will be resolved later in TextLink control.\n\t\t\t\t\t\treturn compileExpression(constant(false));\n\t\t\t\t\t}\n\t\t\t\t\tfor (const semanticObjectExpression of field.dynamicSemanticObjects) {\n\t\t\t\t\t\tif (semanticObjectExpression._type === \"PathInModel\" || semanticObjectExpression._type === \"Constant\") {\n\t\t\t\t\t\t\tlistOfDynamicSemanticObjects.push(semanticObjectExpression);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If we see a dynamic expression ($edmJson), we return true.\n\t\t\t\t\t\t\treturn compileExpression(constant(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst semanticObjectsPath = [\n\t\t\t\t\t\tpathInModel<Context[]>(\"/semanticObjects\", \"internal\") as BindingToolkitExpression<string>\n\t\t\t\t\t].concat(listOfDynamicSemanticObjects);\n\t\t\t\t\treturn compileExpression(formatResult(semanticObjectsPath, valueFormatters.hasSemanticObjects));\n\t\t\t\t}\n\t\t\t\treturn \"true\";\n\t\t\tdefault:\n\t\t\t\t// \"facetsAndSemanticLinks\"\n\t\t\t\t// if there is both facets and semantic links, we do not check if the navigation is reachable\n\t\t\t\treturn \"true\";\n\t\t}\n\t},\n\n\t/**\n\t * Entry point for further templating processings.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTemplate: (field: FieldBlockProperties): string => {\n\t\tlet innerFieldContent;\n\t\tswitch (field.displayStyle as DisplayStyleType) {\n\t\t\tcase \"NumberWithUnitOrCurrencyAligned\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getNumberWithUnitOrCurrencyAlignedTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Avatar\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getAvatarTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Button\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getButtonTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Contact\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getContactTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"DataPoint\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getDataPointTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"ExpandableText\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getExpandableText(field);\n\t\t\t\tbreak;\n\t\t\tcase \"File\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getFileTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Link\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLinkTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"LinkWithQuickView\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLinkWithQuickViewTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectIdentifier\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getObjectIdentifier(field);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectStatus\": {\n\t\t\t\tinnerFieldContent = DisplayStyle.getObjectStatus(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"LabelSemanticKey\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLabelSemanticKey(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Text\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getTextTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Masked\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getPasswordTemplate(field);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tinnerFieldContent = \"\";\n\t\t}\n\t\tif (field.addDraftIndicator && innerFieldContent) {\n\t\t\tinnerFieldContent = DisplayStyle.addDraftIndicator(innerFieldContent, field);\n\t\t}\n\n\t\treturn innerFieldContent;\n\t}\n};\n\nexport default DisplayStyle;\n"],"mappings":"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","ignoreList":[],"file":"DisplayStyle-dbg.js"}