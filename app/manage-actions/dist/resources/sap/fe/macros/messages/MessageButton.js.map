{"version":3,"file":"MessageButton.js","names":["MessageButton","_dec","defineUI5Class","_dec2","aggregation","type","multiple","singularName","_dec3","event","_class","_class2","_Button","id","settings","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","sGeneralGroupText","sViewId","sLastActionText","_inheritsLoose","_proto","prototype","init","Button","apply","isHiddenDraftEnabled","CommonUtils","getAppComponent","getEnvironmentCapabilities","getCapabilities","HiddenDraft","enabled","attachPress","handleMessagePopoverPress","oMessagePopover","MessagePopover","oItemBinding","getBinding","attachChange","_setMessageData","messageButtonId","getId","addCustomData","CustomData","key","value","attachModelContextChange","_applyFiltersAndSort","bind","attachActiveTitlePress","_activeTitlePress","oEvent","toggle","getSource","_applyGroupingAsync","async","oView","aWaitForData","oViewBindingContext","getBindingContext","_findTablesRelatedToMessages","view","oRes","aMessages","getContexts","map","oContext","getObject","oViewContext","oObjectPage","getContent","messageHandling","getVisibleSectionsFromObjectPageLayout","forEach","oSection","getSubSections","oSubSection","findElements","oElem","isA","i","length","oRowBinding","getRowBinding","sElemeBindingPath","getPath","target","indexOf","push","table","subsection","oTables","_oTable","oMDCTable","oSubsection","setBindingContext","isLengthFinal","Promise","resolve","attachEventOnce","waitForGroupingApplied","setTimeout","_applyGrouping","all","getModel","checkMessages","err","Log","error","oObjectPageLayout","_getObjectPageLayout","messages","getItems","section","enableBinding","_checkControlIdInSections","_fnEnableBindings","viewId","_getViewId","UI5Element","getElementById","uIModel","setProperty","undefined","_getTableRefErrorContext","oTable","oModel","getProperty","sRefErrorContextPath","replace","getContext","_updateInternalModel","tableRowContext","rowIndex","tableTargetColProperty","messageObject","isCreationRow","temp","targetColProperty","model","context","aValidMessageIds","Messaging","getMessageModel","getData","message","aObsoleteMessagelIds","Object","keys","filter","internalMessageId","obsoleteId","assign","_setGroupLabelForTransientMsg","sActionName","Library","getResourceBundleFor","getText","setGroupName","_computeMessageGroupAndSubTitle","subSection","elements","hasMultipleSubSections","actionName","resourceModel","getResourceModel","detachChange","setSectionNameInGroup","element","targetTableInfo","l","targetedControl","isBackEndMessage","RegExp","test","getTargets","getParent","rowBinding","fnCallbackSetGroupName","obj","getTableColumnDataAndSetSubtile","oTargetTableInfo","subTitle","setSubtitle","setActiveTitle","oTableRowContext","isInactive","_formatMessageDescription","sTableTargetColName","getIndex","sTableTargetColProperty","getSubtitle","formElement","parent","getLabel","isTargetedControlOrphan","bIsOrphanElement","_getMdcTable","tableHeader","getHeader","targetColumnIndex","_getTableColumnIndex","getColumns","getPropertyKey","_getTableRow","_getTableRowIndex","oTableRowBindingContexts","getCurrentContexts","messageSubtitle","getMessageSubtitle","getValueState","includeTableGroupName","_checkMergeLogicForMessageGrouping","sectionBasedGroupName","createSectionGroupName","messageTargetProperty","split","pop","fireActiveTitlePress","item","bIncludeTableGroupName","singleSubsectionInPageLayout","getViewData","sectionLayout","multiSubsectionInTabLayout","block","getBlocks","content","getAggregation","blocks","getMainContent","Function","aSubSections","j","k","aVisibleSections","bIsGeneralGroupName","shouldBreak","oMessageObject","_getGeneralGroupText","aControls","getControlFromMessageRelatingToSubSection","oTargetedControl","persistent","getGroupName","_findTargetForMessage","viewPath","messageTargetPath","includes","oMetaModel","getMetaModel","contextPath","getMetaPath","oContextPathMetadata","$kind","_fnEnableSubSectionBinding","getMoreBlocks","subBlock","getActions","actions","aSections","iSection","iSubSection","oAllBlocks","_findMessageGroupAfterRebinding","attachDataReceived","sControlId","oControl","View","_setLongtextUrlDescription","oDiagnosisTitle","setAsyncDescriptionHandler","config","sLongTextUrl","getLongtextUrl","jQuery","ajax","url","success","data","sDiagnosisText","getHtmlText","oldDescription","getDescription","setDescription","promise","sError","reject","processTableColumnProperties","tableColProperty","rowInformation","tableColBindingContextTextAnnotation","getTableColBindingContextForTextAnnotation","tableColTextAnnotationPath","tableColTextArrangement","labelWithValue","getTableColValue","computeColumnInfo","tableTargetColName","msgObj","colFromTableSettings","fetchColumnInfo","columnInfo","availability","getType","join","_navigationConfigured","label","getTableColumnVisibilityInfo","_ref","visibility","fieldsAffectedTitle","FormattedText","htmlText","fieldAffectedText","Array","isArray","diagnosisTitle","uIMessageDescription","description","diagnosisText","messageDescriptionContent","handleNoMessages","setVisible","fireEvent","iMessageLength","clearTimeout","_setMessageDataTimeout","sIcon","oMessages","oMessageCount","Error","Warning","Success","Information","oResourceBundle","sButtonType","ButtonType","Default","sMessageKey","sTooltipText","sMessageText","toString","MessageType","Negative","Critical","Neutral","totalNumberOfMessages","setText","setTooltip","setIcon","setType","oPageReady","getController","pageReady","waitPageReady","navigateBack","oInternalModelContext","oItem","getParameter","oMessage","bIsBackendMessage","sSectionTitle","_defaultFocus","mdcTable","focusInfo","preventScroll","targetInfo","focus","subSections","visibleSections","controls","oTargetMdcTable","controlIds","controlId","control","parentControl","reduce","acc","val","_routing","navigateToContext","_navigateFromMessageToSectionTableInIconTabBarMode","oRefErrorContext","oRefError","_setFocusOnTargetField","targetMdcTable","iRowIndex","aTargetMdcTableRow","_getMdcTableRows","iFirstVisibleRow","_getGridTable","getFirstVisibleRow","oTargetRow","oTargetCell","getTargetCell","setFocusToControl","errorProperty","navigateForwardToContext","scrollToIndex","focusOnTargetField","focusOnMessageTargetControl","sections","getSections","sectionWithTheControl","find","_navigateFromMessageToSectionInIconTabBarMode","handleMessageNavigation","getControlIds","findSubSection","setMode","groupNames","findSubSectionByTitleOrControl","title","getTitle","some","targetRow","hasNonEditableField","getEditable","isControlInTable","elem","aAllViewElements","aErroneousControls","getDomRef","aNotTableErroneousControls","ColumnListItem","getMetadata","getName","oTargetField","getContentEdit","_getMessageRank","aElements","aAllElements","sectionRank","_fnFilterUponId","getControlId","getVisible","hasOwnProperty","sectionName","subSectionName","getPersistent","_filterOutMessagesInDialog","fnTest","aControlIds","isMessageOutOfParameterDialog","Filter","path","caseSensitive","_getFilterToHideBackendMessageOnErrorValidation","getIdsOfFielsdWithErrorValidation","validation","match","filters","operator","FilterOperator","EQ","value1","and","oValidationFilters","hiddenDraftFilter","oValidationAndContextFilter","oFilters","sPath","oSorter","oDialogFilter","objectPageLayoutSections","aUserDefinedFilter","aCustomFilters","value2","oBindingContext","messageButtonHelper","getCheckControlInViewFilter","filterArray","viewContext","editFlow","getRootContext","getHiddenDraftUseCaseFilter","StartsWith","oValidationContextDialogFilters","Sorter","obj1","obj2","rankA","rankB","sort","_getSectionBySectionTitle","bUseIconTabBar","getUseIconTabBar","sSelectedSectionId","getSelectedSection","setSelectedSection","oTableContext","oOPContext","bShouldWaitForTableRefresh","oElement","oParentElement","oMdcTable","oTableRow","getTable","findIndex","getTargetCellIndex","elt","getCells","cell","getTargetColumnIndex","targetElement","targetCellIndex","targetCellId","tableColumns","column","getCreationTemplate","search","component","sap","ui","require","navObject","getOwnerComponentFor","getNavigation","subOPConfigured","navConfigured","detail","route","getRowSettings","getRowActions","messagePopover","fnFocus","isOpen","fnOnClose","detachEvent","attachEvent","close","warning","escape","String","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./MessageButton.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineUI5Class, event } from \"sap/fe/base/ClassSupport\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type { TargetTableInfoType } from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport type { HiddenDraft } from \"sap/fe/core/converters/ManifestSettings\";\nimport { type ObjectPageManifestSettings } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type Field from \"sap/fe/macros/Field\";\nimport type FieldWrapper from \"sap/fe/macros/controls/FieldWrapper\";\nimport type MessageFilter from \"sap/fe/macros/messages/MessageFilter\";\nimport MessagePopover from \"sap/fe/macros/messages/MessagePopover\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type { TableColumnProperties } from \"sap/fe/macros/table/TableAPI\";\nimport type ObjectPageController from \"sap/fe/templates/ObjectPage/ObjectPageController.controller\";\nimport type SubSectionBlock from \"sap/fe/templates/ObjectPage/controls/SubSectionBlock\";\nimport type { $ButtonSettings } from \"sap/m/Button\";\nimport { default as Button } from \"sap/m/Button\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport type HBox from \"sap/m/HBox\";\nimport type MessageItem from \"sap/m/MessageItem\";\nimport type { MessagePopover$ActiveTitlePressEvent } from \"sap/m/MessagePopover\";\nimport type ResponsiveTable from \"sap/m/Table\";\nimport { ButtonType } from \"sap/m/library\";\nimport type CoreEvent from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport View from \"sap/ui/core/mvc/View\";\nimport type DynamicSideContent from \"sap/ui/layout/DynamicSideContent\";\nimport type FormElement from \"sap/ui/layout/form/FormElement\";\nimport type mdcField from \"sap/ui/mdc/Field\";\nimport type { default as MDCTable, default as Table } from \"sap/ui/mdc/Table\";\nimport type Content from \"sap/ui/mdc/valuehelp/base/Content\";\nimport type BaseContext from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type Column from \"sap/ui/table/Column\";\nimport type CreationRow from \"sap/ui/table/CreationRow\";\nimport type Row from \"sap/ui/table/Row\";\nimport type UITable from \"sap/ui/table/Table\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport type ObjectPageLayout from \"sap/uxap/ObjectPageLayout\";\nimport type ObjectPageSection from \"sap/uxap/ObjectPageSection\";\nimport type ObjectPageSubSection from \"sap/uxap/ObjectPageSubSection\";\nimport type SubSection from \"../controls/section/SubSection\";\nimport messageButtonHelper from \"./MessageButtonHelper\";\n\ntype MessageCount = {\n\tError: number;\n\tWarning: number;\n\tSuccess: number;\n\tInformation: number;\n};\n\ntype $MessageButtonSettings = $ButtonSettings & {\n\tmessageChange: Function;\n};\n\n@defineUI5Class(\"sap.fe.macros.messages.MessageButton\")\nclass MessageButton extends Button {\n\tconstructor(id?: string | $MessageButtonSettings, settings?: $MessageButtonSettings) {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tsuper(id, settings);\n\t}\n\n\t@aggregation({ type: \"sap.fe.macros.messages.MessageFilter\", multiple: true, singularName: \"customFilter\" })\n\tcustomFilters!: MessageFilter;\n\n\t@event()\n\tmessageChange!: Function;\n\n\tpublic oMessagePopover!: MessagePopover;\n\n\tpublic oItemBinding!: ODataListBinding;\n\n\tprivate oObjectPageLayout: ObjectPageLayout | undefined;\n\n\tprivate sGeneralGroupText = \"\";\n\n\tprivate _setMessageDataTimeout: number | undefined;\n\n\tprivate sViewId = \"\";\n\n\tprivate sLastActionText = \"\";\n\n\tpublic isHiddenDraftEnabled: boolean | undefined;\n\n\tinit(): void {\n\t\tButton.prototype.init.apply(this);\n\t\tthis.isHiddenDraftEnabled = (\n\t\t\tCommonUtils.getAppComponent(this)?.getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft\n\t\t)?.enabled;\n\t\t//press event handler attached to open the message popover\n\t\tthis.attachPress(this.handleMessagePopoverPress, this);\n\t\tthis.oMessagePopover = new MessagePopover();\n\t\tthis.oItemBinding = this.oMessagePopover.getBinding(\"items\") as ODataListBinding;\n\t\tthis.oItemBinding.attachChange(this._setMessageData, this);\n\t\tconst messageButtonId = this.getId();\n\t\tif (messageButtonId) {\n\t\t\tthis.oMessagePopover.addCustomData(new CustomData({ key: \"messageButtonId\", value: messageButtonId })); // TODO check for custom data type\n\t\t}\n\t\tthis.attachModelContextChange(this._applyFiltersAndSort.bind(this));\n\t\tthis.oMessagePopover.attachActiveTitlePress(this._activeTitlePress.bind(this));\n\t}\n\n\t/**\n\t * The method that is called when a user clicks on the MessageButton control.\n\t * @param oEvent Event object\n\t */\n\thandleMessagePopoverPress(oEvent: CoreEvent): void {\n\t\tthis.oMessagePopover.toggle(oEvent.getSource());\n\t}\n\n\t/**\n\t * The method that groups the messages based on the section or subsection they belong to.\n\t * This method force the loading of contexts for all tables before to apply the grouping.\n\t * @param oView Current view.\n\t * @returns Return promise.\n\t * @private\n\t */\n\tasync _applyGroupingAsync(oView: FEView): Promise<void> {\n\t\tconst aWaitForData: Promise<void>[] = [];\n\t\tconst oViewBindingContext = oView.getBindingContext();\n\t\tconst _findTablesRelatedToMessages = (view: View): { table: MDCTable; subsection: ObjectPageSubSection }[] => {\n\t\t\tconst oRes: { table: MDCTable; subsection: ObjectPageSubSection }[] = [];\n\t\t\tconst aMessages = this.oItemBinding.getContexts().map(function (oContext: ODataV4Context) {\n\t\t\t\treturn oContext.getObject();\n\t\t\t});\n\t\t\tconst oViewContext = view.getBindingContext();\n\t\t\tif (oViewContext) {\n\t\t\t\tconst oObjectPage: Control = view.getContent()[0];\n\t\t\t\tmessageHandling.getVisibleSectionsFromObjectPageLayout(oObjectPage).forEach(function (oSection: ObjectPageSection) {\n\t\t\t\t\toSection.getSubSections().forEach(function (oSubSection: ObjectPageSubSection) {\n\t\t\t\t\t\toSubSection.findElements(true).forEach(function (oElem: UI5Element) {\n\t\t\t\t\t\t\tif (oElem.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < aMessages.length; i++) {\n\t\t\t\t\t\t\t\t\tconst oRowBinding = oElem.getRowBinding();\n\t\t\t\t\t\t\t\t\tif (oRowBinding) {\n\t\t\t\t\t\t\t\t\t\tconst sElemeBindingPath = `${oViewContext.getPath()}/${oElem.getRowBinding().getPath()}`;\n\t\t\t\t\t\t\t\t\t\tif (aMessages[i].target.indexOf(sElemeBindingPath) === 0) {\n\t\t\t\t\t\t\t\t\t\t\toRes.push({ table: oElem, subsection: oSubSection });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn oRes;\n\t\t};\n\t\t// Search for table related to Messages and initialize the binding context of the parent subsection to retrieve the data\n\t\tconst oTables = _findTablesRelatedToMessages.bind(this)(oView);\n\t\toTables.forEach(function (_oTable) {\n\t\t\tconst oMDCTable = _oTable.table,\n\t\t\t\toSubsection = _oTable.subsection;\n\t\t\tif (!oMDCTable.getBindingContext() || oMDCTable.getBindingContext()?.getPath() !== oViewBindingContext?.getPath()) {\n\t\t\t\toSubsection.setBindingContext(oViewBindingContext);\n\t\t\t\tif (!oMDCTable.getRowBinding().isLengthFinal()) {\n\t\t\t\t\taWaitForData.push(\n\t\t\t\t\t\tnew Promise(function (resolve: Function) {\n\t\t\t\t\t\t\toMDCTable.getRowBinding().attachEventOnce(\"dataReceived\", function () {\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst waitForGroupingApplied = new Promise((resolve: Function) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._applyGrouping();\n\t\t\t\tresolve();\n\t\t\t}, 0);\n\t\t});\n\t\ttry {\n\t\t\tawait Promise.all(aWaitForData);\n\t\t\toView.getModel().checkMessages();\n\t\t\tawait waitForGroupingApplied;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Error while grouping the messages in the messagePopOver\");\n\t\t}\n\t}\n\n\t/**\n\t * The method that groups the messages based on the section or subsection they belong to.\n\t * @private\n\t */\n\t_applyGrouping(): void {\n\t\tthis.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);\n\t\tif (!this.oObjectPageLayout) {\n\t\t\treturn;\n\t\t}\n\t\tconst messages: MessageItem[] = this.oMessagePopover.getItems();\n\t\tconst section = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout);\n\t\tconst enableBinding = this._checkControlIdInSections(messages, false);\n\t\tif (enableBinding) {\n\t\t\tthis._fnEnableBindings(section);\n\t\t}\n\t\t//Clear messageTargetProperty\n\t\tconst viewId = this._getViewId(this.getId());\n\t\tconst view = UI5Element.getElementById(viewId as string);\n\t\tconst uIModel = view?.getModel(\"internal\") as JSONModel;\n\t\tuIModel?.setProperty(\"/messageTargetProperty\", undefined);\n\t}\n\n\t/**\n\t * The method retrieves the binding context for the refError object.\n\t * The refError contains a map to store the indexes of the rows with errors.\n\t * @param oTable The table for which we want to get the refError Object.\n\t * @returns Context of the refError.\n\t * @private\n\t */\n\t_getTableRefErrorContext(oTable: MDCTable): BaseContext | undefined {\n\t\tconst oModel = oTable.getModel(\"internal\") as JSONModel;\n\t\t//initialize the refError property if it doesn't exist\n\t\tif (!oTable.getBindingContext(\"internal\")?.getProperty(\"refError\")) {\n\t\t\toModel.setProperty(\"refError\", {}, oTable.getBindingContext(\"internal\")!);\n\t\t}\n\t\tconst sRefErrorContextPath =\n\t\t\toTable.getBindingContext(\"internal\")?.getPath() +\n\t\t\t\"/refError/\" +\n\t\t\toTable.getBindingContext()?.getPath().replace(\"/\", \"$\") +\n\t\t\t\"$\" +\n\t\t\toTable.getRowBinding().getPath().replace(\"/\", \"$\");\n\t\tconst oContext = oModel.getContext(sRefErrorContextPath);\n\t\tif (!oContext.getProperty(\"\")) {\n\t\t\toModel.setProperty(\"\", {}, oContext);\n\t\t}\n\t\treturn oContext;\n\t}\n\n\t_updateInternalModel(\n\t\ttableRowContext: ODataV4Context | undefined,\n\t\trowIndex: number | undefined,\n\t\ttableTargetColProperty: string | undefined,\n\t\ttable: MDCTable,\n\t\tmessageObject: Message,\n\t\tisCreationRow?: boolean\n\t): void {\n\t\tlet temp;\n\t\tif (isCreationRow) {\n\t\t\ttemp = {\n\t\t\t\trowIndex: \"CreationRow\",\n\t\t\t\ttargetColProperty: tableTargetColProperty ? tableTargetColProperty : \"\"\n\t\t\t};\n\t\t} else {\n\t\t\ttemp = {\n\t\t\t\trowIndex: tableRowContext ? rowIndex : \"\",\n\t\t\t\ttargetColProperty: tableTargetColProperty ? tableTargetColProperty : \"\"\n\t\t\t};\n\t\t}\n\t\tconst model = table.getModel(\"internal\") as JSONModel,\n\t\t\tcontext = this._getTableRefErrorContext(table);\n\t\t//we first remove the entries with obsolete message ids from the internal model before inserting the new error info :\n\t\tconst aValidMessageIds = Messaging.getMessageModel()\n\t\t\t.getData()\n\t\t\t.map(function (message: Message) {\n\t\t\t\treturn message.getId();\n\t\t\t});\n\t\tlet aObsoleteMessagelIds;\n\t\tif (context?.getProperty(\"\")) {\n\t\t\taObsoleteMessagelIds = Object.keys(context?.getProperty(\"\")).filter(function (internalMessageId) {\n\t\t\t\treturn aValidMessageIds.indexOf(internalMessageId) === -1;\n\t\t\t});\n\t\t\taObsoleteMessagelIds.forEach(function (obsoleteId) {\n\t\t\t\tdelete context?.getProperty(\"\")[obsoleteId];\n\t\t\t});\n\t\t}\n\t\tmodel?.setProperty(\n\t\t\tmessageObject.getId(),\n\t\t\tObject.assign({}, context?.getProperty(messageObject.getId()) ? context.getProperty(messageObject.getId()) : {}, temp),\n\t\t\tcontext\n\t\t);\n\t}\n\n\t/**\n\t * The method that sets groups for transient messages.\n\t * @param message The transient message for which we want to compute and set group.\n\t * @param sActionName The action name.\n\t * @private\n\t */\n\t_setGroupLabelForTransientMsg(message: MessageItem, sActionName: string | undefined): void {\n\t\tthis.sLastActionText = this.sLastActionText\n\t\t\t? this.sLastActionText\n\t\t\t: Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_LAST_ACTION\");\n\n\t\tmessage.setGroupName(`${this.sLastActionText}: ${sActionName}`);\n\t}\n\n\t/**\n\t * The method that groups messages and adds the subtitle.\n\t * @param message The message we use to compute the group and subtitle.\n\t * @param section The section containing the controls.\n\t * @param subSection The subsection containing the controls.\n\t * @param elements List of controls from a subsection related to a message.\n\t * @param hasMultipleSubSections True if there is more than 1 subsection in the section.\n\t * @param actionName The action name, if any.\n\t * @returns Return the control targeted by the message.\n\t * @private\n\t */\n\t_computeMessageGroupAndSubTitle(\n\t\tmessage: MessageItem,\n\t\tsection: ObjectPageSection,\n\t\tsubSection: ObjectPageSubSection,\n\t\telements: UI5Element[],\n\t\thasMultipleSubSections: boolean,\n\t\tactionName: string | undefined\n\t): UI5Element | undefined {\n\t\tconst resourceModel = getResourceModel(section);\n\t\tthis.oItemBinding.detachChange(this._setMessageData, this);\n\t\tconst messageObject = message.getBindingContext(\"message\")?.getObject() as Message;\n\t\tconst setSectionNameInGroup = true;\n\t\tlet element: UI5Element,\n\t\t\ttable: MDCTable | undefined,\n\t\t\ttargetTableInfo = {} as TargetTableInfoType,\n\t\t\tl,\n\t\t\trowIndex: number | undefined,\n\t\t\ttargetedControl: UI5Element | undefined,\n\t\t\tisCreationRow: boolean;\n\t\tconst isBackEndMessage = new RegExp(\"^/\").test(messageObject?.getTargets()[0]);\n\t\tif (isBackEndMessage) {\n\t\t\tfor (l = 0; l < elements.length; l++) {\n\t\t\t\telement = elements[l];\n\t\t\t\ttargetedControl = element;\n\t\t\t\tif (element.isA(\"sap.m.Table\") || (element as UI5Element).isA(\"sap.ui.table.Table\")) {\n\t\t\t\t\ttable = element.getParent() as MDCTable;\n\t\t\t\t\tconst rowBinding = table.getRowBinding();\n\t\t\t\t\tconst fnCallbackSetGroupName = (): void => {\n\t\t\t\t\t\tthis._setGroupLabelForTransientMsg(message, actionName);\n\t\t\t\t\t};\n\t\t\t\t\tif (rowBinding && rowBinding.isLengthFinal() && table.getBindingContext()) {\n\t\t\t\t\t\tconst obj = messageHandling.getTableColumnDataAndSetSubtile(\n\t\t\t\t\t\t\tmessageObject,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\trowBinding,\n\t\t\t\t\t\t\tactionName,\n\t\t\t\t\t\t\tsetSectionNameInGroup,\n\t\t\t\t\t\t\tfnCallbackSetGroupName\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttargetTableInfo = obj.oTargetTableInfo;\n\t\t\t\t\t\tif (obj.subTitle) {\n\t\t\t\t\t\t\tmessage.setSubtitle(obj.subTitle);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmessage.setActiveTitle(\n\t\t\t\t\t\t\t!!targetTableInfo.oTableRowContext &&\n\t\t\t\t\t\t\t\t!targetTableInfo.oTableRowContext?.isInactive() && // check if the rowcontext is active\n\t\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext.getPath() !==\n\t\t\t\t\t\t\t\t\tmessage.getBindingContext(\"message\")?.getProperty(\"target\").replace(/\\/$/, \"\") // check if the target of the message is not the row itself (remove the last / if presents)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (targetTableInfo.oTableRowContext && !targetTableInfo.oTableRowContext.isInactive()) {\n\t\t\t\t\t\t\tthis._formatMessageDescription(\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\t\t\t\ttargetTableInfo.sTableTargetColName,\n\t\t\t\t\t\t\t\ttable\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trowIndex = targetTableInfo.oTableRowContext && targetTableInfo.oTableRowContext.getIndex();\n\t\t\t\t\t\tthis._updateInternalModel(\n\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\ttargetTableInfo.sTableTargetColProperty,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\tmessageObject\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmessage.setActiveTitle(true);\n\n\t\t\t\t\tif (message.getSubtitle() === \"\") {\n\t\t\t\t\t\tlet formElement: FormElement | undefined;\n\t\t\t\t\t\tlet parent = targetedControl.getParent();\n\t\t\t\t\t\twhile (parent) {\n\t\t\t\t\t\t\tif (parent && parent.isA<FormElement>(\"sap.ui.layout.form.FormElement\")) {\n\t\t\t\t\t\t\t\tformElement = parent;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparent = parent.getParent();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (formElement) {\n\t\t\t\t\t\t\tmessage.setSubtitle(formElement.getLabel() as string);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//check if the targeted control is a child of one of the other controls\n\t\t\t\t\tconst isTargetedControlOrphan = messageHandling.bIsOrphanElement(targetedControl, elements);\n\t\t\t\t\tif (isTargetedControlOrphan) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//There is only one elt as this is a frontEnd message\n\t\t\ttargetedControl = elements[0];\n\t\t\ttable = this._getMdcTable(targetedControl);\n\t\t\ttargetTableInfo = {} as TargetTableInfoType;\n\t\t\tif (table) {\n\t\t\t\ttargetTableInfo.tableHeader = table.getHeader();\n\t\t\t\tconst targetColumnIndex = this._getTableColumnIndex(targetedControl);\n\t\t\t\ttargetTableInfo.sTableTargetColProperty =\n\t\t\t\t\ttargetColumnIndex !== undefined && targetColumnIndex > -1\n\t\t\t\t\t\t? table.getColumns()[targetColumnIndex].getPropertyKey()\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\ttargetTableInfo.sTableTargetColName =\n\t\t\t\t\ttargetTableInfo.sTableTargetColProperty && targetColumnIndex !== undefined && targetColumnIndex > -1\n\t\t\t\t\t\t? table.getColumns()[targetColumnIndex].getHeader()\n\t\t\t\t\t\t: undefined;\n\t\t\t\tisCreationRow = this._getTableRow(targetedControl)?.isA<CreationRow>(\"sap.ui.table.CreationRow\") ?? false;\n\t\t\t\tif (!isCreationRow) {\n\t\t\t\t\trowIndex = this._getTableRowIndex(targetedControl);\n\t\t\t\t\ttargetTableInfo.oTableRowBindingContexts = table.getRowBinding().getCurrentContexts();\n\t\t\t\t\ttargetTableInfo.oTableRowContext =\n\t\t\t\t\t\trowIndex !== undefined ? targetTableInfo.oTableRowBindingContexts[rowIndex] : undefined;\n\t\t\t\t}\n\t\t\t\tconst messageSubtitle = messageHandling.getMessageSubtitle(\n\t\t\t\t\tmessageObject,\n\t\t\t\t\ttargetTableInfo.oTableRowBindingContexts,\n\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\ttargetTableInfo.sTableTargetColName,\n\t\t\t\t\ttable,\n\t\t\t\t\tisCreationRow,\n\t\t\t\t\ttargetColumnIndex === 0 && (targetedControl as mdcField).getValueState() === \"Error\"\n\t\t\t\t\t\t? (targetedControl as Control)\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t\t//set the subtitle\n\t\t\t\tif (messageSubtitle) {\n\t\t\t\t\tmessage.setSubtitle(messageSubtitle);\n\t\t\t\t}\n\t\t\t\tmessage.setActiveTitle(!!targetTableInfo.oTableRowContext);\n\t\t\t\tif (targetTableInfo.oTableRowContext) {\n\t\t\t\t\tthis._formatMessageDescription(message, targetTableInfo.oTableRowContext, targetTableInfo.sTableTargetColName, table);\n\t\t\t\t}\n\t\t\t\tthis._updateInternalModel(\n\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\trowIndex,\n\t\t\t\t\ttargetTableInfo.sTableTargetColProperty,\n\t\t\t\t\ttable,\n\t\t\t\t\tmessageObject,\n\t\t\t\t\tisCreationRow\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (setSectionNameInGroup) {\n\t\t\tconst includeTableGroupName = this._checkMergeLogicForMessageGrouping(section, subSection, hasMultipleSubSections);\n\t\t\tconst sectionBasedGroupName = messageHandling.createSectionGroupName(\n\t\t\t\tsection,\n\t\t\t\tsubSection,\n\t\t\t\thasMultipleSubSections,\n\t\t\t\ttargetTableInfo,\n\t\t\t\tresourceModel,\n\t\t\t\tincludeTableGroupName\n\t\t\t);\n\n\t\t\tmessage.setGroupName(sectionBasedGroupName);\n\t\t\tconst viewId = this._getViewId(this.getId());\n\t\t\tconst view = UI5Element.getElementById(viewId as string);\n\t\t\tconst messageTargetProperty = messageObject.getTargets()[0] && messageObject.getTargets()[0].split(\"/\").pop();\n\t\t\tconst uIModel = view?.getModel(\"internal\") as JSONModel;\n\t\t\tif (\n\t\t\t\tuIModel &&\n\t\t\t\tuIModel.getProperty(\"/messageTargetProperty\") &&\n\t\t\t\tmessageTargetProperty &&\n\t\t\t\tmessageTargetProperty === uIModel.getProperty(\"/messageTargetProperty\")\n\t\t\t) {\n\t\t\t\tthis.oMessagePopover.fireActiveTitlePress({ item: message });\n\t\t\t\tuIModel.setProperty(\"/messageTargetProperty\", false);\n\t\t\t}\n\t\t}\n\t\tthis.oItemBinding.attachChange(this._setMessageData, this);\n\t\treturn targetedControl;\n\t}\n\n\t/**\n\t * The method to check if the section and subsection has single table control.\n\t * @param section ObjectPage section.\n\t * @param subSection ObjectPage sub section.\n\t * @param hasMultipleSubSections True if there is more than 1 subsection in the section.\n\t * @returns Returns boolean value for the single control inside the section, by default it is true.\n\t * @private\n\t */\n\t_checkMergeLogicForMessageGrouping(\n\t\tsection: ObjectPageSection,\n\t\tsubSection: ObjectPageSubSection,\n\t\thasMultipleSubSections: boolean\n\t): boolean {\n\t\tconst viewId = this._getViewId(this.getId());\n\t\tconst view = viewId ? (UI5Element.getElementById(viewId) as View) : undefined;\n\t\tlet bIncludeTableGroupName = true;\n\t\tconst singleSubsectionInPageLayout =\n\t\t\t!hasMultipleSubSections && (view?.getViewData() as ObjectPageManifestSettings)?.sectionLayout === \"Page\";\n\t\tconst multiSubsectionInTabLayout =\n\t\t\thasMultipleSubSections && (view?.getViewData() as ObjectPageManifestSettings)?.sectionLayout === \"Tabs\";\n\t\tif (singleSubsectionInPageLayout) {\n\t\t\tconst block = subSection.getBlocks();\n\t\t\tconst content = block.length === 1 ? (block[0].getAggregation(\"content\") as ManagedObject) : undefined;\n\t\t\tif (content?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t}\n\t\t} else if (multiSubsectionInTabLayout) {\n\t\t\tlet content;\n\t\t\tconst blocks = subSection.getBlocks();\n\t\t\t// In case of Reference Facet, the first block will be SubSectionBlock\n\t\t\tif (blocks.length === 1 && blocks[0]?.isA<SubSectionBlock>(\"sap.fe.templates.ObjectPage.controls.SubSectionBlock\")) {\n\t\t\t\tcontent = blocks[0].getAggregation(\"content\") as ManagedObject;\n\t\t\t\tif (content?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t\t} else if ((content as DynamicSideContent)?.isA(\"sap.ui.layout.DynamicSideContent\")) {\n\t\t\t\t\tcontent =\n\t\t\t\t\t\t(content as DynamicSideContent).getMainContent instanceof Function &&\n\t\t\t\t\t\t(content as DynamicSideContent)?.getMainContent();\n\t\t\t\t\tif (content && content.length === 1 && content[0]?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn bIncludeTableGroupName;\n\t}\n\n\t_checkControlIdInSections(messages: MessageItem[], enableBinding?: boolean): boolean | void {\n\t\tlet section, aSubSections, message, i, j, k;\n\t\tthis.sGeneralGroupText = this.sGeneralGroupText\n\t\t\t? this.sGeneralGroupText\n\t\t\t: Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t\t//Get all sections from the object page layout\n\t\tconst aVisibleSections = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout!);\n\t\tif (aVisibleSections) {\n\t\t\tconst viewId = this._getViewId(this.getId());\n\t\t\tconst oView = viewId ? (UI5Element.getElementById(viewId) as View) : undefined;\n\t\t\tconst sActionName = oView?.getBindingContext(\"internal\")?.getProperty(\"sActionName\");\n\t\t\tif (sActionName) {\n\t\t\t\t(oView?.getBindingContext(\"internal\") as InternalModelContext).setProperty(\"sActionName\", null);\n\t\t\t}\n\t\t\tfor (i = messages.length - 1; i >= 0; --i) {\n\t\t\t\t// Loop over all messages\n\t\t\t\tmessage = messages[i];\n\t\t\t\tlet bIsGeneralGroupName = true;\n\t\t\t\tfor (j = aVisibleSections.length - 1; j >= 0; --j) {\n\t\t\t\t\tlet shouldBreak = false;\n\t\t\t\t\t// Loop over all visible sections\n\t\t\t\t\tsection = aVisibleSections[j];\n\t\t\t\t\taSubSections = section.getSubSections();\n\t\t\t\t\tfor (k = aSubSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\t\tconst subSection = aSubSections[k];\n\t\t\t\t\t\tconst oMessageObject = message?.getBindingContext(\"message\")?.getObject();\n\t\t\t\t\t\tthis.sGeneralGroupText = this._getGeneralGroupText(oView, oMessageObject);\n\t\t\t\t\t\tconst aControls = messageHandling.getControlFromMessageRelatingToSubSection(subSection, oMessageObject);\n\t\t\t\t\t\tif (aControls.length > 0) {\n\t\t\t\t\t\t\tconst oTargetedControl = this._computeMessageGroupAndSubTitle(\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\tsection,\n\t\t\t\t\t\t\t\tsubSection,\n\t\t\t\t\t\t\t\taControls,\n\t\t\t\t\t\t\t\taSubSections.length > 1,\n\t\t\t\t\t\t\t\tsActionName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbIsGeneralGroupName = false;\n\t\t\t\t\t\t\t// if we found table that matches with the message, we don't stop the loop\n\t\t\t\t\t\t\t// in case we find an additional control (eg mdc field) that also match with the message\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\toTargetedControl &&\n\t\t\t\t\t\t\t\t!oTargetedControl.isA(\"sap.m.Table\") &&\n\t\t\t\t\t\t\t\t!(oTargetedControl as UI5Element).isA(\"sap.ui.table.Table\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshouldBreak = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (shouldBreak) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (bIsGeneralGroupName) {\n\t\t\t\t\tconst oMessageObject = message.getBindingContext(\"message\")?.getObject();\n\t\t\t\t\tif (this.isHiddenDraftEnabled) {\n\t\t\t\t\t\tmessage.setActiveTitle(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.setActiveTitle(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (oMessageObject.persistent && sActionName) {\n\t\t\t\t\t\tthis._setGroupLabelForTransientMsg(message, sActionName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.setGroupName(this.sGeneralGroupText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!enableBinding && message.getGroupName() === this.sGeneralGroupText && this._findTargetForMessage(message)) {\n\t\t\t\t\t// when the section is not available in the view port\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//Fetches the group name of the message based on enabledment of hidden draft and page where error is present(current page/other page)\n\t_getGeneralGroupText(oView: View | undefined, oMessageObject: Message): string {\n\t\tconst viewPath = oView?.getBindingContext()?.getPath();\n\t\tconst messageTargetPath = oMessageObject?.getTargets()[0];\n\t\tif (this.isHiddenDraftEnabled && viewPath && !messageTargetPath.includes(viewPath)) {\n\t\t\treturn Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_OTHER_PAGES\");\n\t\t} else {\n\t\t\treturn Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t\t}\n\t}\n\n\t_findTargetForMessage(message: MessageItem): boolean {\n\t\tconst messageObject = message.getBindingContext(\"message\") && message.getBindingContext(\"message\")?.getObject();\n\t\tif (messageObject && messageObject.target) {\n\t\t\tconst oMetaModel = this.oObjectPageLayout?.getModel()?.getMetaModel() as ODataMetaModel,\n\t\t\t\tcontextPath = oMetaModel && oMetaModel.getMetaPath(messageObject.target),\n\t\t\t\toContextPathMetadata = oMetaModel && oMetaModel.getObject(contextPath);\n\t\t\tif (oContextPathMetadata && oContextPathMetadata.$kind === \"Property\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Enable bindings of sub section content (blocks, more blocks, and actions).\n\t * @param subSection Object page sub section\n\t */\n\t_fnEnableSubSectionBinding(subSection: ObjectPageSubSection): void {\n\t\tsubSection.getBlocks().forEach((block) => block.setBindingContext(undefined));\n\t\tsubSection.getMoreBlocks().forEach((subBlock) => subBlock.setBindingContext(undefined));\n\t\tsubSection.getActions().forEach((actions) => actions.setBindingContext(undefined));\n\t}\n\n\t_fnEnableBindings(aSections: ObjectPageSection[]): void {\n\t\tfor (let iSection = 0; iSection < aSections.length; iSection++) {\n\t\t\tconst oSection = aSections[iSection];\n\t\t\tconst aSubSections = oSection.getSubSections();\n\t\t\tfor (let iSubSection = 0; iSubSection < aSubSections.length; iSubSection++) {\n\t\t\t\tconst oSubSection = aSubSections[iSubSection];\n\t\t\t\tconst oAllBlocks = oSubSection.getBlocks();\n\t\t\t\tif (oAllBlocks) {\n\t\t\t\t\tthis._fnEnableSubSectionBinding(oSubSection);\n\t\t\t\t}\n\t\t\t\tif (oSubSection.getBindingContext()) {\n\t\t\t\t\tthis._findMessageGroupAfterRebinding();\n\t\t\t\t\t(oSubSection.getBindingContext() as ODataV4Context)\n\t\t\t\t\t\t.getBinding()\n\t\t\t\t\t\t.attachDataReceived(this._findMessageGroupAfterRebinding.bind(this));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_findMessageGroupAfterRebinding(): void {\n\t\tconst aMessages = this.oMessagePopover.getItems();\n\t\tthis._checkControlIdInSections(aMessages, true);\n\t}\n\n\t/**\n\t * The method that retrieves the view ID (HTMLView/XMLView/JSONview/JSView/Templateview) of any control.\n\t * @param sControlId ID of the control needed to retrieve the view ID\n\t * @returns The view ID of the control\n\t */\n\t_getViewId(sControlId: string): string | undefined {\n\t\tlet sViewId,\n\t\t\toControl: ManagedObject | undefined | null = UI5Element.getElementById(sControlId);\n\t\twhile (oControl) {\n\t\t\tif (oControl instanceof View) {\n\t\t\t\tsViewId = oControl.getId();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\toControl = oControl.getParent();\n\t\t}\n\t\treturn sViewId;\n\t}\n\n\t_setLongtextUrlDescription(oDiagnosisTitle: FormattedText): void {\n\t\tthis.oMessagePopover.setAsyncDescriptionHandler(function (config: {\n\t\t\titem: MessageItem;\n\t\t\tpromise: {\n\t\t\t\tresolve: Function;\n\t\t\t\treject: Function;\n\t\t\t};\n\t\t}) {\n\t\t\t// Here we can fetch the data and concatenate it to the old one\n\t\t\t// By default, the longtextUrl fetching will overwrite the description (with the default behaviour)\n\t\t\t// Here as we have overwritten the default async handler, which fetches and replaces the description of the item\n\t\t\t// we can manually modify it to include whatever needed.\n\t\t\tconst sLongTextUrl = config.item.getLongtextUrl();\n\t\t\tif (sLongTextUrl) {\n\t\t\t\tjQuery.ajax({\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\turl: sLongTextUrl,\n\t\t\t\t\tsuccess: function (data: string) {\n\t\t\t\t\t\tconst sDiagnosisText = oDiagnosisTitle.getHtmlText() + data;\n\t\t\t\t\t\tconst oldDescription = config.item.getDescription() ?? \"\";\n\t\t\t\t\t\tconfig.item.setDescription(`${oldDescription}${sDiagnosisText}`);\n\t\t\t\t\t\tconfig.promise.resolve();\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\tconst sError = `A request has failed for long text data. URL: ${sLongTextUrl}`;\n\t\t\t\t\t\tLog.error(sError);\n\t\t\t\t\t\tconfig.promise.reject(sError);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * It displays the row information of the error existing in the table.\n\t * @param table\n\t * @param tableRowContext\n\t * @param tableColProperty\n\t * @returns rowInformation\n\t */\n\n\tprocessTableColumnProperties(table: Table, tableRowContext: ODataV4Context, tableColProperty: TableColumnProperties): string {\n\t\tlet rowInformation = \"\";\n\n\t\tconst tableColBindingContextTextAnnotation = messageHandling.getTableColBindingContextForTextAnnotation(\n\t\t\ttable,\n\t\t\ttableRowContext,\n\t\t\ttableColProperty\n\t\t);\n\t\tconst tableColTextAnnotationPath = tableColBindingContextTextAnnotation\n\t\t\t? tableColBindingContextTextAnnotation.getObject(\"$Path\")\n\t\t\t: undefined;\n\t\tconst tableColTextArrangement =\n\t\t\ttableColTextAnnotationPath && tableColBindingContextTextAnnotation\n\t\t\t\t? tableColBindingContextTextAnnotation.getObject(\"@com.sap.vocabularies.UI.v1.TextArrangement/$EnumMember\")\n\t\t\t\t: undefined;\n\t\tconst labelWithValue = (table.getParent() as TableAPI)?.getTableColValue(\n\t\t\ttableRowContext,\n\t\t\ttableColTextAnnotationPath,\n\t\t\ttableColTextArrangement,\n\t\t\ttableColProperty\n\t\t);\n\t\trowInformation += `${labelWithValue}`;\n\n\t\treturn rowInformation;\n\t}\n\n\t/**\n\t * It computes the column information.\n\t * @param message\n\t * @param tableTargetColName\n\t * @param rowInformation\n\t * @param table\n\t * @returns columnInfo\n\t */\n\n\tcomputeColumnInfo(message: MessageItem, tableTargetColName: string | undefined, rowInformation: string[], table: Table): string {\n\t\tconst resourceModel = getResourceModel(table);\n\t\tconst msgObj = message.getBindingContext(\"message\")?.getObject();\n\t\tconst colFromTableSettings = messageHandling.fetchColumnInfo(msgObj, table);\n\t\tlet columnInfo = \"\";\n\n\t\tif (tableTargetColName) {\n\t\t\t// if column in present in table definition\n\t\t\tcolumnInfo = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\")}: ${tableTargetColName}`;\n\t\t} else if (colFromTableSettings) {\n\t\t\tif (colFromTableSettings.availability === \"Hidden\") {\n\t\t\t\t// if column in neither in table definition nor personalization\n\t\t\t\tif (message.getType() === \"Error\") {\n\t\t\t\t\tcolumnInfo =\n\t\t\t\t\t\trowInformation.length > 0\n\t\t\t\t\t\t\t? `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR\")} ${rowInformation.join(\", \")}` + \".\"\n\t\t\t\t\t\t\t: `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR\")}` + \".\";\n\t\t\t\t} else {\n\t\t\t\t\tcolumnInfo =\n\t\t\t\t\t\trowInformation.length > 0\n\t\t\t\t\t\t\t? `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC\")} ${rowInformation.join(\", \")}` + \".\"\n\t\t\t\t\t\t\t: `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC\")}` + \".\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if column is not in table definition but in personalization\n\t\t\t\t//if no navigation to sub op then remove link to error field BCP : 2280168899\n\t\t\t\tif (!this._navigationConfigured(table)) {\n\t\t\t\t\tmessage.setActiveTitle(false);\n\t\t\t\t}\n\t\t\t\tcolumnInfo = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\")}: ${\n\t\t\t\t\tcolFromTableSettings.label\n\t\t\t\t} (${resourceModel.getText(\"T_COLUMN_INDICATOR_IN_TABLE_DEFINITION\")})`;\n\t\t\t}\n\t\t}\n\n\t\treturn columnInfo;\n\t}\n\n\t/**\n\t * It displays the row information of the error existing in the table.\n\t * @param message\n\t * @param tableRowContext\n\t * @param tableTargetColName\n\t * @param table\n\t */\n\n\t_formatMessageDescription(\n\t\tmessage: MessageItem,\n\t\ttableRowContext: ODataV4Context,\n\t\ttableTargetColName: string | undefined,\n\t\ttable: MDCTable\n\t): void {\n\t\tconst resourceModel = getResourceModel(table);\n\t\tconst tableColProperty = (table.getParent() as TableAPI)?.getTableColumnVisibilityInfo(tableRowContext);\n\n\t\tconst rowInformation: string[] = [];\n\t\ttableColProperty?.forEach(({ key, visibility }) => {\n\t\t\trowInformation.push(this.processTableColumnProperties(table, tableRowContext, [{ key, visibility }]));\n\t\t});\n\n\t\tconst columnInfo = this.computeColumnInfo(message, tableTargetColName, rowInformation, table);\n\n\t\tconst fieldsAffectedTitle = new FormattedText({\n\t\t\thtmlText: `<html><body><strong>${resourceModel.getText(\"T_FIELDS_AFFECTED_TITLE\")}</strong></body></html><br>`\n\t\t});\n\t\tlet fieldAffectedText: string;\n\t\tif (Array.isArray(rowInformation) && rowInformation.length > 0) {\n\t\t\tif (rowInformation.length === 1) {\n\t\t\t\t// If there’s only one column in the table, display it in a single line.\n\t\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t\t)}: ${table.getHeader()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW\"\n\t\t\t\t)}: ${rowInformation}<br>${columnInfo}<br>`;\n\t\t\t} else {\n\t\t\t\t// If there are multiple columns in the table, display them in multiple lines.\n\t\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t\t)}: ${table.getHeader()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW\"\n\t\t\t\t)}:<br>&emsp; ${rowInformation.join(\"<br>&emsp; \")}<br>${columnInfo}<br>`;\n\t\t\t}\n\t\t} else if (columnInfo == \"\" || !columnInfo) {\n\t\t\tfieldAffectedText = \"\";\n\t\t} else {\n\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t)}: ${table.getHeader()}<br>${columnInfo}<br>`;\n\t\t}\n\n\t\tconst diagnosisTitle = new FormattedText({\n\t\t\thtmlText: `<html><body><strong>${resourceModel.getText(\"T_DIAGNOSIS_TITLE\")}</strong></body></html><br>`\n\t\t});\n\t\t// get the UI messages from the message context to set it to Diagnosis section\n\t\tconst uIMessageDescription = message.getBindingContext(\"message\")?.getObject().description;\n\t\t//set the description to undefined to reset it below\n\t\tmessage.setDescription(undefined);\n\t\tlet diagnosisText = \"\";\n\t\tlet messageDescriptionContent = \"\";\n\t\tif (message.getLongtextUrl()) {\n\t\t\tmessageDescriptionContent = fieldAffectedText ? `${fieldAffectedText}<br>` : \"\";\n\t\t\tmessage.setDescription(messageDescriptionContent);\n\t\t\tthis._setLongtextUrlDescription(diagnosisTitle);\n\t\t} else if (uIMessageDescription) {\n\t\t\tdiagnosisText = `${diagnosisTitle.getHtmlText()}<br>${uIMessageDescription}`;\n\t\t\tmessageDescriptionContent = `${fieldAffectedText}<br>${diagnosisText}`;\n\t\t\tmessage.setDescription(messageDescriptionContent);\n\t\t} else {\n\t\t\tmessage.setDescription(fieldAffectedText);\n\t\t}\n\t}\n\n\t/**\n\t * When there are no messages to show in the Message Box.\n\t */\n\thandleNoMessages(): void {\n\t\tthis.setVisible(false);\n\t\tthis.fireEvent(\"messageChange\", {\n\t\t\tiMessageLength: 0\n\t\t});\n\n\t\tconst view = UI5Element.getElementById(this.sViewId) as FEView | undefined;\n\t\tif (view) {\n\t\t\t// If there are no messages to show, we reset 'messageTargetProperty'.\n\t\t\tview.getModel(\"internal\").setProperty(\"/messageTargetProperty\", undefined);\n\t\t}\n\t}\n\n\t/**\n\t * Method to set the button text, count and icon property based upon the message items\n\t * ButtonType:  Possible settings for warning and error messages are 'critical' and 'negative'.\n\t * @private\n\t */\n\t_setMessageData(): void {\n\t\tclearTimeout(this._setMessageDataTimeout);\n\n\t\tthis._setMessageDataTimeout = setTimeout(async () => {\n\t\t\tconst sIcon = \"\",\n\t\t\t\toMessages = this.oMessagePopover.getItems(),\n\t\t\t\toMessageCount: MessageCount = { Error: 0, Warning: 0, Success: 0, Information: 0 },\n\t\t\t\toResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!,\n\t\t\t\tiMessageLength = oMessages.length;\n\t\t\tlet sButtonType = ButtonType.Default,\n\t\t\t\tsMessageKey = \"\",\n\t\t\t\tsTooltipText = \"\",\n\t\t\t\tsMessageText = \"\";\n\t\t\tif (iMessageLength > 0) {\n\t\t\t\tfor (let i = 0; i < iMessageLength; i++) {\n\t\t\t\t\tif (!oMessages[i].getType() || oMessages[i].getType().toString() === \"\") {\n\t\t\t\t\t\t++oMessageCount[\"Information\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++oMessageCount[oMessages[i].getType() as keyof MessageCount];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oMessageCount[MessageType.Error] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Negative;\n\t\t\t\t} else if (oMessageCount[MessageType.Warning] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Critical;\n\t\t\t\t} else if (oMessageCount[MessageType.Success] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Success;\n\t\t\t\t} else if (oMessageCount[MessageType.Information] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Neutral;\n\t\t\t\t}\n\n\t\t\t\tconst totalNumberOfMessages =\n\t\t\t\t\toMessageCount[MessageType.Error] +\n\t\t\t\t\toMessageCount[MessageType.Warning] +\n\t\t\t\t\toMessageCount[MessageType.Success] +\n\t\t\t\t\toMessageCount[MessageType.Information];\n\n\t\t\t\tthis.setText(totalNumberOfMessages.toString());\n\n\t\t\t\tif (oMessageCount.Error === 1) {\n\t\t\t\t\tsMessageKey = \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TITLE_ERROR\";\n\t\t\t\t} else if (oMessageCount.Error > 1) {\n\t\t\t\t\tsMessageKey = \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_MULTIPLE_ERROR_TOOLTIP\";\n\t\t\t\t} else if (!oMessageCount.Error && oMessageCount.Warning) {\n\t\t\t\t\tsMessageKey = \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_WARNING_TOOLTIP\";\n\t\t\t\t} else if (!oMessageCount.Error && !oMessageCount.Warning && oMessageCount.Information) {\n\t\t\t\t\tsMessageKey = \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO\";\n\t\t\t\t} else if (!oMessageCount.Error && !oMessageCount.Warning && !oMessageCount.Information && oMessageCount.Success) {\n\t\t\t\t\tsMessageKey = \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_SUCCESS\";\n\t\t\t\t}\n\t\t\t\tif (sMessageKey) {\n\t\t\t\t\tsMessageText = oResourceBundle.getText(sMessageKey);\n\t\t\t\t\tsTooltipText = oMessageCount.Error ? `${oMessageCount.Error} ${sMessageText}` : sMessageText;\n\t\t\t\t\tthis.setTooltip(sTooltipText);\n\t\t\t\t}\n\t\t\t\tthis.setIcon(sIcon);\n\t\t\t\tthis.setType(sButtonType);\n\t\t\t\tthis.setVisible(true);\n\t\t\t\tconst oView = UI5Element.getElementById(this.sViewId) as FEView;\n\t\t\t\tif (oView) {\n\t\t\t\t\tconst oPageReady = oView.getController().pageReady;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait oPageReady.waitPageReady();\n\t\t\t\t\t\tawait this._applyGroupingAsync(oView);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tLog.error(\"fail grouping messages\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.fireEvent(\"messageChange\", {\n\t\t\t\t\t\tiMessageLength: iMessageLength\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (iMessageLength > 1) {\n\t\t\t\t\tthis.oMessagePopover.navigateBack();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.handleNoMessages();\n\t\t\t}\n\t\t}, 100) as unknown as number;\n\t}\n\n\t/**\n\t * The method that is called when a user clicks on the title of the message.\n\t * @private\n\t * @param oEvent Event object passed from the handler\n\t */\n\tasync _activeTitlePress(oEvent: MessagePopover$ActiveTitlePressEvent): Promise<void> {\n\t\tconst oInternalModelContext = this.getBindingContext(\"pageInternal\") as InternalModelContext;\n\t\toInternalModelContext.setProperty(\"errorNavigationSectionFlag\", true);\n\t\tconst oItem = oEvent.getParameter(\"item\"),\n\t\t\toMessage = oItem?.getBindingContext(\"message\")?.getObject(),\n\t\t\tbIsBackendMessage = new RegExp(\"^/\").test(oMessage.getTargets()[0]),\n\t\t\toView = UI5Element.getElementById(this.sViewId) as View;\n\t\tif (!oItem) {\n\t\t\treturn;\n\t\t}\n\t\tlet oControl: UI5Element | undefined, sSectionTitle;\n\t\tconst _defaultFocus = function (message: Message, mdcTable: MDCTable): void {\n\t\t\tconst focusInfo = { preventScroll: true, targetInfo: message };\n\t\t\tmdcTable.focus(focusInfo);\n\t\t};\n\n\t\tlet bIsGeneralGroupName = true;\n\t\tlet section, subSections, message, i, j, k;\n\t\tconst visibleSections = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout!);\n\t\tif (visibleSections) {\n\t\t\tconst messages = this.oMessagePopover.getItems();\n\t\t\tfor (i = messages.length - 1; i >= 0; --i) {\n\t\t\t\t// Loop over all messages\n\t\t\t\tmessage = messages[i];\n\t\t\t\tfor (j = visibleSections.length - 1; j >= 0; --j) {\n\t\t\t\t\t// Loop over all visible sections\n\t\t\t\t\tsection = visibleSections[j];\n\t\t\t\t\tsubSections = section.getSubSections();\n\t\t\t\t\tfor (k = subSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\t\tconst subSection = subSections[k];\n\t\t\t\t\t\tconst messageObject = message?.getBindingContext(\"message\")?.getObject();\n\t\t\t\t\t\tconst controls = messageHandling.getControlFromMessageRelatingToSubSection(subSection, messageObject);\n\t\t\t\t\t\tif (controls.length > 0) {\n\t\t\t\t\t\t\tbIsGeneralGroupName = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst oTargetMdcTable = oMessage.controlIds\n\t\t\t.map((controlId: string) => {\n\t\t\t\tconst control = UI5Element.getElementById(controlId);\n\t\t\t\tconst parentControl = control && control.getParent();\n\n\t\t\t\tif (this.isHiddenDraftEnabled) {\n\t\t\t\t\treturn parentControl?.isA(\"sap.ui.mdc.Table\") ? parentControl : undefined;\n\t\t\t\t}\n\t\t\t\treturn parentControl &&\n\t\t\t\t\tparentControl.isA(\"sap.ui.mdc.Table\") &&\n\t\t\t\t\toItem.getGroupName().includes((parentControl as Table).getHeader())\n\t\t\t\t\t? parentControl\n\t\t\t\t\t: null;\n\t\t\t})\n\t\t\t.reduce(function (acc: Control, val: Control) {\n\t\t\t\treturn val ? val : acc;\n\t\t\t});\n\n\t\t//check if the pressed item is related to a table control\n\t\tif (oTargetMdcTable) {\n\t\t\tif (bIsBackendMessage) {\n\t\t\t\tsSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\t\t\ttry {\n\t\t\t\t\tif (this.isHiddenDraftEnabled && (oTargetMdcTable.getId() !== this.sViewId || bIsGeneralGroupName)) {\n\t\t\t\t\t\tconst viewId = this._getViewId(oTargetMdcTable.getId());\n\t\t\t\t\t\t((UI5Element.getElementById(viewId) as View).getController() as ObjectPageController)._routing.navigateToContext(\n\t\t\t\t\t\t\toTargetMdcTable.getBindingContext()\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this._navigateFromMessageToSectionTableInIconTabBarMode(\n\t\t\t\t\t\t\toTargetMdcTable,\n\t\t\t\t\t\t\tthis.oObjectPageLayout!,\n\t\t\t\t\t\t\tsSectionTitle\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst oRefErrorContext = this._getTableRefErrorContext(oTargetMdcTable);\n\t\t\t\t\tconst oRefError = oRefErrorContext?.getProperty(oItem.getBindingContext(\"message\")?.getObject().getId());\n\t\t\t\t\tconst _setFocusOnTargetField = async (targetMdcTable: MDCTable, iRowIndex: number): Promise<boolean | undefined> => {\n\t\t\t\t\t\tconst aTargetMdcTableRow = this._getMdcTableRows(targetMdcTable),\n\t\t\t\t\t\t\tiFirstVisibleRow = this._getGridTable(targetMdcTable)?.getFirstVisibleRow() ?? 0;\n\t\t\t\t\t\tif (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {\n\t\t\t\t\t\t\tconst oTargetRow = aTargetMdcTableRow[iRowIndex - iFirstVisibleRow],\n\t\t\t\t\t\t\t\toTargetCell = this.getTargetCell(oTargetRow, oMessage);\n\t\t\t\t\t\t\tif (oTargetCell) {\n\t\t\t\t\t\t\t\tthis.setFocusToControl(oTargetCell);\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// control not found on table\n\t\t\t\t\t\t\t\tconst errorProperty = oMessage.getTargets()[0].split(\"/\").pop();\n\t\t\t\t\t\t\t\tif (errorProperty) {\n\t\t\t\t\t\t\t\t\t(oView.getModel(\"internal\") as JSONModel).setProperty(\"/messageTargetProperty\", errorProperty);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (this._navigationConfigured(targetMdcTable)) {\n\t\t\t\t\t\t\t\t\treturn (oView.getController() as PageController)._routing.navigateForwardToContext(\n\t\t\t\t\t\t\t\t\t\toTargetRow.getBindingContext() as ODataV4Context\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t};\n\t\t\t\t\tif (oTargetMdcTable.data(\"tableType\") === \"GridTable\" && oRefError.rowIndex !== \"\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait oTargetMdcTable.scrollToIndex(oRefError.rowIndex);\n\t\t\t\t\t\t\tsetTimeout(async function () {\n\t\t\t\t\t\t\t\tconst focusOnTargetField = await _setFocusOnTargetField(oTargetMdcTable, oRefError.rowIndex);\n\t\t\t\t\t\t\t\tif (focusOnTargetField === false) {\n\t\t\t\t\t\t\t\t\t_defaultFocus(oMessage, oTargetMdcTable);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tLog.error(\"Error while focusing on error\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (oTargetMdcTable.data(\"tableType\") === \"ResponsiveTable\" && oRefError) {\n\t\t\t\t\t\tconst focusOnMessageTargetControl = await this.focusOnMessageTargetControl(\n\t\t\t\t\t\t\toView,\n\t\t\t\t\t\t\toMessage,\n\t\t\t\t\t\t\toTargetMdcTable,\n\t\t\t\t\t\t\toRefError.rowIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (focusOnMessageTargetControl === false) {\n\t\t\t\t\t\t\t_defaultFocus(oMessage, oTargetMdcTable);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.focusOnMessageTargetControl(oView, oMessage);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tLog.error(\"Fail to navigate to Error control\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toControl = UI5Element.getElementById(oMessage.controlIds[0]);\n\t\t\t\tif (oControl) {\n\t\t\t\t\t//If the control underlying the frontEnd message is not within the current section, we first go into the target section:\n\t\t\t\t\tconst sections = (this.oObjectPageLayout as ObjectPageLayout).getSections();\n\t\t\t\t\tconst sectionWithTheControl = sections.find((section) => section.findElements(true).includes(oControl as UI5Element));\n\t\t\t\t\tif (sectionWithTheControl) {\n\t\t\t\t\t\tsSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\t\t\t\t\tthis._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout!, sSectionTitle);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setFocusToControl(oControl);\n\t\t\t}\n\t\t} else {\n\t\t\t// Call the function wherever needed\n\t\t\tthis.handleMessageNavigation(oItem, visibleSections, oMessage, oView);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the message navigation by finding the associated subsection, expanding it,\n\t * and navigating to the correct section in the Object Page Layout.\n\t * @param oItem The message item containing the group name.\n\t * @param visibleSections The list of visible sections in the Object Page.\n\t * @param oMessage The message object containing control IDs.\n\t * @param oView The current UI5 view.\n\t */\n\thandleMessageNavigation(oItem: MessageItem, visibleSections: ObjectPageSection[], oMessage: Message, oView: View): void {\n\t\t// Get control if it is inside a hidden subsection\n\t\tconst oControl = UI5Element.getElementById(oMessage.getControlIds()[0]);\n\t\tconst oSubSection = this.findSubSection(oItem, visibleSections, oControl);\n\n\t\t// If subsection found, expand it\n\t\tif (oSubSection) {\n\t\t\t(oSubSection as SubSection).setMode(\"Expanded\");\n\t\t}\n\n\t\t// Navigate to the section based on the message's group name\n\t\tconst sSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\tthis._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout!, sSectionTitle);\n\n\t\t// Focus on the target control\n\t\tthis.focusOnMessageTargetControl(oView, oMessage);\n\t}\n\n\t/**\n\t * Finds the corresponding subsection based on the provided message item's group name\n\t * or by checking if the given control exists inside the subsection's MoreBlocks.\n\t * @param oItem The message item containing the group name.\n\t * @param visibleSections The list of visible sections in the Object Page.\n\t * @param oControl The UI5 control to check for inside MoreBlocks.\n\t * @returns - The found subsection, section, or null if not found.\n\t */\n\tfindSubSection(\n\t\toItem: MessageItem,\n\t\tvisibleSections: ObjectPageSection[],\n\t\toControl: UI5Element | undefined\n\t): SubSection | ObjectPageSection | unknown | null {\n\t\tconst groupNames = oItem.getGroupName().split(\", \");\n\t\treturn this.findSubSectionByTitleOrControl(visibleSections, groupNames[1], oControl);\n\t}\n\n\t/**\n\t * Searches for a subsection based on the given title or by checking\n\t * if the specified control is present inside the subsection's MoreBlocks.\n\t * @private\n\t * @param visibleSections The list of visible sections.\n\t * @param title The title to match against subsection titles.\n\t * @param oControl The UI5 control to search for within MoreBlocks.\n\t * @returns - The found subsection or null if no match is found.\n\t */\n\tprivate findSubSectionByTitleOrControl(\n\t\tvisibleSections: ObjectPageSection[],\n\t\ttitle: string,\n\t\toControl: UI5Element | undefined\n\t): SubSection | null {\n\t\tfor (const section of visibleSections) {\n\t\t\tfor (const subSection of section.getSubSections()) {\n\t\t\t\t// Check if subsection title matches\n\t\t\t\tif (subSection.getTitle() === title) {\n\t\t\t\t\treturn subSection;\n\t\t\t\t}\n\n\t\t\t\t// Check if control exists inside MoreBlocks\n\t\t\t\tif (\n\t\t\t\t\tsubSection\n\t\t\t\t\t\t.getMoreBlocks()\n\t\t\t\t\t\t.some(\n\t\t\t\t\t\t\t(block) =>\n\t\t\t\t\t\t\t\t((block as View).getContent() as unknown as Content)?.findElements(true).includes(oControl as UI5Element)\n\t\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn subSection;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieves a table cell targeted by a message, ensuring the cell is editable.\n\t * @param targetRow A table row\n\t * @param message Message targeting a cell\n\t * @returns Returns the editable cell or null/undefined if none is found\n\t * @private\n\t */\n\tgetTargetCell(targetRow: UI5Element, message: Message): UI5Element | null | undefined {\n\t\tconst controlIds = message.getControlIds();\n\t\tconst hasNonEditableField = controlIds.some((id) => {\n\t\t\tconst control = UI5Element.getElementById(id) as EnhanceWithUI5<Field>;\n\t\t\treturn control?.isA(\"sap.ui.mdc.Field\") && control.getEditable && !control.getEditable();\n\t\t});\n\n\t\treturn controlIds.length > 0\n\t\t\t? controlIds\n\t\t\t\t\t.map(function (controlId) {\n\t\t\t\t\t\tconst isControlInTable = targetRow.findElements(true, function (elem) {\n\t\t\t\t\t\t\treturn elem.getId() === controlId;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isControlInTable.length > 0) {\n\t\t\t\t\t\t\tconst element = UI5Element.getElementById(controlId) as EnhanceWithUI5<Field>;\n\t\t\t\t\t\t\tif (hasNonEditableField) {\n\t\t\t\t\t\t\t\tif (element?.isA(\"sap.ui.mdc.Field\")) {\n\t\t\t\t\t\t\t\t\tif (element.getEditable && !element.getEditable()) {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t\t.reduce(function (acc, val) {\n\t\t\t\t\t\treturn val ? val : acc;\n\t\t\t\t\t}, null)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Focus on the control targeted by a message.\n\t * @param view The current view\n\t * @param message The message targeting the control on which we want to set the focus\n\t * @param targetMdcTable The table targeted by the message (optional)\n\t * @param rowIndex The row index of the table targeted by the message (optional)\n\t * @returns Promise\n\t * @private\n\t */\n\tasync focusOnMessageTargetControl(\n\t\tview: View,\n\t\tmessage: Message,\n\t\ttargetMdcTable?: MDCTable,\n\t\trowIndex?: number\n\t): Promise<boolean | undefined> {\n\t\tconst aAllViewElements = view.findElements(true);\n\t\tconst aErroneousControls = message\n\t\t\t.getControlIds()\n\t\t\t.filter(function (sControlId: string) {\n\t\t\t\treturn aAllViewElements.some(function (oElem) {\n\t\t\t\t\treturn oElem.getId() === sControlId && oElem.getDomRef();\n\t\t\t\t});\n\t\t\t})\n\t\t\t.map(function (sControlId: string) {\n\t\t\t\treturn UI5Element.getElementById(sControlId);\n\t\t\t});\n\t\tconst aNotTableErroneousControls = aErroneousControls.filter(function (oElem: UI5Element | undefined) {\n\t\t\treturn !oElem?.isA<Table>(\"sap.m.Table\") && !oElem?.isA<UITable>(\"sap.ui.table.Table\");\n\t\t});\n\t\t//The focus is set on Not Table control in priority\n\t\tif (aNotTableErroneousControls.length > 0) {\n\t\t\tthis.setFocusToControl(aNotTableErroneousControls[0]);\n\t\t\treturn undefined;\n\t\t} else if (aErroneousControls.length > 0) {\n\t\t\tconst aTargetMdcTableRow = targetMdcTable\n\t\t\t\t? targetMdcTable.findElements(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t(elem: Control) =>\n\t\t\t\t\t\t\telem.isA(ColumnListItem.getMetadata().getName()) && elem.getParent()?.getParent() === targetMdcTable\n\t\t\t\t  )\n\t\t\t\t: [];\n\t\t\tif (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {\n\t\t\t\tconst oTargetRow = aTargetMdcTableRow[rowIndex as number];\n\t\t\t\tconst oTargetCell = this.getTargetCell(oTargetRow, message);\n\t\t\t\tif (oTargetCell) {\n\t\t\t\t\tconst oTargetField = oTargetCell.isA<Field>(\"sap.fe.macros.Field\")\n\t\t\t\t\t\t? (oTargetCell.getContent() as EnhanceWithUI5<FieldWrapper>).getContentEdit()[0]\n\t\t\t\t\t\t: (((oTargetCell as HBox).getItems()[0] as Field).getContent() as EnhanceWithUI5<FieldWrapper>).getContentEdit()[0];\n\t\t\t\t\tthis.setFocusToControl(oTargetField);\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\tconst errorProperty = message.getTargets()[0].split(\"/\").pop();\n\t\t\t\t\tif (errorProperty) {\n\t\t\t\t\t\t(view.getModel(\"internal\") as JSONModel).setProperty(\"/messageTargetProperty\", errorProperty);\n\t\t\t\t\t}\n\t\t\t\t\tif (targetMdcTable && this._navigationConfigured(targetMdcTable)) {\n\t\t\t\t\t\treturn (view.getController() as PageController)._routing.navigateForwardToContext(\n\t\t\t\t\t\t\toTargetRow.getBindingContext() as ODataV4Context\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t *\n\t * @param obj The message object\n\t * @param aSections The array of sections in the object page\n\t * @returns The rank of the message\n\t */\n\t_getMessageRank(obj: Message & { sectionName: string; subSectionName: string }, aSections: ObjectPageSection[] | undefined): number {\n\t\tif (aSections) {\n\t\t\tlet section, aSubSections, subSection, j, k, aElements, aAllElements, sectionRank;\n\t\t\tfor (j = aSections.length - 1; j >= 0; --j) {\n\t\t\t\t// Loop over all sections\n\t\t\t\tsection = aSections[j];\n\t\t\t\taSubSections = section.getSubSections();\n\t\t\t\tfor (k = aSubSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\tsubSection = aSubSections[k];\n\t\t\t\t\taAllElements = subSection.findElements(true); // Get all elements inside a sub-section\n\t\t\t\t\t//Try to find the control 1 inside the sub section\n\t\t\t\t\taElements = aAllElements.filter(this._fnFilterUponId.bind(this, obj.getControlId()));\n\t\t\t\t\tsectionRank = j + 1;\n\t\t\t\t\tif (aElements.length > 0) {\n\t\t\t\t\t\tif (section.getVisible() && subSection.getVisible()) {\n\t\t\t\t\t\t\tif (!obj.hasOwnProperty(\"sectionName\")) {\n\t\t\t\t\t\t\t\tobj.sectionName = section.getTitle();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!obj.hasOwnProperty(\"subSectionName\")) {\n\t\t\t\t\t\t\t\tobj.subSectionName = subSection.getTitle();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn sectionRank * 10 + (k + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// if section or subsection is invisible then group name would be Last Action\n\t\t\t\t\t\t\t// so ranking should be lower\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if sub section title is Other messages, we return a high number(rank), which ensures\n\t\t\t//that messages belonging to this sub section always come later in messagePopover\n\t\t\tif (!obj.sectionName && !obj.subSectionName && obj.getPersistent()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 999;\n\t\t}\n\t\treturn 999;\n\t}\n\n\t/**\n\t * Get Filter to hide messages from the dialog.\n\t * @returns Filter\n\t */\n\t_filterOutMessagesInDialog(): Filter {\n\t\tconst fnTest = (aControlIds: string[]): boolean => {\n\t\t\treturn messageHandling.isMessageOutOfParameterDialog(aControlIds);\n\t\t};\n\t\treturn new Filter({\n\t\t\tpath: \"controlIds\",\n\t\t\ttest: fnTest,\n\t\t\tcaseSensitive: true\n\t\t});\n\t}\n\n\t/**\n\t * Filter function to hide back-end messages if the control has error validation.\n\t * @returns Filter\n\t */\n\t_getFilterToHideBackendMessageOnErrorValidation(): Filter {\n\t\tconst getIdsOfFielsdWithErrorValidation = function (): string[] {\n\t\t\treturn (\n\t\t\t\tMessaging.getMessageModel()\n\t\t\t\t\t.getData()\n\t\t\t\t\t.filter((message: Message) => message.validation === true && message.getControlId()?.match(/field.*-inner$/i))\n\t\t\t\t\t//the error point to the inner control, so we need to remove the -inner to get the field id\n\t\t\t\t\t.map((message: Message) => message.getControlId()?.replace(\"-inner\", \"\"))\n\t\t\t);\n\t\t};\n\n\t\tconst fnTest = function (aControlIds: string[]): boolean {\n\t\t\t// filtering out the backend messages if the control has error validation\n\t\t\treturn !aControlIds.some((controlId: string) => getIdsOfFielsdWithErrorValidation().includes(controlId));\n\t\t};\n\t\treturn new Filter({\n\t\t\tfilters: [\n\t\t\t\tnew Filter({\n\t\t\t\t\tfilters: [\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\tvalue1: false\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"controlIds\",\n\t\t\t\t\t\t\ttest: fnTest,\n\t\t\t\t\t\t\tcaseSensitive: true\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tand: true\n\t\t\t\t}),\n\t\t\t\tnew Filter({\n\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\tvalue1: true\n\t\t\t\t})\n\t\t\t],\n\t\t\tand: false\n\t\t});\n\t}\n\n\t/**\n\t * Method to set the filters based upon the message items\n\t * The desired filter operation is:\n\t * ( filters provided by user && ( validation = true && Control should be present in view ) || messages for the current matching context ).\n\t * @private\n\t */\n\tasync _applyFiltersAndSort(): Promise<void> {\n\t\tlet oValidationFilters,\n\t\t\thiddenDraftFilter,\n\t\t\toValidationAndContextFilter,\n\t\t\toFilters,\n\t\t\tsPath,\n\t\t\toSorter,\n\t\t\toDialogFilter,\n\t\t\tobjectPageLayoutSections: ObjectPageSection[] | undefined;\n\t\tconst aUserDefinedFilter: Filter[] = [];\n\n\t\tthis.sViewId = this.sViewId ? this.sViewId : (this._getViewId(this.getId()) as string);\n\t\t//Add the filters provided by the user\n\t\tconst aCustomFilters = this.getAggregation(\"customFilters\") as Control[] | undefined;\n\t\tif (aCustomFilters) {\n\t\t\taCustomFilters.forEach(function (filter: Control) {\n\t\t\t\taUserDefinedFilter.push(\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: filter.getProperty(\"path\"),\n\t\t\t\t\t\toperator: filter.getProperty(\"operator\"),\n\t\t\t\t\t\tvalue1: filter.getProperty(\"value1\"),\n\t\t\t\t\t\tvalue2: filter.getProperty(\"value2\")\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\tconst oBindingContext = this.getBindingContext();\n\t\tif (!oBindingContext) {\n\t\t\tthis.setVisible(false);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsPath = oBindingContext.getPath();\n\t\t\t//Filter for filtering out only validation messages which are currently present in the view\n\t\t\toValidationFilters = new Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\tvalue1: true\n\t\t\t\t\t}),\n\t\t\t\t\tmessageButtonHelper.getCheckControlInViewFilter(this.sViewId)\n\t\t\t\t],\n\t\t\t\tand: true\n\t\t\t});\n\n\t\t\toDialogFilter = new Filter({\n\t\t\t\tfilters: [this._filterOutMessagesInDialog()]\n\t\t\t});\n\n\t\t\tlet filterArray;\n\t\t\tif (this.isHiddenDraftEnabled) {\n\t\t\t\tconst viewId = this._getViewId(this.getId());\n\t\t\t\tconst view = UI5Element.getElementById(viewId as string) as View;\n\t\t\t\tconst viewContext = view?.getBindingContext() as ODataV4Context;\n\t\t\t\tconst contextPath = (await (view.getController() as ObjectPageController)?.editFlow.getRootContext(viewContext))?.getPath();\n\t\t\t\thiddenDraftFilter = messageButtonHelper.getHiddenDraftUseCaseFilter(contextPath);\n\t\t\t\tfilterArray = [hiddenDraftFilter, oDialogFilter, this._getFilterToHideBackendMessageOnErrorValidation()];\n\t\t\t} else {\n\t\t\t\toValidationAndContextFilter = new Filter({\n\t\t\t\t\tfilters: [\n\t\t\t\t\t\toValidationFilters,\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"target\",\n\t\t\t\t\t\t\toperator: FilterOperator.StartsWith,\n\t\t\t\t\t\t\tvalue1: sPath\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tand: false\n\t\t\t\t});\n\n\t\t\t\tfilterArray = [oValidationAndContextFilter, oDialogFilter, this._getFilterToHideBackendMessageOnErrorValidation()];\n\t\t\t\t//Filter for filtering out the bound messages i.e target starts with the context path\n\t\t\t}\n\t\t\tconst oValidationContextDialogFilters = new Filter({\n\t\t\t\tfilters: filterArray,\n\t\t\t\tand: true\n\t\t\t});\n\t\t\t// and finally - if there any - add custom filter (via OR)\n\t\t\tif (aUserDefinedFilter.length > 0) {\n\t\t\t\toFilters = new Filter({\n\t\t\t\t\tfilters: [aUserDefinedFilter, oValidationContextDialogFilters] as unknown as Filter[], // TODO incorrect,\n\t\t\t\t\tand: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toFilters = oValidationContextDialogFilters;\n\t\t\t}\n\t\t\tthis.oItemBinding.filter(oFilters);\n\t\t\tthis.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);\n\t\t\t// We support sorting only for ObjectPageLayout use-case.\n\t\t\tif (this.oObjectPageLayout) {\n\t\t\t\toSorter = new Sorter(\n\t\t\t\t\t\"\",\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\t(\n\t\t\t\t\t\tobj1: Message & { sectionName: string; subSectionName: string },\n\t\t\t\t\t\tobj2: Message & { sectionName: string; subSectionName: string }\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (!objectPageLayoutSections) {\n\t\t\t\t\t\t\tobjectPageLayoutSections = this.oObjectPageLayout && this.oObjectPageLayout.getSections();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst rankA = this._getMessageRank(obj1, objectPageLayoutSections);\n\t\t\t\t\t\tconst rankB = this._getMessageRank(obj2, objectPageLayoutSections);\n\t\t\t\t\t\tif (rankA < rankB) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rankA > rankB) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.oItemBinding.sort(oSorter);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sControlId\n\t * @param oItem\n\t * @returns True if the control ID matches the item ID\n\t */\n\t_fnFilterUponId(sControlId: string, oItem: UI5Element): boolean {\n\t\treturn sControlId === oItem.getId();\n\t}\n\n\t/**\n\t * Retrieves the section based on section title and visibility.\n\t * @param oObjectPage Object page.\n\t * @param sSectionTitle Section title.\n\t * @returns The section\n\t * @private\n\t */\n\t_getSectionBySectionTitle(oObjectPage: ObjectPageLayout, sSectionTitle: string): ObjectPageSection | undefined {\n\t\tlet oSection: ObjectPageSection | undefined;\n\t\tif (sSectionTitle) {\n\t\t\tconst aSections = oObjectPage.getSections();\n\t\t\tfor (let i = 0; i < aSections.length; i++) {\n\t\t\t\tif (aSections[i].getVisible() && aSections[i].getTitle() === sSectionTitle) {\n\t\t\t\t\toSection = aSections[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oSection;\n\t}\n\n\t/**\n\t * Navigates to the section if the object page uses an IconTabBar and if the current section is not the target of the navigation.\n\t * @param oObjectPage Object page.\n\t * @param sSectionTitle Section title.\n\t * @private\n\t */\n\t_navigateFromMessageToSectionInIconTabBarMode(oObjectPage: ObjectPageLayout, sSectionTitle: string): void {\n\t\tconst bUseIconTabBar = oObjectPage.getUseIconTabBar();\n\t\tif (bUseIconTabBar) {\n\t\t\tconst oSection = this._getSectionBySectionTitle(oObjectPage, sSectionTitle);\n\t\t\tconst sSelectedSectionId = oObjectPage.getSelectedSection();\n\t\t\tif (oSection && sSelectedSectionId !== oSection.getId()) {\n\t\t\t\toObjectPage.setSelectedSection(oSection.getId());\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _navigateFromMessageToSectionTableInIconTabBarMode(\n\t\toTable: Table,\n\t\toObjectPage: ObjectPageLayout,\n\t\tsSectionTitle: string\n\t): Promise<void> {\n\t\tconst oRowBinding = oTable.getRowBinding();\n\t\tconst oTableContext = oTable.getBindingContext();\n\t\tconst oOPContext = oObjectPage.getBindingContext();\n\t\tconst bShouldWaitForTableRefresh = !(oTableContext === oOPContext);\n\t\tthis._navigateFromMessageToSectionInIconTabBarMode(oObjectPage, sSectionTitle);\n\t\treturn new Promise(function (resolve: Function) {\n\t\t\tif (bShouldWaitForTableRefresh) {\n\t\t\t\toRowBinding.attachEventOnce(\"change\", function () {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the MdcTable if it is found among any of the parent elements.\n\t * @param oElement Control\n\t * @returns MDC table || undefined\n\t * @private\n\t */\n\t_getMdcTable(oElement: UI5Element): MDCTable | undefined {\n\t\t//check if the element has a table within any of its parents\n\t\tlet oParentElement = oElement.getParent();\n\t\twhile (oParentElement && !oParentElement.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\toParentElement = oParentElement.getParent();\n\t\t}\n\t\treturn oParentElement && oParentElement.isA<MDCTable>(\"sap.ui.mdc.Table\") ? oParentElement : undefined;\n\t}\n\n\t_getGridTable(oMdcTable: MDCTable): UITable | undefined {\n\t\treturn oMdcTable.findElements(true, function (oElem: Control) {\n\t\t\treturn (\n\t\t\t\toElem.isA<UITable>(\"sap.ui.table.Table\") &&\n\t\t\t\t/** We check the element belongs to the MdcTable :*/\n\t\t\t\toElem.getParent() === oMdcTable\n\t\t\t);\n\t\t})[0] as UITable | undefined;\n\t}\n\n\t/**\n\t * Retrieves the table row (if available) containing the element.\n\t * @param oElement Control\n\t * @returns Table row || undefined\n\t * @private\n\t */\n\t_getTableRow(oElement: UI5Element): UI5Element | undefined {\n\t\tlet oParentElement = oElement.getParent();\n\t\twhile (\n\t\t\toParentElement &&\n\t\t\t!oParentElement.isA<Row>(\"sap.ui.table.Row\") &&\n\t\t\t!oParentElement.isA<CreationRow>(\"sap.ui.table.CreationRow\") &&\n\t\t\t!oParentElement.isA<ColumnListItem>(ColumnListItem.getMetadata().getName())\n\t\t) {\n\t\t\toParentElement = oParentElement.getParent();\n\t\t}\n\t\treturn oParentElement &&\n\t\t\t(oParentElement.isA<Row>(\"sap.ui.table.Row\") ||\n\t\t\t\toParentElement.isA<CreationRow>(\"sap.ui.table.CreationRow\") ||\n\t\t\t\toParentElement.isA<ColumnListItem>(ColumnListItem.getMetadata().getName()))\n\t\t\t? (oParentElement as UI5Element)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * Retrieves the index of the table row containing the element.\n\t * @param oElement Control\n\t * @returns Row index || undefined\n\t * @private\n\t */\n\t_getTableRowIndex(oElement: UI5Element): number {\n\t\tconst oTableRow = this._getTableRow(oElement);\n\t\tlet iRowIndex;\n\t\tif (oTableRow?.isA<Row>(\"sap.ui.table.Row\")) {\n\t\t\tiRowIndex = oTableRow.getIndex();\n\t\t} else {\n\t\t\tiRowIndex = (oTableRow as { getTable?: () => ResponsiveTable })\n\t\t\t\t?.getTable?.()\n\t\t\t\t.getItems()\n\t\t\t\t.findIndex(function (element: UI5Element) {\n\t\t\t\t\treturn element.getId() === oTableRow?.getId();\n\t\t\t\t});\n\t\t}\n\t\treturn iRowIndex ?? -1;\n\t}\n\n\t/**\n\t * Retrieves the index of the table column containing the element.\n\t * @param element Control\n\t * @returns Column index || undefined\n\t * @private\n\t */\n\t_getTableColumnIndex(element: UI5Element): number | undefined {\n\t\tconst getTargetCellIndex = function (elt: UI5Element, targetRow: Row | undefined): number | undefined {\n\t\t\treturn targetRow?.getCells().findIndex(function (cell: Control) {\n\t\t\t\treturn cell.getId() === elt.getId();\n\t\t\t});\n\t\t};\n\t\tconst getTargetColumnIndex = function (elt: UI5Element, targetRow: Row | undefined): number | undefined {\n\t\t\tlet targetElement = elt.getParent() as UI5Element,\n\t\t\t\ttargetCellIndex = getTargetCellIndex(targetElement, targetRow);\n\t\t\twhile (targetElement && targetCellIndex && targetCellIndex < 0) {\n\t\t\t\ttargetElement = targetElement.getParent() as UI5Element;\n\t\t\t\ttargetCellIndex = getTargetCellIndex(targetElement, targetRow);\n\t\t\t}\n\t\t\treturn targetCellIndex;\n\t\t};\n\t\tconst targetRow = this._getTableRow(element) as Row | undefined;\n\n\t\tlet targetColumnIndex = getTargetColumnIndex(element, targetRow);\n\t\tif (targetRow?.isA<CreationRow>(\"sap.ui.table.CreationRow\")) {\n\t\t\tconst targetCellId = targetColumnIndex ? targetRow.getCells()[targetColumnIndex].getId() : undefined,\n\t\t\t\ttableColumns = targetRow.getTable()?.getColumns();\n\t\t\ttargetColumnIndex = tableColumns?.findIndex(function (column: Column) {\n\t\t\t\tif (column.getCreationTemplate() && targetCellId) {\n\t\t\t\t\treturn targetCellId.search(column.getCreationTemplate().getId()) > -1 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn targetColumnIndex;\n\t}\n\n\t_getMdcTableRows(oMdcTable: MDCTable): Row[] {\n\t\treturn oMdcTable.findElements(true, function (oElem: Control) {\n\t\t\treturn (\n\t\t\t\toElem.isA<Row>(\"sap.ui.table.Row\") &&\n\t\t\t\t/** We check the element belongs to the Mdc Table :*/\n\t\t\t\t(oElem as { getTable?: () => UI5Element }).getTable?.().getParent() === oMdcTable\n\t\t\t);\n\t\t}) as Row[];\n\t}\n\n\t_getObjectPageLayout(oElement: ManagedObject | undefined, oObjectPageLayout?: ObjectPageLayout): ObjectPageLayout | undefined {\n\t\tif (oObjectPageLayout) {\n\t\t\treturn oObjectPageLayout;\n\t\t}\n\t\tlet targetElement = oElement;\n\t\t//Iterate over parent till you have not reached the object page layout\n\t\twhile (targetElement && !targetElement.isA<ObjectPageLayout>(\"sap.uxap.ObjectPageLayout\")) {\n\t\t\ttargetElement = targetElement.getParent() ?? undefined;\n\t\t}\n\t\treturn targetElement;\n\t}\n\n\t/**\n\t * The method that is called to check if a navigation is configured from the table to a sub object page.\n\t * @private\n\t * @param table MdcTable\n\t * @returns Either true or false\n\t */\n\t_navigationConfigured(table: Table): boolean {\n\t\t// TODO: this logic would be moved to check the same at the template time to avoid the same check happening multiple times.\n\t\tconst component = sap.ui.require(\"sap/ui/core/Component\"),\n\t\t\tnavObject = table && component.getOwnerComponentFor(table) && component.getOwnerComponentFor(table).getNavigation();\n\t\tlet subOPConfigured = false,\n\t\t\tnavConfigured = false;\n\t\tif (navObject && Object.keys(navObject).includes(table.getRowBinding().getPath())) {\n\t\t\tsubOPConfigured =\n\t\t\t\tnavObject[table?.getRowBinding().getPath()] &&\n\t\t\t\tnavObject[table?.getRowBinding().getPath()].detail &&\n\t\t\t\tnavObject[table?.getRowBinding().getPath()].detail.route\n\t\t\t\t\t? true\n\t\t\t\t\t: false;\n\t\t}\n\t\tnavConfigured =\n\t\t\tsubOPConfigured &&\n\t\t\ttable?.getRowSettings().getRowActions() &&\n\t\t\ttable?.getRowSettings().getRowActions()[0].getType().includes(\"Navigation\");\n\t\treturn navConfigured;\n\t}\n\n\tsetFocusToControl(control?: UI5Element): void {\n\t\tconst messagePopover = this.oMessagePopover;\n\t\tif (messagePopover && control && control.focus) {\n\t\t\tconst fnFocus = (): void => {\n\t\t\t\tcontrol.focus();\n\t\t\t};\n\t\t\tif (!messagePopover.isOpen()) {\n\t\t\t\t// when navigating to parent page to child page (on click of message), the child page might have a focus logic that might use a timeout.\n\t\t\t\t// we use the below timeouts to override this focus so that we focus on the target control of the message in the child page.\n\t\t\t\tsetTimeout(fnFocus, 0);\n\t\t\t} else {\n\t\t\t\tconst fnOnClose = (): void => {\n\t\t\t\t\tsetTimeout(fnFocus, 0);\n\t\t\t\t\tmessagePopover.detachEvent(\"afterClose\", fnOnClose);\n\t\t\t\t};\n\t\t\t\tmessagePopover.attachEvent(\"afterClose\", fnOnClose);\n\t\t\t\tmessagePopover.close();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.warning(\"FE V4 : MessageButton : element doesn't have focus method for focusing.\");\n\t\t}\n\t}\n\n\tescape(value: string): string {\n\t\treturn String(value)\n\t\t\t.replace(/&/g, \"&amp;\")\n\t\t\t.replace(/\"/g, \"&quot;\")\n\t\t\t.replace(/'/g, \"&#39;\")\n\t\t\t.replace(/</g, \"&lt;\")\n\t\t\t.replace(/>/g, \"&gt;\");\n\t}\n}\n\nexport default MessageButton;\n"],"mappings":";;;;wsDA2EMA,GAAaC,EADlBC,EAAe,wCAAuCC,EAQrDC,EAAY,CAAEC,KAAM,uCAAwCC,SAAU,KAAMC,aAAc,iBAAiBC,EAG3GC,IAAOR,EAAAS,GAAAC,EAAA,SAAAC,GATR,SAAAZ,EAAYa,EAAsCC,GAAmC,IAAAC,EAGpFA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAIC,IAASG,KAACC,EAAAH,EAAA,gBAAAI,EAAAJ,GAAAG,EAAAH,EAAA,gBAAAK,EAAAL,KAebM,kBAAoB,GAAEN,EAItBO,QAAU,GAAEP,EAEZQ,gBAAkB,GAAE,OAAAR,CApB5B,CAACS,EAAAxB,EAAAY,GAAA,IAAAa,EAAAzB,EAAA0B,UAAAD,EAwBDE,KAAA,SAAAA,IACCC,EAAOF,UAAUC,KAAKE,MAAMZ,MAC5BA,KAAKa,qBACJC,EAAYC,gBAAgBf,OAAOgB,8BAA8BC,mBAAmBC,aAClFC,QAEHnB,KAAKoB,YAAYpB,KAAKqB,0BAA2BrB,MACjDA,KAAKsB,gBAAkB,IAAIC,EAC3BvB,KAAKwB,aAAexB,KAAKsB,gBAAgBG,WAAW,SACpDzB,KAAKwB,aAAaE,aAAa1B,KAAK2B,gBAAiB3B,MACrD,MAAM4B,EAAkB5B,KAAK6B,QAC7B,GAAID,EAAiB,CACpB5B,KAAKsB,gBAAgBQ,cAAc,IAAIC,EAAW,CAAEC,IAAK,kBAAmBC,MAAOL,IACpF,CACA5B,KAAKkC,yBAAyBlC,KAAKmC,qBAAqBC,KAAKpC,OAC7DA,KAAKsB,gBAAgBe,uBAAuBrC,KAAKsC,kBAAkBF,KAAKpC,MACzE,EAEAQ,EAIAa,0BAAA,SAAAA,EAA0BkB,GACzBvC,KAAKsB,gBAAgBkB,OAAOD,EAAOE,YACpC,EAEAjC,EAOMkC,oBAANC,eAAMD,EAAoBE,GACzB,MAAMC,EAAgC,GACtC,MAAMC,EAAsBF,EAAMG,oBAClC,MAAMC,EAAgCC,IACrC,MAAMC,EAAgE,GACtE,MAAMC,EAAYnD,KAAKwB,aAAa4B,cAAcC,IAAI,SAAUC,GAC/D,OAAOA,EAASC,WACjB,GACA,MAAMC,EAAeP,EAAKF,oBAC1B,GAAIS,EAAc,CACjB,MAAMC,EAAuBR,EAAKS,aAAa,GAC/CC,EAAgBC,uCAAuCH,GAAaI,QAAQ,SAAUC,GACrFA,EAASC,iBAAiBF,QAAQ,SAAUG,GAC3CA,EAAYC,aAAa,MAAMJ,QAAQ,SAAUK,GAChD,GAAIA,EAAMC,IAAc,oBAAqB,CAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAUkB,OAAQD,IAAK,CAC1C,MAAME,EAAcJ,EAAMK,gBAC1B,GAAID,EAAa,CAChB,MAAME,EAAoB,GAAGhB,EAAaiB,aAAaP,EAAMK,gBAAgBE,YAC7E,GAAItB,EAAUiB,GAAGM,OAAOC,QAAQH,KAAuB,EAAG,CACzDtB,EAAK0B,KAAK,CAAEC,MAAOX,EAAOY,WAAYd,IACtC,KACD,CACD,CACD,CACD,CACD,EACD,EACD,EACD,CACA,OAAOd,GAGR,MAAM6B,EAAU/B,EAA6BZ,KAAKpC,KAAlCgD,CAAwCJ,GACxDmC,EAAQlB,QAAQ,SAAUmB,GACzB,MAAMC,EAAYD,EAAQH,MACzBK,EAAcF,EAAQF,WACvB,IAAKG,EAAUlC,qBAAuBkC,EAAUlC,qBAAqB0B,YAAc3B,GAAqB2B,UAAW,CAClHS,EAAYC,kBAAkBrC,GAC9B,IAAKmC,EAAUV,gBAAgBa,gBAAiB,CAC/CvC,EAAa+B,KACZ,IAAIS,QAAQ,SAAUC,GACrBL,EAAUV,gBAAgBgB,gBAAgB,eAAgB,WACzDD,GACD,EACD,GAEF,CACD,CACD,GACA,MAAME,EAAyB,IAAIH,QAASC,IAC3CG,WAAW,KACVzF,KAAK0F,iBACLJ,KACE,KAEJ,UACOD,QAAQM,IAAI9C,GAClBD,EAAMgD,WAAWC,sBACXL,CACP,CAAE,MAAOM,GACRC,EAAIC,MAAM,0DACX,CACD,EAEAxF,EAIAkF,eAAA,SAAAA,IACC1F,KAAKiG,kBAAoBjG,KAAKkG,qBAAqBlG,KAAMA,KAAKiG,mBAC9D,IAAKjG,KAAKiG,kBAAmB,CAC5B,MACD,CACA,MAAME,EAA0BnG,KAAKsB,gBAAgB8E,WACrD,MAAMC,EAAU1C,EAAgBC,uCAAuC5D,KAAKiG,mBAC5E,MAAMK,EAAgBtG,KAAKuG,0BAA0BJ,EAAU,OAC/D,GAAIG,EAAe,CAClBtG,KAAKwG,kBAAkBH,EACxB,CAEA,MAAMI,EAASzG,KAAK0G,WAAW1G,KAAK6B,SACpC,MAAMoB,EAAO0D,EAAWC,eAAeH,GACvC,MAAMI,EAAU5D,GAAM2C,SAAS,YAC/BiB,GAASC,YAAY,yBAA0BC,UAChD,EAEAvG,EAOAwG,yBAAA,SAAAA,EAAyBC,GACxB,MAAMC,EAASD,EAAOrB,SAAS,YAE/B,IAAKqB,EAAOlE,kBAAkB,aAAaoE,YAAY,YAAa,CACnED,EAAOJ,YAAY,WAAY,CAAC,EAAGG,EAAOlE,kBAAkB,YAC7D,CACA,MAAMqE,EACLH,EAAOlE,kBAAkB,aAAa0B,UACtC,aACAwC,EAAOlE,qBAAqB0B,UAAU4C,QAAQ,IAAK,KACnD,IACAJ,EAAO1C,gBAAgBE,UAAU4C,QAAQ,IAAK,KAC/C,MAAM/D,EAAW4D,EAAOI,WAAWF,GACnC,IAAK9D,EAAS6D,YAAY,IAAK,CAC9BD,EAAOJ,YAAY,GAAI,CAAC,EAAGxD,EAC5B,CACA,OAAOA,CACR,EAAC9C,EAED+G,qBAAA,SAAAA,EACCC,EACAC,EACAC,EACA7C,EACA8C,EACAC,GAEA,IAAIC,EACJ,GAAID,EAAe,CAClBC,EAAO,CACNJ,SAAU,cACVK,kBAAmBJ,EAAyBA,EAAyB,GAEvE,KAAO,CACNG,EAAO,CACNJ,SAAUD,EAAkBC,EAAW,GACvCK,kBAAmBJ,EAAyBA,EAAyB,GAEvE,CACA,MAAMK,EAAQlD,EAAMe,SAAS,YAC5BoC,EAAUhI,KAAKgH,yBAAyBnC,GAEzC,MAAMoD,EAAmBC,EAAUC,kBACjCC,UACA/E,IAAI,SAAUgF,GACd,OAAOA,EAAQxG,OAChB,GACD,IAAIyG,EACJ,GAAIN,GAASb,YAAY,IAAK,CAC7BmB,EAAuBC,OAAOC,KAAKR,GAASb,YAAY,KAAKsB,OAAO,SAAUC,GAC7E,OAAOT,EAAiBtD,QAAQ+D,MAAwB,CACzD,GACAJ,EAAqBzE,QAAQ,SAAU8E,UAC/BX,GAASb,YAAY,IAAIwB,EACjC,EACD,CACAZ,GAAOjB,YACNa,EAAc9F,QACd0G,OAAOK,OAAO,CAAC,EAAGZ,GAASb,YAAYQ,EAAc9F,SAAWmG,EAAQb,YAAYQ,EAAc9F,SAAW,CAAC,EAAGgG,GACjHG,EAEF,EAEAxH,EAMAqI,8BAAA,SAAAA,EAA8BR,EAAsBS,GACnD9I,KAAKM,gBAAkBN,KAAKM,gBACzBN,KAAKM,gBACLyI,EAAQC,qBAAqB,eAAgBC,QAAQ,oDAExDZ,EAAQa,aAAa,GAAGlJ,KAAKM,oBAAoBwI,IAClD,EAEAtI,EAWA2I,gCAAA,SAAAA,EACCd,EACAhC,EACA+C,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAgBC,EAAiBpD,GACvCrG,KAAKwB,aAAakI,aAAa1J,KAAK2B,gBAAiB3B,MACrD,MAAM2H,EAAgBU,EAAQtF,kBAAkB,YAAYQ,YAC5D,MAAMoG,EAAwB,KAC9B,IAAIC,EACH/E,EACAgF,EAAkB,CAAC,EACnBC,EACArC,EACAsC,EACAnC,EACD,MAAMoC,EAAmB,IAAIC,OAAO,MAAMC,KAAKvC,GAAewC,aAAa,IAC3E,GAAIH,EAAkB,CACrB,IAAKF,EAAI,EAAGA,EAAIT,EAAShF,OAAQyF,IAAK,CACrCF,EAAUP,EAASS,GACnBC,EAAkBH,EAClB,GAAIA,EAAQzF,IAAI,gBAAmByF,EAAuBzF,IAAI,sBAAuB,CACpFU,EAAQ+E,EAAQQ,YAChB,MAAMC,EAAaxF,EAAMN,gBACzB,MAAM+F,EAAyBA,KAC9BtK,KAAK6I,8BAA8BR,EAASkB,IAE7C,GAAIc,GAAcA,EAAWjF,iBAAmBP,EAAM9B,oBAAqB,CAC1E,MAAMwH,EAAM5G,EAAgB6G,gCAC3B7C,EACA9C,EACA+E,EACAS,EACAd,EACAI,EACAW,GAEDT,EAAkBU,EAAIE,iBACtB,GAAIF,EAAIG,SAAU,CACjBrC,EAAQsC,YAAYJ,EAAIG,SACzB,CAEArC,EAAQuC,iBACLf,EAAgBgB,mBAChBhB,EAAgBgB,kBAAkBC,cACnCjB,EAAgBgB,iBAAiBpG,YAChC4D,EAAQtF,kBAAkB,YAAYoE,YAAY,UAAUE,QAAQ,MAAO,KAG9E,GAAIwC,EAAgBgB,mBAAqBhB,EAAgBgB,iBAAiBC,aAAc,CACvF9K,KAAK+K,0BACJ1C,EACAwB,EAAgBgB,iBAChBhB,EAAgBmB,oBAChBnG,EAEF,CACA4C,EAAWoC,EAAgBgB,kBAAoBhB,EAAgBgB,iBAAiBI,WAChFjL,KAAKuH,qBACJsC,EAAgBgB,iBAChBpD,EACAoC,EAAgBqB,wBAChBrG,EACA8C,EAEF,CACD,KAAO,CACNU,EAAQuC,eAAe,MAEvB,GAAIvC,EAAQ8C,gBAAkB,GAAI,CACjC,IAAIC,EACJ,IAAIC,EAAStB,EAAgBK,YAC7B,MAAOiB,EAAQ,CACd,GAAIA,GAAUA,EAAOlH,IAAiB,kCAAmC,CACxEiH,EAAcC,EACd,KACD,CACAA,EAASA,EAAOjB,WACjB,CAEA,GAAIgB,EAAa,CAChB/C,EAAQsC,YAAYS,EAAYE,WACjC,CACD,CAGA,MAAMC,EAA0B5H,EAAgB6H,iBAAiBzB,EAAiBV,GAClF,GAAIkC,EAAyB,CAC5B,KACD,CACD,CACD,CACD,KAAO,CAENxB,EAAkBV,EAAS,GAC3BxE,EAAQ7E,KAAKyL,aAAa1B,GAC1BF,EAAkB,CAAC,EACnB,GAAIhF,EAAO,CACVgF,EAAgB6B,YAAc7G,EAAM8G,YACpC,MAAMC,EAAoB5L,KAAK6L,qBAAqB9B,GACpDF,EAAgBqB,wBACfU,IAAsB7E,WAAa6E,GAAqB,EACrD/G,EAAMiH,aAAaF,GAAmBG,iBACtChF,UAEJ8C,EAAgBmB,oBACfnB,EAAgBqB,yBAA2BU,IAAsB7E,WAAa6E,GAAqB,EAChG/G,EAAMiH,aAAaF,GAAmBD,YACtC5E,UACJa,EAAgB5H,KAAKgM,aAAajC,IAAkB5F,IAAiB,6BAA+B,MACpG,IAAKyD,EAAe,CACnBH,EAAWzH,KAAKiM,kBAAkBlC,GAClCF,EAAgBqC,yBAA2BrH,EAAMN,gBAAgB4H,qBACjEtC,EAAgBgB,iBACfpD,IAAaV,UAAY8C,EAAgBqC,yBAAyBzE,GAAYV,SAChF,CACA,MAAMqF,EAAkBzI,EAAgB0I,mBACvC1E,EACAkC,EAAgBqC,yBAChBrC,EAAgBgB,iBAChBhB,EAAgBmB,oBAChBnG,EACA+C,EACAgE,IAAsB,GAAM7B,EAA6BuC,kBAAoB,QACzEvC,EACDhD,WAGJ,GAAIqF,EAAiB,CACpB/D,EAAQsC,YAAYyB,EACrB,CACA/D,EAAQuC,iBAAiBf,EAAgBgB,kBACzC,GAAIhB,EAAgBgB,iBAAkB,CACrC7K,KAAK+K,0BAA0B1C,EAASwB,EAAgBgB,iBAAkBhB,EAAgBmB,oBAAqBnG,EAChH,CACA7E,KAAKuH,qBACJsC,EAAgBgB,iBAChBpD,EACAoC,EAAgBqB,wBAChBrG,EACA8C,EACAC,EAEF,CACD,CAEA,GAAI+B,EAAuB,CAC1B,MAAM4C,EAAwBvM,KAAKwM,mCAAmCnG,EAAS+C,EAAYE,GAC3F,MAAMmD,EAAwB9I,EAAgB+I,uBAC7CrG,EACA+C,EACAE,EACAO,EACAL,EACA+C,GAGDlE,EAAQa,aAAauD,GACrB,MAAMhG,EAASzG,KAAK0G,WAAW1G,KAAK6B,SACpC,MAAMoB,EAAO0D,EAAWC,eAAeH,GACvC,MAAMkG,EAAwBhF,EAAcwC,aAAa,IAAMxC,EAAcwC,aAAa,GAAGyC,MAAM,KAAKC,MACxG,MAAMhG,EAAU5D,GAAM2C,SAAS,YAC/B,GACCiB,GACAA,EAAQM,YAAY,2BACpBwF,GACAA,IAA0B9F,EAAQM,YAAY,0BAC7C,CACDnH,KAAKsB,gBAAgBwL,qBAAqB,CAAEC,KAAM1E,IAClDxB,EAAQC,YAAY,yBAA0B,MAC/C,CACD,CACA9G,KAAKwB,aAAaE,aAAa1B,KAAK2B,gBAAiB3B,MACrD,OAAO+J,CACR,EAEAvJ,EAQAgM,mCAAA,SAAAA,EACCnG,EACA+C,EACAE,GAEA,MAAM7C,EAASzG,KAAK0G,WAAW1G,KAAK6B,SACpC,MAAMoB,EAAOwD,EAAUE,EAAWC,eAAeH,GAAmBM,UACpE,IAAIiG,EAAyB,KAC7B,MAAMC,GACJ3D,GAA2BrG,GAAMiK,eAA8CC,gBAAkB,OACnG,MAAMC,EACL9D,GAA2BrG,GAAMiK,eAA8CC,gBAAkB,OAClG,GAAIF,EAA8B,CACjC,MAAMI,EAAQjE,EAAWkE,YACzB,MAAMC,EAAUF,EAAMhJ,SAAW,EAAKgJ,EAAM,GAAGG,eAAe,WAA+BzG,UAC7F,GAAIwG,GAASpJ,IAAI,gCAAiC,CACjD6I,EAAyB,KAC1B,CACD,MAAO,GAAII,EAA4B,CACtC,IAAIG,EACJ,MAAME,EAASrE,EAAWkE,YAE1B,GAAIG,EAAOpJ,SAAW,GAAKoJ,EAAO,IAAItJ,IAAqB,wDAAyD,CACnHoJ,EAAUE,EAAO,GAAGD,eAAe,WACnC,GAAID,GAASpJ,IAAI,gCAAiC,CACjD6I,EAAyB,KAC1B,MAAO,GAAKO,GAAgCpJ,IAAI,oCAAqC,CACpFoJ,EACEA,EAA+BG,0BAA0BC,UACzDJ,GAAgCG,iBAClC,GAAIH,GAAWA,EAAQlJ,SAAW,GAAKkJ,EAAQ,IAAIpJ,IAAI,gCAAiC,CACvF6I,EAAyB,KAC1B,CACD,CACD,CACD,CACA,OAAOA,CACR,EAACxM,EAED+F,0BAAA,SAAAA,EAA0BJ,EAAyBG,GAClD,IAAID,EAASuH,EAAcvF,EAASjE,EAAGyJ,EAAGC,EAC1C9N,KAAKI,kBAAoBJ,KAAKI,kBAC3BJ,KAAKI,kBACL2I,EAAQC,qBAAqB,eAAgBC,QAAQ,gDAExD,MAAM8E,EAAmBpK,EAAgBC,uCAAuC5D,KAAKiG,mBACrF,GAAI8H,EAAkB,CACrB,MAAMtH,EAASzG,KAAK0G,WAAW1G,KAAK6B,SACpC,MAAMe,EAAQ6D,EAAUE,EAAWC,eAAeH,GAAmBM,UACrE,MAAM+B,EAAclG,GAAOG,kBAAkB,aAAaoE,YAAY,eACtE,GAAI2B,EAAa,EACflG,GAAOG,kBAAkB,aAAqC+D,YAAY,cAAe,KAC3F,CACA,IAAK1C,EAAI+B,EAAS9B,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAE1CiE,EAAUlC,EAAS/B,GACnB,IAAI4J,EAAsB,KAC1B,IAAKH,EAAIE,EAAiB1J,OAAS,EAAGwJ,GAAK,IAAKA,EAAG,CAClD,IAAII,EAAc,MAElB5H,EAAU0H,EAAiBF,GAC3BD,EAAevH,EAAQtC,iBACvB,IAAK+J,EAAIF,EAAavJ,OAAS,EAAGyJ,GAAK,IAAKA,EAAG,CAE9C,MAAM1E,EAAawE,EAAaE,GAChC,MAAMI,EAAiB7F,GAAStF,kBAAkB,YAAYQ,YAC9DvD,KAAKI,kBAAoBJ,KAAKmO,qBAAqBvL,EAAOsL,GAC1D,MAAME,EAAYzK,EAAgB0K,0CAA0CjF,EAAY8E,GACxF,GAAIE,EAAU/J,OAAS,EAAG,CACzB,MAAMiK,EAAmBtO,KAAKmJ,gCAC7Bd,EACAhC,EACA+C,EACAgF,EACAR,EAAavJ,OAAS,EACtByE,GAEDkF,EAAsB,MAGtB,GACCM,IACCA,EAAiBnK,IAAI,iBACpBmK,EAAgCnK,IAAI,sBACrC,CACD8J,EAAc,KACd,KACD,CACD,CACD,CACA,GAAIA,EAAa,CAChB,KACD,CACD,CACA,GAAID,EAAqB,CACxB,MAAME,EAAiB7F,EAAQtF,kBAAkB,YAAYQ,YAC7D,GAAIvD,KAAKa,qBAAsB,CAC9BwH,EAAQuC,eAAe,KACxB,KAAO,CACNvC,EAAQuC,eAAe,MACxB,CACA,GAAIsD,EAAeK,YAAczF,EAAa,CAC7C9I,KAAK6I,8BAA8BR,EAASS,EAC7C,KAAO,CACNT,EAAQa,aAAalJ,KAAKI,kBAC3B,CACD,CACA,IAAKkG,GAAiB+B,EAAQmG,iBAAmBxO,KAAKI,mBAAqBJ,KAAKyO,sBAAsBpG,GAAU,CAE/G,OAAO,IACR,CACD,CACD,CACD,EAEA7H,EACA2N,qBAAA,SAAAA,EAAqBvL,EAAyBsL,GAC7C,MAAMQ,EAAW9L,GAAOG,qBAAqB0B,UAC7C,MAAMkK,EAAoBT,GAAgB/D,aAAa,GACvD,GAAInK,KAAKa,sBAAwB6N,IAAaC,EAAkBC,SAASF,GAAW,CACnF,OAAO3F,EAAQC,qBAAqB,eAAgBC,QAAQ,mDAC7D,KAAO,CACN,OAAOF,EAAQC,qBAAqB,eAAgBC,QAAQ,+CAC7D,CACD,EAACzI,EAEDiO,sBAAA,SAAAA,EAAsBpG,GACrB,MAAMV,EAAgBU,EAAQtF,kBAAkB,YAAcsF,EAAQtF,kBAAkB,YAAYQ,YACpG,GAAIoE,GAAiBA,EAAcjD,OAAQ,CAC1C,MAAMmK,EAAa7O,KAAKiG,mBAAmBL,YAAYkJ,eACtDC,EAAcF,GAAcA,EAAWG,YAAYrH,EAAcjD,QACjEuK,EAAuBJ,GAAcA,EAAWtL,UAAUwL,GAC3D,GAAIE,GAAwBA,EAAqBC,QAAU,WAAY,CACtE,OAAO,IACR,CACD,CACA,OAAO,KACR,EAEA1O,EAIA2O,2BAAA,SAAAA,EAA2B/F,GAC1BA,EAAWkE,YAAYzJ,QAASwJ,GAAUA,EAAMlI,kBAAkB4B,YAClEqC,EAAWgG,gBAAgBvL,QAASwL,GAAaA,EAASlK,kBAAkB4B,YAC5EqC,EAAWkG,aAAazL,QAAS0L,GAAYA,EAAQpK,kBAAkB4B,WACxE,EAACvG,EAEDgG,kBAAA,SAAAA,EAAkBgJ,GACjB,IAAK,IAAIC,EAAW,EAAGA,EAAWD,EAAUnL,OAAQoL,IAAY,CAC/D,MAAM3L,EAAW0L,EAAUC,GAC3B,MAAM7B,EAAe9J,EAASC,iBAC9B,IAAK,IAAI2L,EAAc,EAAGA,EAAc9B,EAAavJ,OAAQqL,IAAe,CAC3E,MAAM1L,EAAc4J,EAAa8B,GACjC,MAAMC,EAAa3L,EAAYsJ,YAC/B,GAAIqC,EAAY,CACf3P,KAAKmP,2BAA2BnL,EACjC,CACA,GAAIA,EAAYjB,oBAAqB,CACpC/C,KAAK4P,kCACJ5L,EAAYjB,oBACXtB,aACAoO,mBAAmB7P,KAAK4P,gCAAgCxN,KAAKpC,MAChE,CACD,CACD,CACD,EAACQ,EAEDoP,gCAAA,SAAAA,IACC,MAAMzM,EAAYnD,KAAKsB,gBAAgB8E,WACvCpG,KAAKuG,0BAA0BpD,EAAW,KAC3C,EAEA3C,EAKAkG,WAAA,SAAAA,EAAWoJ,GACV,IAAIzP,EACH0P,EAA6CpJ,EAAWC,eAAekJ,GACxE,MAAOC,EAAU,CAChB,GAAIA,aAAoBC,EAAM,CAC7B3P,EAAU0P,EAASlO,QACnB,KACD,CACAkO,EAAWA,EAAS3F,WACrB,CACA,OAAO/J,CACR,EAACG,EAEDyP,2BAAA,SAAAA,EAA2BC,GAC1BlQ,KAAKsB,gBAAgB6O,2BAA2B,SAAUC,GAWzD,MAAMC,EAAeD,EAAOrD,KAAKuD,iBACjC,GAAID,EAAc,CACjBE,OAAOC,KAAK,CACXpR,KAAM,MACNqR,IAAKJ,EACLK,QAAS,SAAUC,GAClB,MAAMC,EAAiBV,EAAgBW,cAAgBF,EACvD,MAAMG,EAAiBV,EAAOrD,KAAKgE,kBAAoB,GACvDX,EAAOrD,KAAKiE,eAAe,GAAGF,IAAiBF,KAC/CR,EAAOa,QAAQ3L,SAChB,EACAU,MAAO,WACN,MAAMkL,EAAS,iDAAiDb,IAChEtK,EAAIC,MAAMkL,GACVd,EAAOa,QAAQE,OAAOD,EACvB,GAEF,CACD,EACD,EAEA1Q,EAQA4Q,6BAAA,SAAAA,EAA6BvM,EAAc2C,EAAiC6J,GAC3E,IAAIC,EAAiB,GAErB,MAAMC,EAAuC5N,EAAgB6N,2CAC5D3M,EACA2C,EACA6J,GAED,MAAMI,EAA6BF,EAChCA,EAAqChO,UAAU,SAC/CwD,UACH,MAAM2K,EACLD,GAA8BF,EAC3BA,EAAqChO,UAAU,2DAC/CwD,UACJ,MAAM4K,EAAkB9M,EAAMuF,aAA0BwH,iBACvDpK,EACAiK,EACAC,EACAL,GAEDC,GAAkB,GAAGK,IAErB,OAAOL,CACR,EAEA9Q,EASAqR,kBAAA,SAAAA,EAAkBxJ,EAAsByJ,EAAwCR,EAA0BzM,GACzG,MAAM2E,EAAgBC,EAAiB5E,GACvC,MAAMkN,EAAS1J,EAAQtF,kBAAkB,YAAYQ,YACrD,MAAMyO,EAAuBrO,EAAgBsO,gBAAgBF,EAAQlN,GACrE,IAAIqN,EAAa,GAEjB,GAAIJ,EAAoB,CAEvBI,EAAa,GAAG1I,EAAcP,QAAQ,gDAAgD6I,GACvF,MAAO,GAAIE,EAAsB,CAChC,GAAIA,EAAqBG,eAAiB,SAAU,CAEnD,GAAI9J,EAAQ+J,YAAc,QAAS,CAClCF,EACCZ,EAAejN,OAAS,EACrB,GAAGmF,EAAcP,QAAQ,iDAAiDqI,EAAee,KAAK,QAAU,IACxG,GAAG7I,EAAcP,QAAQ,gDAAkD,GAChF,KAAO,CACNiJ,EACCZ,EAAejN,OAAS,EACrB,GAAGmF,EAAcP,QAAQ,2CAA2CqI,EAAee,KAAK,QAAU,IAClG,GAAG7I,EAAcP,QAAQ,0CAA4C,GAC1E,CACD,KAAO,CAGN,IAAKjJ,KAAKsS,sBAAsBzN,GAAQ,CACvCwD,EAAQuC,eAAe,MACxB,CACAsH,EAAa,GAAG1I,EAAcP,QAAQ,gDACrC+I,EAAqBO,UACjB/I,EAAcP,QAAQ,4CAC5B,CACD,CAEA,OAAOiJ,CACR,EAEA1R,EAQAuK,0BAAA,SAAAA,EACC1C,EACAb,EACAsK,EACAjN,GAEA,MAAM2E,EAAgBC,EAAiB5E,GACvC,MAAMwM,EAAoBxM,EAAMuF,aAA0BoI,6BAA6BhL,GAEvF,MAAM8J,EAA2B,GACjCD,GAAkBxN,QAAQ4O,IAAyB,IAAxBzQ,IAAEA,EAAG0Q,WAAEA,GAAYD,EAC7CnB,EAAe1M,KAAK5E,KAAKoR,6BAA6BvM,EAAO2C,EAAiB,CAAC,CAAExF,MAAK0Q,mBAGvF,MAAMR,EAAalS,KAAK6R,kBAAkBxJ,EAASyJ,EAAoBR,EAAgBzM,GAEvF,MAAM8N,EAAsB,IAAIC,EAAc,CAC7CC,SAAU,uBAAuBrJ,EAAcP,QAAQ,0DAExD,IAAI6J,EACJ,GAAIC,MAAMC,QAAQ1B,IAAmBA,EAAejN,OAAS,EAAG,CAC/D,GAAIiN,EAAejN,SAAW,EAAG,CAEhCyO,EAAoB,GAAGH,EAAoB9B,oBAAoBrH,EAAcP,QAC5E,+CACKpE,EAAM8G,kBAAkBnC,EAAcP,QAC3C,6CACKqI,QAAqBY,OAC5B,KAAO,CAENY,EAAoB,GAAGH,EAAoB9B,oBAAoBrH,EAAcP,QAC5E,+CACKpE,EAAM8G,kBAAkBnC,EAAcP,QAC3C,uDACeqI,EAAee,KAAK,qBAAqBH,OAC1D,CACD,MAAO,GAAIA,GAAc,KAAOA,EAAY,CAC3CY,EAAoB,EACrB,KAAO,CACNA,EAAoB,GAAGH,EAAoB9B,oBAAoBrH,EAAcP,QAC5E,+CACKpE,EAAM8G,kBAAkBuG,OAC/B,CAEA,MAAMe,EAAiB,IAAIL,EAAc,CACxCC,SAAU,uBAAuBrJ,EAAcP,QAAQ,oDAGxD,MAAMiK,EAAuB7K,EAAQtF,kBAAkB,YAAYQ,YAAY4P,YAE/E9K,EAAQ2I,eAAejK,WACvB,IAAIqM,EAAgB,GACpB,IAAIC,EAA4B,GAChC,GAAIhL,EAAQiI,iBAAkB,CAC7B+C,EAA4BP,EAAoB,GAAGA,QAA0B,GAC7EzK,EAAQ2I,eAAeqC,GACvBrT,KAAKiQ,2BAA2BgD,EACjC,MAAO,GAAIC,EAAsB,CAChCE,EAAgB,GAAGH,EAAepC,oBAAoBqC,IACtDG,EAA4B,GAAGP,QAAwBM,IACvD/K,EAAQ2I,eAAeqC,EACxB,KAAO,CACNhL,EAAQ2I,eAAe8B,EACxB,CACD,EAEAtS,EAGA8S,iBAAA,SAAAA,IACCtT,KAAKuT,WAAW,OAChBvT,KAAKwT,UAAU,gBAAiB,CAC/BC,eAAgB,IAGjB,MAAMxQ,EAAO0D,EAAWC,eAAe5G,KAAKK,SAC5C,GAAI4C,EAAM,CAETA,EAAK2C,SAAS,YAAYkB,YAAY,yBAA0BC,UACjE,CACD,EAEAvG,EAKAmB,gBAAA,SAAAA,IACC+R,aAAa1T,KAAK2T,wBAElB3T,KAAK2T,uBAAyBlO,WAAW9C,UACxC,MAAMiR,EAAQ,GACbC,EAAY7T,KAAKsB,gBAAgB8E,WACjC0N,EAA8B,CAAEC,MAAO,EAAGC,QAAS,EAAGC,QAAS,EAAGC,YAAa,GAC/EC,EAAkBpL,EAAQC,qBAAqB,eAC/CyK,EAAiBI,EAAUxP,OAC5B,IAAI+P,EAAcC,EAAWC,QAC5BC,EAAc,GACdC,EAAe,GACfC,EAAe,GAChB,GAAIhB,EAAiB,EAAG,CACvB,IAAK,IAAIrP,EAAI,EAAGA,EAAIqP,EAAgBrP,IAAK,CACxC,IAAKyP,EAAUzP,GAAGgO,WAAayB,EAAUzP,GAAGgO,UAAUsC,aAAe,GAAI,GACtEZ,EAAc,cACjB,KAAO,GACJA,EAAcD,EAAUzP,GAAGgO,UAC9B,CACD,CACA,GAAI0B,EAAca,EAAYZ,OAAS,EAAG,CACzCK,EAAcC,EAAWO,QAC1B,MAAO,GAAId,EAAca,EAAYX,SAAW,EAAG,CAClDI,EAAcC,EAAWQ,QAC1B,MAAO,GAAIf,EAAca,EAAYV,SAAW,EAAG,CAClDG,EAAcC,EAAWJ,OAC1B,MAAO,GAAIH,EAAca,EAAYT,aAAe,EAAG,CACtDE,EAAcC,EAAWS,OAC1B,CAEA,MAAMC,EACLjB,EAAca,EAAYZ,OAC1BD,EAAca,EAAYX,SAC1BF,EAAca,EAAYV,SAC1BH,EAAca,EAAYT,aAE3BlU,KAAKgV,QAAQD,EAAsBL,YAEnC,GAAIZ,EAAcC,QAAU,EAAG,CAC9BQ,EAAc,gDACf,MAAO,GAAIT,EAAcC,MAAQ,EAAG,CACnCQ,EAAc,2DACf,MAAO,IAAKT,EAAcC,OAASD,EAAcE,QAAS,CACzDO,EAAc,oDACf,MAAO,IAAKT,EAAcC,QAAUD,EAAcE,SAAWF,EAAcI,YAAa,CACvFK,EAAc,yDACf,MAAO,IAAKT,EAAcC,QAAUD,EAAcE,UAAYF,EAAcI,aAAeJ,EAAcG,QAAS,CACjHM,EAAc,4DACf,CACA,GAAIA,EAAa,CAChBE,EAAeN,EAAgBlL,QAAQsL,GACvCC,EAAeV,EAAcC,MAAQ,GAAGD,EAAcC,SAASU,IAAiBA,EAChFzU,KAAKiV,WAAWT,EACjB,CACAxU,KAAKkV,QAAQtB,GACb5T,KAAKmV,QAAQf,GACbpU,KAAKuT,WAAW,MAChB,MAAM3Q,EAAQ+D,EAAWC,eAAe5G,KAAKK,SAC7C,GAAIuC,EAAO,CACV,MAAMwS,EAAaxS,EAAMyS,gBAAgBC,UACzC,UACOF,EAAWG,sBACXvV,KAAK0C,oBAAoBE,EAChC,CAAE,MAAOkD,GACRC,EAAIC,MAAM,yBACX,CACAhG,KAAKwT,UAAU,gBAAiB,CAC/BC,eAAgBA,GAElB,CACA,GAAIA,EAAiB,EAAG,CACvBzT,KAAKsB,gBAAgBkU,cACtB,CACD,KAAO,CACNxV,KAAKsT,kBACN,GACE,IACJ,EAEA9S,EAKM8B,kBAANK,eAAML,EAAkBC,GACvB,MAAMkT,EAAwBzV,KAAK+C,kBAAkB,gBACrD0S,EAAsB3O,YAAY,6BAA8B,MAChE,MAAM4O,EAAQnT,EAAOoT,aAAa,QACjCC,EAAWF,GAAO3S,kBAAkB,YAAYQ,YAChDsS,EAAoB,IAAI5L,OAAO,MAAMC,KAAK0L,EAASzL,aAAa,IAChEvH,EAAQ+D,EAAWC,eAAe5G,KAAKK,SACxC,IAAKqV,EAAO,CACX,MACD,CACA,IAAI3F,EAAkC+F,EACtC,MAAMC,EAAgB,SAAU1N,EAAkB2N,GACjD,MAAMC,EAAY,CAAEC,cAAe,KAAMC,WAAY9N,GACrD2N,EAASI,MAAMH,EAChB,EAEA,IAAIjI,EAAsB,KAC1B,IAAI3H,EAASgQ,EAAahO,EAASjE,EAAGyJ,EAAGC,EACzC,MAAMwI,EAAkB3S,EAAgBC,uCAAuC5D,KAAKiG,mBACpF,GAAIqQ,EAAiB,CACpB,MAAMnQ,EAAWnG,KAAKsB,gBAAgB8E,WACtC,IAAKhC,EAAI+B,EAAS9B,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAE1CiE,EAAUlC,EAAS/B,GACnB,IAAKyJ,EAAIyI,EAAgBjS,OAAS,EAAGwJ,GAAK,IAAKA,EAAG,CAEjDxH,EAAUiQ,EAAgBzI,GAC1BwI,EAAchQ,EAAQtC,iBACtB,IAAK+J,EAAIuI,EAAYhS,OAAS,EAAGyJ,GAAK,IAAKA,EAAG,CAE7C,MAAM1E,EAAaiN,EAAYvI,GAC/B,MAAMnG,EAAgBU,GAAStF,kBAAkB,YAAYQ,YAC7D,MAAMgT,EAAW5S,EAAgB0K,0CAA0CjF,EAAYzB,GACvF,GAAI4O,EAASlS,OAAS,EAAG,CACxB2J,EAAsB,KACvB,CACD,CACD,CACD,CACD,CAEA,MAAMwI,EAAkBZ,EAASa,WAC/BpT,IAAKqT,IACL,MAAMC,EAAUhQ,EAAWC,eAAe8P,GAC1C,MAAME,EAAgBD,GAAWA,EAAQvM,YAEzC,GAAIpK,KAAKa,qBAAsB,CAC9B,OAAO+V,GAAezS,IAAI,oBAAsByS,EAAgB7P,SACjE,CACA,OAAO6P,GACNA,EAAczS,IAAI,qBAClBuR,EAAMlH,eAAeI,SAAUgI,EAAwBjL,aACrDiL,EACA,OAEHC,OAAO,SAAUC,EAAcC,GAC/B,OAAOA,EAAMA,EAAMD,CACpB,GAGD,GAAIN,EAAiB,CACpB,GAAIX,EAAmB,CACtBC,EAAgBJ,EAAMlH,eAAe5B,MAAM,MAAM,GACjD,IACC,GAAI5M,KAAKa,uBAAyB2V,EAAgB3U,UAAY7B,KAAKK,SAAW2N,GAAsB,CACnG,MAAMvH,EAASzG,KAAK0G,WAAW8P,EAAgB3U,SAC7C8E,EAAWC,eAAeH,GAAiB4O,gBAAyC2B,SAASC,kBAC9FT,EAAgBzT,oBAElB,KAAO,OACA/C,KAAKkX,mDACVV,EACAxW,KAAKiG,kBACL6P,EAEF,CACA,MAAMqB,EAAmBnX,KAAKgH,yBAAyBwP,GACvD,MAAMY,EAAYD,GAAkBhQ,YAAYuO,EAAM3S,kBAAkB,YAAYQ,YAAY1B,SAChG,MAAMwV,EAAyB1U,MAAO2U,EAA0BC,KAC/D,MAAMC,EAAqBxX,KAAKyX,iBAAiBH,GAChDI,EAAmB1X,KAAK2X,cAAcL,IAAiBM,sBAAwB,EAChF,GAAIJ,EAAmBnT,OAAS,GAAKmT,EAAmB,GAAI,CAC3D,MAAMK,EAAaL,EAAmBD,EAAYG,GACjDI,EAAc9X,KAAK+X,cAAcF,EAAYjC,GAC9C,GAAIkC,EAAa,CAChB9X,KAAKgY,kBAAkBF,GACvB,OAAO/Q,SACR,KAAO,CAEN,MAAMkR,EAAgBrC,EAASzL,aAAa,GAAGyC,MAAM,KAAKC,MAC1D,GAAIoL,EAAe,CACjBrV,EAAMgD,SAAS,YAA0BkB,YAAY,yBAA0BmR,EACjF,CACA,GAAIjY,KAAKsS,sBAAsBgF,GAAiB,CAC/C,OAAQ1U,EAAMyS,gBAAmC2B,SAASkB,yBACzDL,EAAW9U,oBAEb,KAAO,CACN,OAAO,KACR,CACD,CACD,CACA,OAAOgE,WAER,GAAIyP,EAAgB7F,KAAK,eAAiB,aAAeyG,EAAU3P,WAAa,GAAI,CACnF,UACO+O,EAAgB2B,cAAcf,EAAU3P,UAC9ChC,WAAW9C,iBACV,MAAMyV,QAA2Bf,EAAuBb,EAAiBY,EAAU3P,UACnF,GAAI2Q,IAAuB,MAAO,CACjCrC,EAAcH,EAAUY,EACzB,CACD,EAAG,EACJ,CAAE,MAAO1Q,GACRC,EAAIC,MAAM,gCACX,CACD,MAAO,GAAIwQ,EAAgB7F,KAAK,eAAiB,mBAAqByG,EAAW,CAChF,MAAMiB,QAAoCrY,KAAKqY,4BAC9CzV,EACAgT,EACAY,EACAY,EAAU3P,UAEX,GAAI4Q,IAAgC,MAAO,CAC1CtC,EAAcH,EAAUY,EACzB,CACD,KAAO,CACNxW,KAAKqY,4BAA4BzV,EAAOgT,EACzC,CACD,CAAE,MAAO9P,GACRC,EAAIC,MAAM,oCACX,CACD,KAAO,CACN+J,EAAWpJ,EAAWC,eAAegP,EAASa,WAAW,IACzD,GAAI1G,EAAU,CAEb,MAAMuI,EAAYtY,KAAKiG,kBAAuCsS,cAC9D,MAAMC,EAAwBF,EAASG,KAAMpS,GAAYA,EAAQpC,aAAa,MAAM2K,SAASmB,IAC7F,GAAIyI,EAAuB,CAC1B1C,EAAgBJ,EAAMlH,eAAe5B,MAAM,MAAM,GACjD5M,KAAK0Y,8CAA8C1Y,KAAKiG,kBAAoB6P,EAC7E,CACD,CACA9V,KAAKgY,kBAAkBjI,EACxB,CACD,KAAO,CAEN/P,KAAK2Y,wBAAwBjD,EAAOY,EAAiBV,EAAUhT,EAChE,CACD,EAEApC,EAQAmY,wBAAA,SAAAA,EAAwBjD,EAAoBY,EAAsCV,EAAmBhT,GAEpG,MAAMmN,EAAWpJ,EAAWC,eAAegP,EAASgD,gBAAgB,IACpE,MAAM5U,EAAchE,KAAK6Y,eAAenD,EAAOY,EAAiBvG,GAGhE,GAAI/L,EAAa,CACfA,EAA2B8U,QAAQ,WACrC,CAGA,MAAMhD,EAAgBJ,EAAMlH,eAAe5B,MAAM,MAAM,GACvD5M,KAAK0Y,8CAA8C1Y,KAAKiG,kBAAoB6P,GAG5E9V,KAAKqY,4BAA4BzV,EAAOgT,EACzC,EAEApV,EAQAqY,eAAA,SAAAA,EACCnD,EACAY,EACAvG,GAEA,MAAMgJ,EAAarD,EAAMlH,eAAe5B,MAAM,MAC9C,OAAO5M,KAAKgZ,+BAA+B1C,EAAiByC,EAAW,GAAIhJ,EAC5E,EAEAvP,EASQwY,+BAAR,SAAQA,EACP1C,EACA2C,EACAlJ,GAEA,IAAK,MAAM1J,KAAWiQ,EAAiB,CACtC,IAAK,MAAMlN,KAAc/C,EAAQtC,iBAAkB,CAElD,GAAIqF,EAAW8P,aAAeD,EAAO,CACpC,OAAO7P,CACR,CAGA,GACCA,EACEgG,gBACA+J,KACC9L,GACEA,EAAe3J,cAAqCO,aAAa,MAAM2K,SAASmB,IAEpF,CACD,OAAO3G,CACR,CACD,CACD,CACA,OAAO,IACR,EAEA5I,EAOAuX,cAAA,SAAAA,EAAcqB,EAAuB/Q,GACpC,MAAMoO,EAAapO,EAAQuQ,gBAC3B,MAAMS,EAAsB5C,EAAW0C,KAAMvZ,IAC5C,MAAM+W,EAAUhQ,EAAWC,eAAehH,GAC1C,OAAO+W,GAASxS,IAAI,qBAAuBwS,EAAQ2C,cAAgB3C,EAAQ2C,gBAG5E,OAAO7C,EAAWpS,OAAS,EACxBoS,EACCpT,IAAI,SAAUqT,GACd,MAAM6C,EAAmBH,EAAUnV,aAAa,KAAM,SAAUuV,GAC/D,OAAOA,EAAK3X,UAAY6U,CACzB,GAEA,GAAI6C,EAAiBlV,OAAS,EAAG,CAChC,MAAMuF,EAAUjD,EAAWC,eAAe8P,GAC1C,GAAI2C,EAAqB,CACxB,GAAIzP,GAASzF,IAAI,oBAAqB,CACrC,GAAIyF,EAAQ0P,cAAgB1P,EAAQ0P,cAAe,CAClD,OAAO,IACR,CACA,OAAO1P,CACR,CACD,KAAO,CACN,OAAOA,CACR,CACD,CACA,OAAO,IACR,GACCiN,OAAO,SAAUC,EAAKC,GACtB,OAAOA,EAAMA,EAAMD,CACpB,EAAG,MACH,IACJ,EAEAtW,EASM6X,4BAAN1V,eAAM0V,EACLpV,EACAoF,EACAiP,EACA7P,GAEA,MAAMgS,EAAmBxW,EAAKgB,aAAa,MAC3C,MAAMyV,EAAqBrR,EACzBuQ,gBACAnQ,OAAO,SAAUqH,GACjB,OAAO2J,EAAiBN,KAAK,SAAUjV,GACtC,OAAOA,EAAMrC,UAAYiO,GAAc5L,EAAMyV,WAC9C,EACD,GACCtW,IAAI,SAAUyM,GACd,OAAOnJ,EAAWC,eAAekJ,EAClC,GACD,MAAM8J,EAA6BF,EAAmBjR,OAAO,SAAUvE,GACtE,OAAQA,GAAOC,IAAW,iBAAmBD,GAAOC,IAAa,qBAClE,GAEA,GAAIyV,EAA2BvV,OAAS,EAAG,CAC1CrE,KAAKgY,kBAAkB4B,EAA2B,IAClD,OAAO7S,SACR,MAAO,GAAI2S,EAAmBrV,OAAS,EAAG,CACzC,MAAMmT,EAAqBF,EACxBA,EAAerT,aACf,KACCuV,GACAA,EAAKrV,IAAI0V,EAAeC,cAAcC,YAAcP,EAAKpP,aAAaA,cAAgBkN,GAEvF,GACH,GAAIE,EAAmBnT,OAAS,GAAKmT,EAAmB,GAAI,CAC3D,MAAMK,EAAaL,EAAmB/P,GACtC,MAAMqQ,EAAc9X,KAAK+X,cAAcF,EAAYxP,GACnD,GAAIyP,EAAa,CAChB,MAAMkC,EAAelC,EAAY3T,IAAW,uBACxC2T,EAAYpU,aAA8CuW,iBAAiB,GACzEnC,EAAqB1R,WAAW,GAAa1C,aAA8CuW,iBAAiB,GAClHja,KAAKgY,kBAAkBgC,GACvB,OAAOjT,SACR,KAAO,CACN,MAAMkR,EAAgB5P,EAAQ8B,aAAa,GAAGyC,MAAM,KAAKC,MACzD,GAAIoL,EAAe,CACjBhV,EAAK2C,SAAS,YAA0BkB,YAAY,yBAA0BmR,EAChF,CACA,GAAIX,GAAkBtX,KAAKsS,sBAAsBgF,GAAiB,CACjE,OAAQrU,EAAKoS,gBAAmC2B,SAASkB,yBACxDL,EAAW9U,oBAEb,KAAO,CACN,OAAO,KACR,CACD,CACD,CACA,OAAOgE,SACR,CACA,OAAOA,SACR,EAEAvG,EAMA0Z,gBAAA,SAAAA,EAAgB3P,EAAgEiF,GAC/E,GAAIA,EAAW,CACd,IAAInJ,EAASuH,EAAcxE,EAAYyE,EAAGC,EAAGqM,EAAWC,EAAcC,EACtE,IAAKxM,EAAI2B,EAAUnL,OAAS,EAAGwJ,GAAK,IAAKA,EAAG,CAE3CxH,EAAUmJ,EAAU3B,GACpBD,EAAevH,EAAQtC,iBACvB,IAAK+J,EAAIF,EAAavJ,OAAS,EAAGyJ,GAAK,IAAKA,EAAG,CAE9C1E,EAAawE,EAAaE,GAC1BsM,EAAehR,EAAWnF,aAAa,MAEvCkW,EAAYC,EAAa3R,OAAOzI,KAAKsa,gBAAgBlY,KAAKpC,KAAMuK,EAAIgQ,iBACpEF,EAAcxM,EAAI,EAClB,GAAIsM,EAAU9V,OAAS,EAAG,CACzB,GAAIgC,EAAQmU,cAAgBpR,EAAWoR,aAAc,CACpD,IAAKjQ,EAAIkQ,eAAe,eAAgB,CACvClQ,EAAImQ,YAAcrU,EAAQ6S,UAC3B,CACA,IAAK3O,EAAIkQ,eAAe,kBAAmB,CAC1ClQ,EAAIoQ,eAAiBvR,EAAW8P,UACjC,CACA,OAAOmB,EAAc,IAAMvM,EAAI,EAChC,KAAO,CAGN,OAAO,CACR,CACD,CACD,CACD,CAGA,IAAKvD,EAAImQ,cAAgBnQ,EAAIoQ,gBAAkBpQ,EAAIqQ,gBAAiB,CACnE,OAAO,CACR,CACA,OAAO,GACR,CACA,OAAO,GACR,EAEApa,EAIAqa,2BAAA,SAAAA,IACC,MAAMC,EAAUC,GACRpX,EAAgBqX,8BAA8BD,GAEtD,OAAO,IAAIE,EAAO,CACjBC,KAAM,aACNhR,KAAM4Q,EACNK,cAAe,MAEjB,EAEA3a,EAIA4a,gDAAA,SAAAA,IACC,MAAMC,EAAoC,WACzC,OACCnT,EAAUC,kBACRC,UACAK,OAAQJ,GAAqBA,EAAQiT,aAAe,MAAQjT,EAAQkS,gBAAgBgB,MAAM,oBAE1FlY,IAAKgF,GAAqBA,EAAQkS,gBAAgBlT,QAAQ,SAAU,IAExE,EAEA,MAAMyT,EAAS,SAAUC,GAExB,OAAQA,EAAY5B,KAAMzC,GAAsB2E,IAAoCzM,SAAS8H,GAC9F,EACA,OAAO,IAAIuE,EAAO,CACjBO,QAAS,CACR,IAAIP,EAAO,CACVO,QAAS,CACR,IAAIP,EAAO,CACVC,KAAM,aACNO,SAAUC,EAAeC,GACzBC,OAAQ,QAET,IAAIX,EAAO,CACVC,KAAM,aACNhR,KAAM4Q,EACNK,cAAe,QAGjBU,IAAK,OAEN,IAAIZ,EAAO,CACVC,KAAM,aACNO,SAAUC,EAAeC,GACzBC,OAAQ,QAGVC,IAAK,OAEP,EAEArb,EAMM2B,qBAANQ,eAAMR,IACL,IAAI2Z,EACHC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACD,MAAMC,EAA+B,GAErCtc,KAAKK,QAAUL,KAAKK,QAAUL,KAAKK,QAAWL,KAAK0G,WAAW1G,KAAK6B,SAEnE,MAAM0a,EAAiBvc,KAAKwN,eAAe,iBAC3C,GAAI+O,EAAgB,CACnBA,EAAe1Y,QAAQ,SAAU4E,GAChC6T,EAAmB1X,KAClB,IAAIqW,EAAO,CACVC,KAAMzS,EAAOtB,YAAY,QACzBsU,SAAUhT,EAAOtB,YAAY,YAC7ByU,OAAQnT,EAAOtB,YAAY,UAC3BqV,OAAQ/T,EAAOtB,YAAY,YAG9B,EACD,CACA,MAAMsV,EAAkBzc,KAAK+C,oBAC7B,IAAK0Z,EAAiB,CACrBzc,KAAKuT,WAAW,OAChB,MACD,KAAO,CACN2I,EAAQO,EAAgBhY,UAExBqX,EAAqB,IAAIb,EAAO,CAC/BO,QAAS,CACR,IAAIP,EAAO,CACVC,KAAM,aACNO,SAAUC,EAAeC,GACzBC,OAAQ,OAETc,EAAoBC,4BAA4B3c,KAAKK,UAEtDwb,IAAK,OAGNO,EAAgB,IAAInB,EAAO,CAC1BO,QAAS,CAACxb,KAAK6a,gCAGhB,IAAI+B,EACJ,GAAI5c,KAAKa,qBAAsB,CAC9B,MAAM4F,EAASzG,KAAK0G,WAAW1G,KAAK6B,SACpC,MAAMoB,EAAO0D,EAAWC,eAAeH,GACvC,MAAMoW,EAAc5Z,GAAMF,oBAC1B,MAAMgM,SAAsB9L,EAAKoS,iBAA0CyH,SAASC,eAAeF,MAAepY,UAClHsX,EAAoBW,EAAoBM,4BAA4BjO,GACpE6N,EAAc,CAACb,EAAmBK,EAAepc,KAAKob,kDACvD,KAAO,CACNY,EAA8B,IAAIf,EAAO,CACxCO,QAAS,CACRM,EACA,IAAIb,EAAO,CACVC,KAAM,SACNO,SAAUC,EAAeuB,WACzBrB,OAAQM,KAGVL,IAAK,QAGNe,EAAc,CAACZ,EAA6BI,EAAepc,KAAKob,kDAEjE,CACA,MAAM8B,EAAkC,IAAIjC,EAAO,CAClDO,QAASoB,EACTf,IAAK,OAGN,GAAIS,EAAmBjY,OAAS,EAAG,CAClC4X,EAAW,IAAIhB,EAAO,CACrBO,QAAS,CAACc,EAAoBY,GAC9BrB,IAAK,OAEP,KAAO,CACNI,EAAWiB,CACZ,CACAld,KAAKwB,aAAaiH,OAAOwT,GACzBjc,KAAKiG,kBAAoBjG,KAAKkG,qBAAqBlG,KAAMA,KAAKiG,mBAE9D,GAAIjG,KAAKiG,kBAAmB,CAC3BkW,EAAU,IAAIgB,EACb,GACApW,UACAA,UACA,CACCqW,EACAC,KAEA,IAAKhB,EAA0B,CAC9BA,EAA2Brc,KAAKiG,mBAAqBjG,KAAKiG,kBAAkBsS,aAC7E,CACA,MAAM+E,EAAQtd,KAAKka,gBAAgBkD,EAAMf,GACzC,MAAMkB,EAAQvd,KAAKka,gBAAgBmD,EAAMhB,GACzC,GAAIiB,EAAQC,EAAO,CAClB,OAAQ,CACT,CACA,GAAID,EAAQC,EAAO,CAClB,OAAO,CACR,CACA,OAAO,IAGTvd,KAAKwB,aAAagc,KAAKrB,EACxB,CACD,CACD,EAEA3b,EAMA8Z,gBAAA,SAAAA,EAAgBxK,EAAoB4F,GACnC,OAAO5F,IAAe4F,EAAM7T,OAC7B,EAEArB,EAOAid,0BAAA,SAAAA,EAA0Bha,EAA+BqS,GACxD,IAAIhS,EACJ,GAAIgS,EAAe,CAClB,MAAMtG,EAAY/L,EAAY8U,cAC9B,IAAK,IAAInU,EAAI,EAAGA,EAAIoL,EAAUnL,OAAQD,IAAK,CAC1C,GAAIoL,EAAUpL,GAAGoW,cAAgBhL,EAAUpL,GAAG8U,aAAepD,EAAe,CAC3EhS,EAAW0L,EAAUpL,GACrB,KACD,CACD,CACD,CACA,OAAON,CACR,EAEAtD,EAMAkY,8CAAA,SAAAA,EAA8CjV,EAA+BqS,GAC5E,MAAM4H,EAAiBja,EAAYka,mBACnC,GAAID,EAAgB,CACnB,MAAM5Z,EAAW9D,KAAKyd,0BAA0Bha,EAAaqS,GAC7D,MAAM8H,EAAqBna,EAAYoa,qBACvC,GAAI/Z,GAAY8Z,IAAuB9Z,EAASjC,QAAS,CACxD4B,EAAYqa,mBAAmBha,EAASjC,QACzC,CACD,CACD,EAACrB,EAEK0W,mDAANvU,eAAMuU,EACLjQ,EACAxD,EACAqS,GAEA,MAAMxR,EAAc2C,EAAO1C,gBAC3B,MAAMwZ,EAAgB9W,EAAOlE,oBAC7B,MAAMib,EAAava,EAAYV,oBAC/B,MAAMkb,IAA+BF,IAAkBC,GACvDhe,KAAK0Y,8CAA8CjV,EAAaqS,GAChE,OAAO,IAAIzQ,QAAQ,SAAUC,GAC5B,GAAI2Y,EAA4B,CAC/B3Z,EAAYiB,gBAAgB,SAAU,WACrCD,GACD,EACD,KAAO,CACNA,GACD,CACD,EACD,EAEA9E,EAMAiL,aAAA,SAAAA,EAAayS,GAEZ,IAAIC,EAAiBD,EAAS9T,YAC9B,MAAO+T,IAAmBA,EAAeha,IAAc,oBAAqB,CAC3Ega,EAAiBA,EAAe/T,WACjC,CACA,OAAO+T,GAAkBA,EAAeha,IAAc,oBAAsBga,EAAiBpX,SAC9F,EAACvG,EAEDmX,cAAA,SAAAA,EAAcyG,GACb,OAAOA,EAAUna,aAAa,KAAM,SAAUC,GAC7C,OACCA,EAAMC,IAAa,uBAEnBD,EAAMkG,cAAgBgU,CAExB,GAAG,EACJ,EAEA5d,EAMAwL,aAAA,SAAAA,EAAakS,GACZ,IAAIC,EAAiBD,EAAS9T,YAC9B,MACC+T,IACCA,EAAeha,IAAS,sBACxBga,EAAeha,IAAiB,8BAChCga,EAAeha,IAAoB0V,EAAeC,cAAcC,WAChE,CACDoE,EAAiBA,EAAe/T,WACjC,CACA,OAAO+T,IACLA,EAAeha,IAAS,qBACxBga,EAAeha,IAAiB,6BAChCga,EAAeha,IAAoB0V,EAAeC,cAAcC,YAC9DoE,EACDpX,SACJ,EAEAvG,EAMAyL,kBAAA,SAAAA,EAAkBiS,GACjB,MAAMG,EAAYre,KAAKgM,aAAakS,GACpC,IAAI3G,EACJ,GAAI8G,GAAWla,IAAS,oBAAqB,CAC5CoT,EAAY8G,EAAUpT,UACvB,KAAO,CACNsM,EAAa8G,GACVC,aACDlY,WACAmY,UAAU,SAAU3U,GACpB,OAAOA,EAAQ/H,UAAYwc,GAAWxc,OACvC,EACF,CACA,OAAO0V,IAAc,CACtB,EAEA/W,EAMAqL,qBAAA,SAAAA,EAAqBjC,GACpB,MAAM4U,EAAqB,SAAUC,EAAiBrF,GACrD,OAAOA,GAAWsF,WAAWH,UAAU,SAAUI,GAChD,OAAOA,EAAK9c,UAAY4c,EAAI5c,OAC7B,EACD,EACA,MAAM+c,EAAuB,SAAUH,EAAiBrF,GACvD,IAAIyF,EAAgBJ,EAAIrU,YACvB0U,EAAkBN,EAAmBK,EAAezF,GACrD,MAAOyF,GAAiBC,GAAmBA,EAAkB,EAAG,CAC/DD,EAAgBA,EAAczU,YAC9B0U,EAAkBN,EAAmBK,EAAezF,EACrD,CACA,OAAO0F,CACR,EACA,MAAM1F,EAAYpZ,KAAKgM,aAAapC,GAEpC,IAAIgC,EAAoBgT,EAAqBhV,EAASwP,GACtD,GAAIA,GAAWjV,IAAiB,4BAA6B,CAC5D,MAAM4a,EAAenT,EAAoBwN,EAAUsF,WAAW9S,GAAmB/J,QAAUkF,UAC1FiY,EAAe5F,EAAUkF,YAAYxS,aACtCF,EAAoBoT,GAAcT,UAAU,SAAUU,GACrD,GAAIA,EAAOC,uBAAyBH,EAAc,CACjD,OAAOA,EAAaI,OAAOF,EAAOC,sBAAsBrd,UAAY,EAAI,KAAO,KAChF,KAAO,CACN,OAAO,KACR,CACD,EACD,CACA,OAAO+J,CACR,EAACpL,EAEDiX,iBAAA,SAAAA,EAAiB2G,GAChB,OAAOA,EAAUna,aAAa,KAAM,SAAUC,GAC7C,OACCA,EAAMC,IAAS,qBAEdD,EAA0Coa,aAAalU,cAAgBgU,CAE1E,EACD,EAAC5d,EAED0F,qBAAA,SAAAA,EAAqBgY,EAAqCjY,GACzD,GAAIA,EAAmB,CACtB,OAAOA,CACR,CACA,IAAI4Y,EAAgBX,EAEpB,MAAOW,IAAkBA,EAAc1a,IAAsB,6BAA8B,CAC1F0a,EAAgBA,EAAczU,aAAerD,SAC9C,CACA,OAAO8X,CACR,EAEAre,EAMA8R,sBAAA,SAAAA,EAAsBzN,GAErB,MAAMua,EAAYC,IAAIC,GAAGC,QAAQ,yBAChCC,EAAY3a,GAASua,EAAUK,qBAAqB5a,IAAUua,EAAUK,qBAAqB5a,GAAO6a,gBACrG,IAAIC,EAAkB,MACrBC,EAAgB,MACjB,GAAIJ,GAAajX,OAAOC,KAAKgX,GAAW5Q,SAAS/J,EAAMN,gBAAgBE,WAAY,CAClFkb,EACCH,EAAU3a,GAAON,gBAAgBE,YACjC+a,EAAU3a,GAAON,gBAAgBE,WAAWob,QAC5CL,EAAU3a,GAAON,gBAAgBE,WAAWob,OAAOC,MAChD,KACA,KACL,CACAF,EACCD,GACA9a,GAAOkb,iBAAiBC,iBACxBnb,GAAOkb,iBAAiBC,gBAAgB,GAAG5N,UAAUxD,SAAS,cAC/D,OAAOgR,CACR,EAACpf,EAEDwX,kBAAA,SAAAA,EAAkBrB,GACjB,MAAMsJ,EAAiBjgB,KAAKsB,gBAC5B,GAAI2e,GAAkBtJ,GAAWA,EAAQP,MAAO,CAC/C,MAAM8J,EAAUA,KACfvJ,EAAQP,SAET,IAAK6J,EAAeE,SAAU,CAG7B1a,WAAWya,EAAS,EACrB,KAAO,CACN,MAAME,EAAYA,KACjB3a,WAAWya,EAAS,GACpBD,EAAeI,YAAY,aAAcD,IAE1CH,EAAeK,YAAY,aAAcF,GACzCH,EAAeM,OAChB,CACD,KAAO,CACNxa,EAAIya,QAAQ,0EACb,CACD,EAAChgB,EAEDigB,OAAA,SAAAA,EAAOxe,GACN,OAAOye,OAAOze,GACZoF,QAAQ,KAAM,SACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,OACjB,EAAC,OAAAtI,CAAA,CAzsDO,CAVmB4B,GAAMT,EAAAygB,EAAAjhB,EAAAe,UAAA,iBAAAvB,GAAA,CAAA0hB,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAA5gB,EAAAwgB,EAAAjhB,EAAAe,UAAA,iBAAAlB,GAAA,CAAAqhB,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAArhB,KAAAD,GAAA,OAstDnBV,CAAa","ignoreList":[]}