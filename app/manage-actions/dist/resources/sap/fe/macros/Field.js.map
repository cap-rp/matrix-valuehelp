{"version":3,"file":"Field.js","names":["Field","_dec","defineUI5Class","returnTypes","_dec2","mixin","InlineEdit","_dec3","property","type","_dec4","bindToState","_dec5","_dec6","expectedAnnotations","expectedTypes","_dec7","_dec8","_dec9","event","_dec10","_dec11","_dec12","association","_dec13","_dec14","_dec15","aggregation","_dec16","_dec17","_dec18","isBindingInfo","_dec19","bindable","required","_dec20","_dec21","_dec22","_dec23","_dec24","_dec25","_dec26","_dec27","_dec28","_dec29","_dec30","xmlEventHandler","_dec31","_dec32","_class","_class2","_MacroAPI","props","others","_this","combinedProps","id","_flexId","vhIdPrefix","idPrefix","_apiId","includes","generate","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","focusHandlersAttached","_descriptor26","_descriptor27","_inheritsLoose","_proto","prototype","getCollaborationBinding","field","binding","getBindingContext","getBinding","isA","oView","CommonUtils","getTargetView","extractChangeEventDetails","changeEvent","source","getSource","controller","getPageController","bindingContext","isTransient","valueResolved","getParameter","Promise","resolve","valid","fieldValidity","FieldRuntimeHelper","getFieldStateOnChange","state","customValueBinding","handleChange","newValue","valueModel","getModel","model","setProperty","path","updateBindings","feController","getExtensionController","undefined","then","oSource","mParameters","fireEvent","value","getValue","isValid","_sideEffects","handleFieldChange","fetchRecommendations","catch","Log","debug","valueResolvedAndPatchSent","async","setTimeout","editFlow","syncTask","prepareDeferredSideEffectsForField","bCollaborationEnabled","collaborativeDraft","isConnected","data","getBindingInfo","parts","filter","part","indexOf","map","getPath","retainAsyncMessages","updateCollaboration","hasPendingChanges","attachEventOnce","send","action","Activity","Change","content","releaseAsyncMessages","handleLiveChange","_event","onValidateFieldGroup","sourceField","view","getController","handleFieldGroupChange","_setAriaLabelledBy","oContent","addAriaLabelledBy","aAriaLabelledBy","ariaLabelledBy","sId","aAriaLabelledBys","getAriaLabelledBy","onBeforeRendering","onAfterRendering","collaborationEnabled","addEventDelegate","onfocusin","evt","handleContentFocusIn","getControlInFieldWrapper","control","fieldWrapper","controls","getEditMode","getContentDisplay","getContentEdit","length","getLabelControls","referencingLabels","_getLabelsFromReferencingLabels","_getLabelsForFormFields","labelIds","LabelEnablement","getReferencingLabels","labelControls","getView","forEach","labelId","labelControl","byId","push","getId","getParent","getLabelControl","oControl","getItems","getSelected","getText","getTitle","Error","getMainPropertyRelativePath","mainPropertyRelativePath","setValue","setSelected","setText","getEnabled","getProperty","editMode","FieldEditMode","Disabled","link","setEnabled","enabled","editModeType","Editable","setEditMode","setLinkEnabled","addMessage","parameters","msgManager","getMessageManager","getResolvedPath","oMessage","Message","target","message","processor","description","persistent","addMessages","removeMessage","arr","getMessageModel","getData","result","find","e","removeMessages","Messaging","onMetadataAvailable","preparedProperties","prepareProperties","createContent","metaContextPath","getMetaPathObject","metaPath","contextPath","owner","_getOwner","inputFieldProperties","getPropertyBag","Object","defineProperty","get","readOnly","bindState","onLiveChange","hasListeners","preprocessorContext","odataMetaModel","getMetaModel","computedContextPath","getMetaContext","getComputedContextPath","computedMetaPath","createBindingContext","isPropertyInitial","visible","setUpField","models","viewData","JSONModel","getViewData","internal","getAppComponent","appComponent","isDynamicInstantiation","setOrBindProperty","requiredExpression","editableExpression","inlineEditEnabled","compileExpression","hasInlineEdit","computedEditMode","eventHandlers","change","liveChange","validateFieldGroup","handleTypeMissmatch","onHandleTypeMissmatch","bind","handleFileSizeExceed","onHandleFileSizeExceed","handleUploadComplete","ev","fileFilenameExpression","fileRelativePropertyPath","uploadStream","onUploadStream","removeStream","handleOpenUploader","onHandleOpenUploader","handleCloseUploader","onHandleCloseUploader","openExternalLink","onOpenExternalLink","onFocusOut","linkPressed","onLinkPressed","onDataFieldWithIBN","oDataField","getObject","mNavigationParameters","navigationContexts","Mapping","semanticObjectMapping","_intentBasedNavigation","navigate","SemanticObject","Action","onDataFieldActionButton","oThis","sInvocationGrouping","InvocationGrouping","$EnumMember","bIsNavigable","navigateAfterAction","entities","split","entitySetName","oParams","contexts","invocationGrouping","label","Label","isNavigable","feFrameworkCall","invokeAction","displayAggregationDetails","FieldRuntime","displayAggregateDetails","getContextRelativeTargetObjectPath","dataModelPath","convertedMetaPath","$Type","onDataFieldWithNavigationPath","Target","showCollaborationEditUser","onShowCollaborationEditUser","valueHelpId","FieldStructure","getPossibleValueHelpTemplateId","getFieldStructureTemplate","MessageToast","show","pressLink","handleContentFocusOut","settings","properties","getMetadata","getAllProperties","aggregations","getAllAggregations","propertyName","currentPropertyValue","aggregationName","aggregationContent","getAggregation","Array","isArray","childrenArray","managedObject","getInlineEditProperty","getDataModelObjectForMetaPath","targetProperty","getDataModelObjectPathForValue","targetObject","getInlineEditPropertyName","fullyQualifiedName","MacroAPI","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","getOwnPropertyDescriptor"],"sources":["./Field.ts"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataFieldWithNavigationPath,\n\tDataPointTypeTypes,\n\tOperationGroupingType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression } from \"sap/fe/base/BindingToolkit\";\nimport type { EnhanceWithUI5, PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, association, defineUI5Class, event, mixin, property, xmlEventHandler } from \"sap/fe/base/ClassSupport\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type { XMLPreprocessorContext } from \"sap/fe/core/TemplateComponent\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport { Activity } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport type FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { getContextRelativeTargetObjectPath, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type Contact from \"sap/fe/macros/contact/Contact\";\nimport type BuildingBlockObjectProperty from \"sap/fe/macros/controls/BuildingBlockObjectProperty\";\nimport type FieldWrapper from \"sap/fe/macros/controls/FieldWrapper\";\nimport type TextLink from \"sap/fe/macros/controls/TextLink\";\nimport FieldRuntime from \"sap/fe/macros/field/FieldRuntime\";\nimport { getDataModelObjectPathForValue } from \"sap/fe/macros/field/FieldTemplating\";\nimport type DataPoint from \"sap/fe/macros/internal/DataPoint\";\nimport * as FieldStructure from \"sap/fe/macros/internal/field/FieldStructure\";\nimport type { FieldBlockProperties, InputFieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport { setUpField } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport type Avatar from \"sap/m/Avatar\";\nimport type Button from \"sap/m/Button\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport type CheckBox from \"sap/m/CheckBox\";\nimport type { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport type ExpandableText from \"sap/m/ExpandableText\";\nimport type HBox from \"sap/m/HBox\";\nimport type InputBase from \"sap/m/InputBase\";\nimport type { InputBase$ChangeEvent } from \"sap/m/InputBase\";\nimport type Label from \"sap/m/Label\";\nimport type Link from \"sap/m/Link\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport type ObjectStatus from \"sap/m/ObjectStatus\";\nimport type RatingIndicator from \"sap/m/RatingIndicator\";\nimport type Text from \"sap/m/Text\";\nimport type VBox from \"sap/m/VBox\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport LabelEnablement from \"sap/ui/core/LabelEnablement\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport Message from \"sap/ui/core/message/Message\";\nimport type MessageType from \"sap/ui/core/message/MessageType\";\nimport type FormElement from \"sap/ui/layout/form/FormElement\";\nimport type { Field$ChangeEvent, default as mdcField } from \"sap/ui/mdc/Field\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type { default as ODataV4Context, default as V4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type FileUploader from \"sap/ui/unified/FileUploader\";\nimport type {\n\tFileUploader$ChangeEvent,\n\tFileUploader$FileSizeExceedEvent,\n\tFileUploader$TypeMissmatchEvent\n} from \"sap/ui/unified/FileUploader\";\nimport type { EventHandler } from \"types/extension_types\";\nimport type { MetaModelEnum, MetaModelType } from \"../../../../../../types/metamodel_types\";\nimport MacroAPI from \"./MacroAPI\";\nimport type Email from \"./contact/Email\";\nimport type FileWrapper from \"./controls/FileWrapper\";\nimport type FieldFormatOptions from \"./field/FieldFormatOptions\";\nimport FieldRuntimeHelper from \"./field/FieldRuntimeHelper\";\nimport InlineEdit from \"./inlineEdit/InlineEdit\";\n\ntype ControlWithAccessibility = Control & { addAriaLabelledBy?: (id: string) => void; getAriaLabelledBy: () => string[] };\n\n/**\n * Building block for creating a field based on the metadata provided by OData V4.\n * <br>\n * Usually, a DataField or DataPoint annotation is expected, but the field can also be used to display a property from the entity type.\n * When creating a Field building block, you must provide an ID to ensure everything works correctly.\n *\n *\n * Usage example:\n * <pre>\n * &lt;macros:Field id=\"MyField\" metaPath=\"MyProperty\" /&gt;\n * </pre>\n * <a href=\"/sapui5-sdk-internal/test-resources/sap/fe/core/fpmExplorer/index.html#/buildingBlocks/buildingBlockOverview\" target=\"_blank\" >Overview of Building Blocks</a>\n * @alias sap.fe.macros.Field\n * @public\n */\n@defineUI5Class(\"sap.fe.macros.Field\", {\n\treturnTypes: [\n\t\t\"sap.fe.core.controls.FormElementWrapper\" /*, not sure i want to add those yet \"sap.fe.macros.Field\", \"sap.m.HBox\", \"sap.fe.macros.controls.ConditionalWrapper\", \"sap.m.Button\"*/\n\t]\n})\n@mixin(InlineEdit)\nclass Field extends MacroAPI {\n\t/**\n\t * An expression that allows you to control the editable state of the field.\n\t *\n\t * If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine if the page is currently editable.\n\t * Please note that you cannot set a field to editable if it has been defined in the annotation as not editable.\n\t * @private\n\t * @deprecated\n\t */\n\t@property({ type: \"boolean\" })\n\tpublic readonly editable!: boolean;\n\n\t/**\n\t * An expression that allows you to control the read-only state of the field.\n\t *\n\t * If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine the current state.\n\t * @public\n\t */\n\t@property({ type: \"boolean\", bindToState: true })\n\tpublic readonly readOnly!: boolean;\n\n\t/**\n\t * The identifier of the Field control.\n\t */\n\t@property({ type: \"string\" })\n\tpublic id!: string;\n\n\t/**\n\t * Defines the relative path of the property in the metamodel, based on the current contextPath.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\texpectedAnnotations: [],\n\t\texpectedTypes: [\"EntitySet\", \"EntityType\", \"Singleton\", \"NavigationProperty\", \"Property\"]\n\t})\n\tpublic readonly metaPath!: string;\n\n\t/**\n\t * Wrap field\n\t */\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic readonly wrap?: boolean;\n\n\t/**\n\t * Defines the path of the context used in the current page or block.\n\t * This setting is defined by the framework.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\texpectedTypes: [\"EntitySet\", \"EntityType\", \"Singleton\", \"NavigationProperty\"]\n\t})\n\tpublic readonly contextPath!: string;\n\n\t/**\n\t * An event containing details is triggered when the value of the field is changed.\n\t * @public\n\t */\n\t@event()\n\tchange!: EventHandler;\n\n\t/**\n\t * An event containing details is triggered when the field get the focus.\n\t *\n\t */\n\t@event()\n\tfocusin!: EventHandler;\n\n\t/**\n\t * An event containing details is triggered when the value of the field is live changed.\n\t * @public\n\t */\n\t@event()\n\tliveChange!: EventHandler;\n\n\t@association({\n\t\ttype: \"string\"\n\t})\n\tpublic idPrefix?: string;\n\n\t/**\n\t * Prefix added to the generated ID of the value help used for the field\n\t */\n\t@association({\n\t\ttype: \"string\"\n\t})\n\tpublic vhIdPrefix!: string;\n\n\t/**\n\t * Flag indicating whether action will navigate after execution\n\t */\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic readonly navigateAfterAction: boolean = true;\n\n\t/**\n\t * A set of options that can be configured.\n\t * @public\n\t */\n\t@aggregation({ type: \"sap.fe.macros.field.FieldFormatOptions\" })\n\tpublic readonly formatOptions?: FieldFormatOptions;\n\n\t@association({ type: \"string\" })\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tpublic _flexId?: string;\n\n\t/**\n\t * Edit Mode of the field.\n\t *\n\t * If the editMode is undefined then we compute it based on the metadata\n\t * Otherwise we use the value provided here.\n\t */\n\t@property({\n\t\ttype: \"sap.ui.mdc.enums.FieldEditMode\"\n\t})\n\tpublic readonly editMode?: FieldEditMode | CompiledBindingToolkitExpression;\n\n\t/**\n\t * Option to add semantic objects for a field.\n\t * This parameter overwrites the semantic objects defined through annotations.\n\t * Valid options are either a single semantic object, a stringified array of semantic objects,\n\t * a formatter or a single binding expression returning either a single semantic object or an array of semantic objects.\n\t * @public\n\t */\n\t@property({ type: \"string\", isBindingInfo: true })\n\tpublic readonly semanticObject!: PropertyBindingInfo;\n\n\t/**\n\t * This is used to optionally provide an external value that comes from a different model than the oData model.\n\t * It is designed to work with a field with value help, and without support for complex value help (currency / unit).\n\t * @experimental\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\tbindable: true,\n\t\tisBindingInfo: true,\n\t\trequired: false\n\t})\n\tpublic readonly value?: string;\n\n\t/**\n\t * This is used to optionally provide an external description that comes from a different model than the oData model.\n\t * This should be used in conjunction with the value property.\n\t * @experimental\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\tbindable: true,\n\t\tisBindingInfo: true,\n\t\trequired: false\n\t})\n\tpublic readonly description?: string;\n\n\t@property({\n\t\ttype: \"sap.ui.core.TextAlign\"\n\t})\n\tpublic readonly textAlign?: string;\n\n\t@property({ type: \"object\", isBindingInfo: true })\n\tpublic readonly showErrorObjectStatus?: object | boolean;\n\n\t@property({ type: \"string\" })\n\tpublic collaborationEnabled?: boolean; // Need to be computed on demand\n\n\t@property({ type: \"string\" })\n\tpublic mainPropertyRelativePath?: string; // Need to be computed on demand\n\n\t@property({ type: \"object\", isBindingInfo: true })\n\tcustomValueBinding?: boolean | string | number | PropertyBindingInfo;\n\n\t@property({ type: \"boolean\" })\n\tinlineEditEnabled? = false;\n\n\t@property({ type: \"boolean\" })\n\thasInlineEdit?: boolean;\n\n\tprivate focusHandlersAttached = false;\n\n\tprivate computedMetaPath?: Context;\n\n\tprivate computedContextPath?: Context;\n\n\tprivate odataMetaModel!: ODataMetaModel | undefined;\n\n\t@property({ type: \"string\" })\n\t_apiId?: string;\n\n\t@property({ type: \"boolean\" })\n\trequired?: boolean;\n\n\tprivate preprocessorContext!: XMLPreprocessorContext | undefined;\n\n\t/**\n\t * Gets the binding used for collaboration notifications.\n\t * @param field\n\t * @returns The binding\n\t */\n\tgetCollaborationBinding(field: Control): ODataListBinding | ODataContextBinding {\n\t\tlet binding = (field.getBindingContext() as V4Context).getBinding();\n\n\t\tif (!binding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\tconst oView = CommonUtils.getTargetView(field);\n\t\t\tbinding = oView.getBindingContext().getBinding();\n\t\t}\n\n\t\treturn binding;\n\t}\n\n\t/**\n\t * Extracts data from a change event for usage in the handleChange method.\n\t * @param changeEvent The change event object.\n\t * @returns An object containing the extracted details\n\t */\n\tprivate extractChangeEventDetails(changeEvent: Field$ChangeEvent & UI5Event<{ isValid: boolean }>): {\n\t\tsource: mdcField;\n\t\tcontroller: PageController;\n\t\tisTransient: boolean;\n\t\tvalueResolved: Promise<void>;\n\t\tvalid: boolean | undefined;\n\t\tfieldValidity: boolean;\n\t\tcustomValueBinding: boolean | string | number | PropertyBindingInfo | undefined;\n\t} {\n\t\tconst source = changeEvent.getSource();\n\t\tconst controller = this.getPageController();\n\t\t// If the field is bound to a JSON model, source.getBindingContext() returns undefined.\n\t\t// In such cases, we cannot call isTransient on it. Defaulting to false.\n\t\tconst bindingContext = source && source.getBindingContext();\n\t\tconst isTransient = bindingContext ? (bindingContext as unknown as { isTransient: Function }).isTransient() : false;\n\t\tconst valueResolved = changeEvent.getParameter(\"promise\") || Promise.resolve();\n\t\tconst valid = changeEvent.getParameter(\"valid\");\n\t\tconst fieldValidity = FieldRuntimeHelper.getFieldStateOnChange(changeEvent).state[\"validity\"];\n\t\tconst customValueBinding = this?.customValueBinding;\n\n\t\treturn { source, controller, isTransient, valueResolved, valid, fieldValidity, customValueBinding };\n\t}\n\n\t@xmlEventHandler()\n\thandleChange(changeEvent: Field$ChangeEvent & UI5Event<{ isValid: boolean }>): void {\n\t\tconst { source, controller, isTransient, valueResolved, valid, fieldValidity, customValueBinding } =\n\t\t\tthis.extractChangeEventDetails(changeEvent);\n\n\t\tif (customValueBinding) {\n\t\t\tlet newValue;\n\t\t\tconst valueModel = source?.getModel(customValueBinding.model) as JSONModel | undefined;\n\t\t\tif (source.isA(\"sap.m.CheckBox\")) {\n\t\t\t\tnewValue = (changeEvent as CheckBox$SelectEvent).getParameter(\"selected\");\n\t\t\t} else {\n\t\t\t\tnewValue = (changeEvent as InputBase$ChangeEvent).getParameter(\"value\");\n\t\t\t}\n\t\t\tvalueModel?.setProperty(customValueBinding.path, newValue);\n\t\t\tvalueModel?.updateBindings(true);\n\t\t}\n\n\t\t// Use the FE Controller instead of the extensionAPI to access internal FE controllers\n\t\tconst feController = controller ? FieldRuntimeHelper.getExtensionController(controller) : undefined;\n\n\t\t// Currently we have undefined and true... and our creation row implementation relies on this.\n\t\t// I would move this logic to this place as it's hard to understand for field consumer\n\t\tvalueResolved\n\t\t\t.then(() => {\n\t\t\t\t// The event is gone. For now we'll just recreate it again\n\t\t\t\t(changeEvent as { oSource?: mdcField }).oSource = source;\n\t\t\t\t(changeEvent as { mParameters?: { valid?: boolean } }).mParameters = {\n\t\t\t\t\tvalid: valid ?? true\n\t\t\t\t};\n\t\t\t\tthis?.fireEvent(\"change\", { value: this.getValue(), isValid: valid ?? true });\n\t\t\t\tif (!isTransient) {\n\t\t\t\t\t// trigger side effects without registering deferred side effects\n\t\t\t\t\t// deferred side effects are already registered by prepareDeferredSideEffectsForField before valueResolved is resolved.\n\t\t\t\t\tfeController?._sideEffects.handleFieldChange(changeEvent, !!fieldValidity, valueResolved, true);\n\t\t\t\t}\n\t\t\t\t// Recommendations\n\t\t\t\tif (controller) {\n\t\t\t\t\tFieldRuntimeHelper.fetchRecommendations(source, controller);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\t// The event is gone. For now we'll just recreate it again\n\t\t\t\t(changeEvent as { oSource?: mdcField }).oSource = source;\n\t\t\t\t(changeEvent as { mParameters?: { valid?: boolean } }).mParameters = {\n\t\t\t\t\tvalid: false\n\t\t\t\t};\n\t\t\t\tLog.debug(\"Prerequisites on Field for the SideEffects and Recommendations have been rejected\");\n\t\t\t\t// as the UI might need to react on. We could provide a parameter to inform if validation\n\t\t\t\t// was successful?\n\t\t\t\tthis.fireEvent(\"change\", { value: this.getValue(), isValid: valid ?? false });\n\t\t\t});\n\n\t\t// For the EditFlow synchronization, we need to wait for the corresponding PATCH request to be sent (or an error to be detected), otherwise there could be e.g. action or save invoked in parallel with the PATCH request.\n\t\t// This is done with a 0-timeout, to allow for the 'patchSent' event to be sent by the binding (then the internal edit flow synchronization kicks in with EditFlow.handlePatchSent).\n\t\tconst valueResolvedAndPatchSent = valueResolved\n\t\t\t.then(async () => {\n\t\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\t\tsetTimeout(resolve, 0);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(async () => {\n\t\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\t\tsetTimeout(resolve, 0);\n\t\t\t\t});\n\t\t\t});\n\t\tfeController?.editFlow.syncTask(valueResolvedAndPatchSent);\n\n\t\t// if the context is transient, it means the request would fail anyway as the record does not exist in reality\n\t\t// Should the request be made in future if the context is transient?\n\t\tif (isTransient) {\n\t\t\treturn;\n\t\t}\n\n\t\tfeController?._sideEffects.prepareDeferredSideEffectsForField(changeEvent, !!fieldValidity, valueResolved);\n\t\t// Collaboration Draft Activity Sync\n\t\tconst bCollaborationEnabled = controller?.collaborativeDraft.isConnected();\n\n\t\tif (bCollaborationEnabled && fieldValidity) {\n\t\t\tconst binding = this.getCollaborationBinding(source);\n\n\t\t\tconst data = [\n\t\t\t\t...((source.getBindingInfo(\"value\") || source.getBindingInfo(\"selected\"))?.parts || []),\n\t\t\t\t...(source.getBindingInfo(\"additionalValue\")?.parts || [])\n\t\t\t]\n\t\t\t\t.filter((part) => {\n\t\t\t\t\treturn part?.path !== undefined && part.path.indexOf(\"@@\") < 0; // Remove binding parts with @@ that make no sense for collaboration messages\n\t\t\t\t})\n\t\t\t\t.map(function (part: { path: string }) {\n\t\t\t\t\treturn `${source.getBindingContext()?.getPath()}/${part.path}`;\n\t\t\t\t});\n\n\t\t\t// From this point, we will always send a collaboration message (UNLOCK or CHANGE), so we retain\n\t\t\t// a potential UNLOCK that would be sent in handleFocusOut, to make sure it's sent after the CHANGE message\n\t\t\tcontroller?.collaborativeDraft.retainAsyncMessages(data);\n\n\t\t\tconst updateCollaboration = (): void => {\n\t\t\t\tif (binding.hasPendingChanges()) {\n\t\t\t\t\t// The value has been changed by the user --> wait until it's sent to the server before sending a notification to other users\n\t\t\t\t\tbinding.attachEventOnce(\"patchCompleted\", function () {\n\t\t\t\t\t\tcontroller?.collaborativeDraft.send({ action: Activity.Change, content: data });\n\t\t\t\t\t\tcontroller?.collaborativeDraft.releaseAsyncMessages(data);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcontroller?.collaborativeDraft.releaseAsyncMessages(data);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (source.isA(\"sap.ui.mdc.Field\") || (source as Control).isA(\"sap.ui.mdc.MultiValueField\")) {\n\t\t\t\tvalueResolved\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tupdateCollaboration();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tupdateCollaboration();\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdateCollaboration();\n\t\t\t}\n\t\t}\n\t}\n\n\t@xmlEventHandler()\n\thandleLiveChange(_event: UI5Event): void {\n\t\tthis.fireEvent(\"liveChange\");\n\t}\n\n\t@xmlEventHandler()\n\tonValidateFieldGroup(_event: Control$ValidateFieldGroupEvent): void {\n\t\tconst sourceField = _event.getSource(),\n\t\t\tview = CommonUtils.getTargetView(sourceField),\n\t\t\tcontroller = view.getController();\n\n\t\tconst feController = FieldRuntimeHelper.getExtensionController(controller);\n\t\tfeController._sideEffects.handleFieldGroupChange(_event);\n\t}\n\n\tconstructor(props?: PropertiesOf<Field, \"change\" | \"liveChange\" | \"focusin\">, others?: PropertiesOf<Field>) {\n\t\tlet combinedProps;\n\n\t\tif (props) {\n\t\t\tif (typeof props === \"string\") {\n\t\t\t\tcombinedProps = { ...others, id: props } as PropertiesOf<Field>;\n\t\t\t} else {\n\t\t\t\tcombinedProps = { ...props, ...others } as PropertiesOf<Field>;\n\t\t\t}\n\n\t\t\tconst { _flexId, vhIdPrefix, idPrefix, id, _apiId } = combinedProps;\n\n\t\t\tif (_flexId && !_flexId.includes(\"-content\")) {\n\t\t\t\tcombinedProps._apiId = _flexId;\n\t\t\t\tcombinedProps._flexId = `${_flexId}-content`;\n\t\t\t}\n\n\t\t\tif (!vhIdPrefix) {\n\t\t\t\t//no vhIdPrefix means \"public use case\"\n\t\t\t\tcombinedProps.vhIdPrefix = \"FieldValueHelp\";\n\t\t\t\tcombinedProps._flexId = id;\n\t\t\t\tcombinedProps.idPrefix = idPrefix || id;\n\t\t\t}\n\t\t\tif (!id) {\n\t\t\t\tif (combinedProps._apiId) {\n\t\t\t\t\tcombinedProps.id = combinedProps._apiId;\n\t\t\t\t} else if (idPrefix) {\n\t\t\t\t\tcombinedProps.id = generate([idPrefix, \"Field\"]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsuper(combinedProps);\n\t}\n\n\t_setAriaLabelledBy(oContent?: ControlWithAccessibility): void {\n\t\tif (oContent && oContent.addAriaLabelledBy) {\n\t\t\tconst aAriaLabelledBy = this.ariaLabelledBy;\n\n\t\t\tfor (const sId of aAriaLabelledBy) {\n\t\t\t\tconst aAriaLabelledBys = oContent.getAriaLabelledBy() || [];\n\t\t\t\tif (!aAriaLabelledBys.includes(sId)) {\n\t\t\t\t\toContent.addAriaLabelledBy(sId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonBeforeRendering(): void {\n\t\t// before calling the renderer of the Field parent control may have set ariaLabelledBy\n\t\t// we ensure it is passed to its inner controls\n\t\tthis._setAriaLabelledBy(this.content as unknown as ControlWithAccessibility);\n\t}\n\n\tonAfterRendering(): void {\n\t\tif (this.collaborationEnabled && !this.focusHandlersAttached) {\n\t\t\t// The event delegate doesn't work on the Field, we need to put it on its content (FieldWrapper)\n\t\t\tthis.content?.addEventDelegate(\n\t\t\t\t{\n\t\t\t\t\tonfocusin: (evt: FocusEvent) => {\n\t\t\t\t\t\tthis.getPageController().collaborativeDraft.handleContentFocusIn(this, evt);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tthis\n\t\t\t);\n\n\t\t\tthis.focusHandlersAttached = true; // To avoid attaching events twice\n\t\t}\n\t}\n\n\t/**\n\t * Returns the first visible control in the FieldWrapper.\n\t * @param control FieldWrapper\n\t * @returns The first visible control\n\t */\n\tstatic getControlInFieldWrapper(control: Control | undefined): Control | undefined {\n\t\tif (control?.isA(\"sap.fe.macros.controls.FieldWrapper\") && !control?.isA(\"sap.fe.macros.controls.FileWrapper\")) {\n\t\t\tconst fieldWrapper = control as EnhanceWithUI5<FieldWrapper>;\n\t\t\tconst controls = fieldWrapper.getEditMode() === \"Display\" ? [fieldWrapper.getContentDisplay()] : fieldWrapper.getContentEdit();\n\t\t\tif (controls.length >= 1) {\n\t\t\t\treturn controls[0];\n\t\t\t}\n\t\t} else {\n\t\t\treturn control;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the label controls of the field\n\t * when being referenced by the 'labelFor' attribute on the label or when in a form.\n\t * @returns The label controls\n\t */\n\tgetLabelControls(): Label[] {\n\t\tconst referencingLabels = this._getLabelsFromReferencingLabels();\n\t\treturn referencingLabels.length > 0 ? referencingLabels : this._getLabelsForFormFields();\n\t}\n\n\t/**\n\t * Returns the label controls of the field when referenced by a label.\n\t * @returns The label controls\n\t */\n\t_getLabelsFromReferencingLabels(): Label[] {\n\t\tconst labelIds = LabelEnablement.getReferencingLabels(this);\n\t\tconst labelControls: Label[] = [];\n\t\tconst view = this.getPageController().getView();\n\t\tlabelIds.forEach((labelId) => {\n\t\t\tconst labelControl = view.byId(labelId);\n\t\t\tif (labelControl) {\n\t\t\t\tlabelControls.push(labelControl as Label);\n\t\t\t}\n\t\t});\n\t\treturn labelControls;\n\t}\n\n\t/**\n\t * Returns the label controls of the field or connected field when in a form.\n\t * @returns The label controls\n\t */\n\t_getLabelsForFormFields(): Label[] {\n\t\t// if the field is not in a form, we return undefined\n\t\tif (!this.getId().includes(\"FormElement\")) {\n\t\t\treturn [];\n\t\t}\n\t\tlet control = this as ManagedObject | null;\n\t\t// search the parents of the control until we find a sap.ui.layout.form.FormElement\n\t\t// or we reach the root control\n\t\twhile (control && !control.isA(\"sap.ui.layout.form.FormElement\")) {\n\t\t\tcontrol = (control as ManagedObject)?.getParent();\n\t\t}\n\t\treturn control ? [(control as FormElement).getLabelControl() as Label] : [];\n\t}\n\n\t/**\n\t * Retrieves the current value of the field.\n\t * @public\n\t * @returns The current value of the field\n\t */\n\tgetValue(): boolean | string | float | undefined {\n\t\tlet oControl = Field.getControlInFieldWrapper(this.content);\n\t\tif (!oControl) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (this.collaborationEnabled && oControl?.isA(\"sap.m.HBox\")) {\n\t\t\toControl = (oControl as HBox).getItems()[0];\n\t\t}\n\t\tif (oControl?.isA(\"sap.m.CheckBox\")) {\n\t\t\treturn (oControl as CheckBox).getSelected();\n\t\t} else if (oControl?.isA(\"sap.m.RatingIndicator\")) {\n\t\t\treturn (oControl as RatingIndicator).getValue();\n\t\t} else if (oControl?.isA(\"sap.m.InputBase\")) {\n\t\t\treturn (oControl as InputBase).getValue();\n\t\t} else if (oControl?.isA(\"sap.m.Link\")) {\n\t\t\treturn (oControl as Link).getText();\n\t\t} else if (oControl?.isA(\"sap.m.Label\")) {\n\t\t\treturn (oControl as Label).getText();\n\t\t} else if (oControl?.isA(\"sap.m.Text\")) {\n\t\t\treturn (oControl as Text).getText(false);\n\t\t} else if (oControl?.isA<EnhanceWithUI5<TextLink>>(\"sap.fe.macros.controls.TextLink\")) {\n\t\t\treturn oControl.getText();\n\t\t} else if (oControl?.isA(\"sap.m.ObjectStatus\")) {\n\t\t\treturn (oControl as ObjectStatus).getText();\n\t\t} else if (oControl?.isA(\"sap.m.ObjectIdentifier\")) {\n\t\t\treturn (oControl as ObjectIdentifier).getTitle();\n\t\t} else if (oControl?.isA<mdcField>(\"sap.ui.mdc.Field\")) {\n\t\t\treturn oControl.getValue(); // FieldWrapper\n\t\t} else if (\n\t\t\toControl?.isA<DataPoint>(\"sap.fe.macros.internal.DataPoint\") ||\n\t\t\toControl?.isA<Email>(\"sap.fe.macros.contact.Email\") ||\n\t\t\toControl?.isA<Contact>(\"sap.fe.macros.contact.Contact\")\n\t\t) {\n\t\t\t// this is a BBv4 underneath, call the method on the BBV4\n\t\t\treturn oControl.getValue();\n\t\t} else {\n\t\t\tthrow new Error(\"getting value not yet implemented for this field type\");\n\t\t}\n\t}\n\n\tgetMainPropertyRelativePath(): string | undefined {\n\t\treturn this.mainPropertyRelativePath;\n\t}\n\n\t/**\n\t * Sets the current value of the field.\n\t * @param value\n\t * @public\n\t * @returns The current field reference\n\t */\n\tsetValue(value: boolean | string): Control {\n\t\tif (!this.content) {\n\t\t\treturn this.setProperty(\"value\", value);\n\t\t}\n\t\tlet control = Field.getControlInFieldWrapper(this.content);\n\t\tif (this.collaborationEnabled && control?.isA(\"sap.m.HBox\")) {\n\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\tcontrol = (control as HBox).getItems()[0];\n\t\t}\n\t\tif (control?.isA<CheckBox>(\"sap.m.CheckBox\")) {\n\t\t\tcontrol.setSelected(value as boolean);\n\t\t} else if (control?.isA<InputBase>(\"sap.m.InputBase\")) {\n\t\t\tcontrol.setValue(value as string);\n\t\t} else if (control?.isA<Text>(\"sap.m.Text\")) {\n\t\t\tcontrol.setText(value as string);\n\t\t} else if (control?.isA<mdcField>(\"sap.ui.mdc.Field\")) {\n\t\t\tcontrol.setValue(value);\n\t\t} else {\n\t\t\tthrow \"setting value not yet implemented for this field type\";\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the current enablement state of the field.\n\t * @public\n\t * @returns Boolean value with the enablement state\n\t */\n\tgetEnabled(): boolean {\n\t\tlet control = Field.getControlInFieldWrapper(this.content);\n\t\tif (control !== null && control !== undefined && !control?.isA(\"sap.m.Text\")) {\n\t\t\t//check needed for file wrapper which does not have a content\n\t\t\tif (this.collaborationEnabled && control.isA<HBox>(\"sap.m.HBox\")) {\n\t\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\t\tcontrol = control.getItems()[0];\n\t\t\t}\n\t\t\tif (control.isA<VBox>(\"sap.m.VBox\")) {\n\t\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\t\tcontrol = control.getItems()[0];\n\t\t\t}\n\n\t\t\t// we need to call the getProperty in the following examples\n\t\t\t// otherwise we end up in a max call stack size\n\t\t\tif (control.isA<CheckBox>(\"sap.m.CheckBox\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<InputBase>(\"sap.m.InputBase\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<Link>(\"sap.m.Link\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<Button>(\"sap.m.Button\")) {\n\t\t\t\treturn control.getProperty(\"enabled\");\n\t\t\t} else if (control.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\t\treturn true;\n\t\t\t} else if (control.isA<ObjectIdentifier>(\"sap.m.ObjectIdentifier\")) {\n\t\t\t\treturn true;\n\t\t\t} else if (control.isA<FormElementWrapper>(\"sap.fe.core.controls.FormElementWrapper\")) {\n\t\t\t\t// It is for a Draft Indicator\n\t\t\t\treturn true;\n\t\t\t} else if (control.isA<DataPoint>(\"sap.fe.macros.internal.DataPoint\")) {\n\t\t\t\treturn control.getEnabled();\n\t\t\t} else if (control.isA<Email>(\"sap.fe.macros.contact.Email\")) {\n\t\t\t\treturn control.getProperty(\"linkEnabled\");\n\t\t\t} else if (control.isA<Contact>(\"sap.fe.macros.contact.Contact\")) {\n\t\t\t\treturn control.getEnabled();\n\t\t\t} else if (control.isA<ExpandableText>(\"sap.m.ExpandableText\")) {\n\t\t\t\t// otherwise show more would be inactive\n\t\t\t\treturn true;\n\t\t\t} else if (control.isA<mdcField>(\"sap.ui.mdc.Field\")) {\n\t\t\t\tconst editMode = control.getEditMode();\n\t\t\t\t// The mdc field does not have a direct property \"enabled\", therefore we map\n\t\t\t\t// the internal disabled setting of the edit mode in this graceful pattern\n\t\t\t\treturn editMode !== FieldEditMode.Disabled;\n\t\t\t} else if (control.isA<FileWrapper>(\"sap.fe.macros.controls.FileWrapper\")) {\n\t\t\t\t// The file wrapper could contain a link or an avatar with a delete button,\n\t\t\t\t// we must ensure the enablement in both cases\n\t\t\t\treturn control.link ? control.link.getProperty(\"enabled\") : true;\n\t\t\t} else if (\n\t\t\t\tcontrol.isA(\"sap.fe.macros.controls.ConditionalWrapper\") ||\n\t\t\t\t(control as Control).isA<TextLink>(\"sap.fe.macros.controls.TextLink\")\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the current enablement state of the field.\n\t * @param enabled\n\t * @public\n\t * @returns The current field reference\n\t */\n\tsetEnabled(enabled: boolean): Control {\n\t\tlet control = Field.getControlInFieldWrapper(this.content);\n\t\tif (this.collaborationEnabled && control?.isA<HBox>(\"sap.m.HBox\")) {\n\t\t\t// for chaining reasons, let´s keep it like that\n\t\t\tcontrol = control.getItems()[0];\n\t\t}\n\n\t\t// we need to call the setProperty in the following examples\n\t\t// otherwise we end up in a max call stack size\n\t\tif (control?.isA<CheckBox>(\"sap.m.CheckBox\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<InputBase>(\"sap.m.InputBase\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<Link>(\"sap.m.Link\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<Button>(\"sap.m.Button\")) {\n\t\t\treturn control.setProperty(\"enabled\", enabled);\n\t\t} else if (control?.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\treturn control.setProperty(\"active\", enabled);\n\t\t} else if (control?.isA<ObjectIdentifier>(\"sap.m.ObjectIdentifier\")) {\n\t\t\treturn control.setProperty(\"titleActive\", enabled);\n\t\t} else if (control?.isA<mdcField>(\"sap.ui.mdc.Field\")) {\n\t\t\t// The mdc field does not have a direct property \"enabled\", therefore we map\n\t\t\t// the enabled property to the respective disabled setting of the edit mode\n\t\t\t// with this graceful pattern\n\t\t\tlet editModeType;\n\t\t\tif (enabled) {\n\t\t\t\teditModeType = FieldEditMode.Editable;\n\t\t\t} else {\n\t\t\t\teditModeType = FieldEditMode.Disabled;\n\t\t\t}\n\t\t\tcontrol.setEditMode(editModeType);\n\t\t} else if (control?.isA<Email>(\"sap.fe.macros.contact.Email\")) {\n\t\t\tcontrol.setLinkEnabled(enabled);\n\t\t\treturn control;\n\t\t} else if (control?.isA<DataPoint>(\"sap.fe.macros.internal.DataPoint\")) {\n\t\t\tcontrol.setEnabled(enabled);\n\t\t} else {\n\t\t\tthrow \"setEnabled isn't implemented for this field type\";\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a message to the field.\n\t * @param [parameters] The parameters to create message\n\t * @param parameters.type Type of the message\n\t * @param parameters.message Message text\n\t * @param parameters.description Message description\n\t * @param parameters.persistent True if the message is persistent\n\t * @returns The id of the message\n\t * @public\n\t */\n\taddMessage(parameters: { type?: MessageType; message?: string; description?: string; persistent?: boolean }): string {\n\t\tconst msgManager = this.getMessageManager();\n\t\tconst oControl = Field.getControlInFieldWrapper(this.content);\n\n\t\tlet path; //target for oMessage\n\t\tif (oControl?.isA(\"sap.m.CheckBox\")) {\n\t\t\tpath = (oControl as CheckBox).getBinding(\"selected\")?.getResolvedPath();\n\t\t} else if (oControl?.isA(\"sap.m.InputBase\")) {\n\t\t\tpath = (oControl as InputBase).getBinding(\"value\")?.getResolvedPath();\n\t\t} else if (oControl?.isA<Field>(\"sap.ui.mdc.Field\")) {\n\t\t\tpath = oControl.getBinding(\"value\")!.getResolvedPath();\n\t\t}\n\n\t\tconst oMessage = new Message({\n\t\t\ttarget: path,\n\t\t\ttype: parameters.type,\n\t\t\tmessage: parameters.message,\n\t\t\tprocessor: oControl?.getModel(),\n\t\t\tdescription: parameters.description,\n\t\t\tpersistent: parameters.persistent\n\t\t});\n\n\t\tmsgManager.addMessages(oMessage);\n\t\treturn oMessage.getId();\n\t}\n\n\t/**\n\t * Removes a message from the field.\n\t * @param id The id of the message\n\t * @public\n\t */\n\tremoveMessage(id: string): void {\n\t\tconst msgManager = this.getMessageManager();\n\t\tconst arr = msgManager.getMessageModel().getData();\n\t\tconst result = arr.find((e: Message) => e?.getId?.() === id);\n\t\tif (result) {\n\t\t\tmsgManager.removeMessages(result);\n\t\t}\n\t}\n\n\tgetMessageManager(): Messaging {\n\t\treturn Messaging;\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tif (!this.content) {\n\t\t\tconst preparedProperties = this.prepareProperties();\n\t\t\tif (preparedProperties) {\n\t\t\t\tthis.content = this.createContent(preparedProperties);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the properties required for the Field block.\n\t *\n\t * This function computes the meta path and context path, sets up the input field properties,\n\t * and calls the setUpField function to prepare the properties for the Field block.\n\t * Additionally, it sets the mainPropertyRelativePath and collaborationEnabled properties.\n\t * @returns The prepared properties for the Field block, or undefined if the preprocessor context is not available.\n\t */\n\tprepareProperties(): FieldBlockProperties | undefined {\n\t\tconst metaContextPath = this.getMetaPathObject(this.metaPath, this.contextPath);\n\n\t\tif (!metaContextPath) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst owner = this._getOwner();\n\t\tconst inputFieldProperties = this.getPropertyBag() as InputFieldBlockProperties;\n\t\tObject.defineProperty(inputFieldProperties, \"value\", {\n\t\t\tget: () => {\n\t\t\t\treturn this.value;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(inputFieldProperties, \"description\", {\n\t\t\tget: () => {\n\t\t\t\treturn this.description;\n\t\t\t}\n\t\t});\n\n\t\tinputFieldProperties.readOnly = this.bindState(\"readOnly\");\n\t\tinputFieldProperties.vhIdPrefix = this.vhIdPrefix;\n\t\tinputFieldProperties.idPrefix = this.idPrefix;\n\t\tinputFieldProperties._flexId = this._flexId;\n\t\tinputFieldProperties.onLiveChange = this.hasListeners(\"liveChange\") ? \"Something\" : undefined;\n\n\t\tthis.preprocessorContext = owner?.preprocessorContext;\n\t\tthis.odataMetaModel = this.getMetaModel();\n\t\tthis.computedContextPath = this.odataMetaModel?.getMetaContext(this.getComputedContextPath(this.contextPath));\n\n\t\tthis.computedMetaPath = this.odataMetaModel?.createBindingContext(metaContextPath.getPath()) as Context;\n\n\t\t// Some code rely on us checking if visible is defined or not, the only way to do it is through the isPropertyInitial method\n\t\tif (this.isPropertyInitial(\"visible\")) {\n\t\t\tinputFieldProperties.visible = undefined;\n\t\t}\n\n\t\t//if (this.preprocessorContext) {\n\t\t// If the ID is not set by the consumer, use the ID provided by UI5.\n\t\t// (The logic for setting the value help relies on always having an ID.)\n\t\tinputFieldProperties.id = inputFieldProperties.id ?? this.getId();\n\n\t\tconst preparedProperties = setUpField(\n\t\t\tinputFieldProperties,\n\t\t\t{} as TemplateProcessorSettings,\n\t\t\t(this.preprocessorContext?.models.viewData as JSONModel) ?? new JSONModel(this._getOwner()?.getViewData?.() ?? {}),\n\t\t\t(this.preprocessorContext?.models.internal as JSONModel) ?? this._getOwner()!.getAppComponent().getModel(\"internal\"),\n\t\t\tthis.preprocessorContext?.appComponent ?? this._getOwner()!.getAppComponent(),\n\t\t\tthis.isPropertyInitial(\"readOnly\"),\n\t\t\tthis.computedMetaPath,\n\t\t\tthis.computedContextPath\n\t\t);\n\t\tpreparedProperties.isDynamicInstantiation = true;\n\t\tif (preparedProperties.mainPropertyRelativePath) this.mainPropertyRelativePath = preparedProperties.mainPropertyRelativePath;\n\t\tif (preparedProperties.collaborationEnabled) this.collaborationEnabled = preparedProperties.collaborationEnabled;\n\t\treturn preparedProperties;\n\t}\n\n\t/**\n\t * Creates the content for the Field block.\n\t *\n\t * This function uses the prepared properties to create and return the content control for the Field block.\n\t * @param preparedProperties The prepared properties for the Field block.\n\t * @returns The created content control.\n\t */\n\tcreateContent(preparedProperties: FieldBlockProperties): Control {\n\t\ttry {\n\t\t\tconst controller = this.getPageController();\n\t\t\t// We have to set (or bind) some properties to the Field so they can be accessed by consumers/UI5\n\t\t\tif (preparedProperties.required === undefined) {\n\t\t\t\tthis.setOrBindProperty(\"required\", preparedProperties.requiredExpression);\n\t\t\t}\n\t\t\tthis.setOrBindProperty(\"editable\", preparedProperties.editableExpression);\n\n\t\t\tthis.setOrBindProperty(\"visible\", preparedProperties.visible);\n\t\t\tthis.setOrBindProperty(\"inlineEditEnabled\", preparedProperties.inlineEditEnabled);\n\t\t\tif (typeof preparedProperties.value !== \"string\") {\n\t\t\t\tthis.customValueBinding = preparedProperties.value;\n\t\t\t}\n\t\t\tthis.setOrBindProperty(\"hasInlineEdit\", compileExpression(preparedProperties.hasInlineEdit));\n\n\t\t\tif (preparedProperties.computedEditMode !== undefined) {\n\t\t\t\tthis.setOrBindProperty(\"editMode\", preparedProperties.editMode ?? compileExpression(preparedProperties.computedEditMode));\n\t\t\t}\n\t\t\tpreparedProperties.eventHandlers.change = (Field as unknown as { handleChange: EventHandler }).handleChange;\n\t\t\tpreparedProperties.eventHandlers.liveChange = (Field as unknown as { handleLiveChange: EventHandler }).handleLiveChange;\n\t\t\tpreparedProperties.eventHandlers.validateFieldGroup = (\n\t\t\t\tField as unknown as { onValidateFieldGroup: EventHandler }\n\t\t\t).onValidateFieldGroup;\n\t\t\tpreparedProperties.eventHandlers.handleTypeMissmatch = this.onHandleTypeMissmatch.bind(this);\n\t\t\tpreparedProperties.eventHandlers.handleFileSizeExceed = this.onHandleFileSizeExceed.bind(this);\n\t\t\tpreparedProperties.eventHandlers.handleUploadComplete = (ev): void => {\n\t\t\t\tFieldRuntimeHelper.handleUploadComplete(\n\t\t\t\t\tev,\n\t\t\t\t\t{ path: preparedProperties.fileFilenameExpression },\n\t\t\t\t\tpreparedProperties.fileRelativePropertyPath,\n\t\t\t\t\tcontroller\n\t\t\t\t);\n\t\t\t};\n\t\t\tpreparedProperties.eventHandlers.uploadStream = this.onUploadStream.bind(this);\n\t\t\tpreparedProperties.eventHandlers.removeStream = (ev): void => {\n\t\t\t\tFieldRuntimeHelper.removeStream(\n\t\t\t\t\tev as Field$ChangeEvent & UI5Event<{ isValid: boolean }>,\n\t\t\t\t\t{ path: preparedProperties.fileFilenameExpression },\n\t\t\t\t\tpreparedProperties.fileRelativePropertyPath,\n\t\t\t\t\tcontroller\n\t\t\t\t);\n\t\t\t};\n\t\t\tpreparedProperties.eventHandlers.handleOpenUploader = this.onHandleOpenUploader.bind(this);\n\t\t\tpreparedProperties.eventHandlers.handleCloseUploader = this.onHandleCloseUploader.bind(this);\n\t\t\tpreparedProperties.eventHandlers.openExternalLink = this.onOpenExternalLink.bind(this);\n\t\t\tpreparedProperties.eventHandlers.onFocusOut = this.onFocusOut.bind(this);\n\t\t\tpreparedProperties.eventHandlers.linkPressed = this.onLinkPressed.bind(this);\n\t\t\tpreparedProperties.eventHandlers.onDataFieldWithIBN = (ev: Button$PressEvent): void => {\n\t\t\t\tconst oDataField = preparedProperties.metaPath.getObject();\n\t\t\t\tif (!oDataField) return undefined;\n\t\t\t\tconst mNavigationParameters: {\n\t\t\t\t\tnavigationContexts?: ODataV4Context;\n\t\t\t\t\tlabel?: string;\n\t\t\t\t\tapplicableContexts?: ODataV4Context[];\n\t\t\t\t\tnotApplicableContexts?: ODataV4Context[];\n\t\t\t\t\tsemanticObjectMapping?: string;\n\t\t\t\t} = {\n\t\t\t\t\tnavigationContexts: ev.getSource()?.getBindingContext() as ODataV4Context\n\t\t\t\t};\n\t\t\t\tif (oDataField.Mapping) {\n\t\t\t\t\tmNavigationParameters.semanticObjectMapping = oDataField.Mapping;\n\t\t\t\t}\n\t\t\t\tcontroller._intentBasedNavigation.navigate(\n\t\t\t\t\toDataField.SemanticObject,\n\t\t\t\t\toDataField.Action,\n\t\t\t\t\tmNavigationParameters,\n\t\t\t\t\tev.getSource()\n\t\t\t\t);\n\t\t\t};\n\t\t\tpreparedProperties.eventHandlers.onDataFieldActionButton = (ev: Button$PressEvent): void => {\n\t\t\t\tconst oThis: FieldBlockProperties = preparedProperties;\n\t\t\t\tconst oDataField: MetaModelType<DataFieldForAction> = preparedProperties.metaPath.getObject();\n\t\t\t\tlet sInvocationGrouping = \"Isolated\";\n\t\t\t\tif (\n\t\t\t\t\toDataField.InvocationGrouping &&\n\t\t\t\t\t(oDataField.InvocationGrouping as unknown as MetaModelEnum<OperationGroupingType>).$EnumMember ===\n\t\t\t\t\t\t\"com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet\"\n\t\t\t\t) {\n\t\t\t\t\tsInvocationGrouping = \"ChangeSet\";\n\t\t\t\t}\n\t\t\t\tlet bIsNavigable = oThis.navigateAfterAction as boolean | string;\n\t\t\t\tbIsNavigable = bIsNavigable === \"false\" ? false : true;\n\n\t\t\t\tconst entities: Array<string> = oThis?.contextPath?.getPath().split(\"/\");\n\t\t\t\tconst entitySetName: string = entities[entities.length - 1];\n\n\t\t\t\tconst oParams = {\n\t\t\t\t\tcontexts: ev.getSource().getBindingContext()! as ODataV4Context,\n\t\t\t\t\tinvocationGrouping: sInvocationGrouping,\n\t\t\t\t\tmodel: ev.getSource().getModel() as ODataModel,\n\t\t\t\t\tlabel: oDataField.Label,\n\t\t\t\t\tisNavigable: bIsNavigable,\n\t\t\t\t\tentitySetName: entitySetName,\n\t\t\t\t\tfeFrameworkCall: true\n\t\t\t\t};\n\n\t\t\t\tcontroller.editFlow.invokeAction(oDataField.Action!, oParams);\n\t\t\t};\n\t\t\tpreparedProperties.eventHandlers.displayAggregationDetails = (ev): void => {\n\t\t\t\tFieldRuntime.displayAggregateDetails(ev, getContextRelativeTargetObjectPath(preparedProperties.dataModelPath));\n\t\t\t};\n\t\t\tif (preparedProperties.convertedMetaPath.$Type === \"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath\") {\n\t\t\t\tpreparedProperties.eventHandlers.onDataFieldWithNavigationPath = (ev): void => {\n\t\t\t\t\tFieldRuntimeHelper.onDataFieldWithNavigationPath(\n\t\t\t\t\t\tev.getSource(),\n\t\t\t\t\t\tcontroller,\n\t\t\t\t\t\t(preparedProperties.convertedMetaPath as DataFieldWithNavigationPath).Target.value\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t}\n\t\t\tpreparedProperties.eventHandlers.showCollaborationEditUser = this.onShowCollaborationEditUser.bind(this);\n\t\t\tpreparedProperties.valueHelpId = FieldStructure.getPossibleValueHelpTemplateId(\n\t\t\t\tpreparedProperties,\n\t\t\t\tthis.getPageController(),\n\t\t\t\tthis.getMetaModel()!\n\t\t\t);\n\t\t\tthis.content = FieldStructure.getFieldStructureTemplate(preparedProperties) as unknown as Control;\n\t\t} catch (e) {\n\t\t\tif (e instanceof Error) {\n\t\t\t\tMessageToast.show(e.message + \" in createContent of Field\");\n\t\t\t} else {\n\t\t\t\tMessageToast.show(\"An unknown error occurred\");\n\t\t\t}\n\t\t}\n\t\treturn this.content;\n\t}\n\n\tonHandleTypeMissmatch(ev: FileUploader$TypeMissmatchEvent): void {\n\t\tFieldRuntimeHelper.handleTypeMissmatch(ev);\n\t}\n\n\tonHandleFileSizeExceed(ev: FileUploader$FileSizeExceedEvent): void {\n\t\tFieldRuntimeHelper.handleFileSizeExceed(ev);\n\t}\n\n\tonHandleOpenUploader(ev: UI5Event<{}, FileUploader>): void {\n\t\tFieldRuntimeHelper.handleOpenUploader(ev);\n\t}\n\n\tonUploadStream(ev: FileUploader$ChangeEvent): void {\n\t\tFieldRuntimeHelper.uploadStream(this.getPageController(), ev);\n\t}\n\n\tonHandleCloseUploader(ev: UI5Event<{}, FileUploader>): void {\n\t\tFieldRuntimeHelper.handleCloseUploader(ev);\n\t}\n\n\tonOpenExternalLink(ev: UI5Event<{}, Link>): void {\n\t\tFieldRuntimeHelper.openExternalLink(ev);\n\t}\n\n\tonLinkPressed(ev: Button$PressEvent): void {\n\t\tFieldRuntimeHelper.pressLink(ev);\n\t}\n\n\tonFocusOut(ev: Control$ValidateFieldGroupEvent): void {\n\t\tconst controller = this.getPageController();\n\t\tcontroller.collaborativeDraft.handleContentFocusOut(ev);\n\t}\n\n\tonShowCollaborationEditUser(ev: UI5Event<{}, Avatar>): void {\n\t\tconst source = ev.getSource();\n\t\tconst view = this.getPageController().getView();\n\t\tFieldRuntimeHelper.showCollaborationEditUser(source, view);\n\t}\n\n\tgetPropertyBag(): PropertiesOf<this> {\n\t\tconst settings: PropertiesOf<this> = {} as PropertiesOf<this>;\n\t\tconst properties = this.getMetadata().getAllProperties();\n\t\tconst aggregations = this.getMetadata().getAllAggregations();\n\t\tfor (const propertyName in properties) {\n\t\t\tconst currentPropertyValue = this.getProperty(propertyName);\n\t\t\tsettings[propertyName as keyof PropertiesOf<this>] = currentPropertyValue;\n\t\t}\n\t\tfor (const aggregationName in aggregations) {\n\t\t\tconst aggregationContent = this.getAggregation(aggregationName);\n\t\t\tif (Array.isArray(aggregationContent)) {\n\t\t\t\tconst childrenArray = [];\n\t\t\t\tfor (const managedObject of aggregationContent) {\n\t\t\t\t\tif (managedObject.isA<BuildingBlockObjectProperty>(\"sap.fe.macros.controls.BuildingBlockObjectProperty\")) {\n\t\t\t\t\t\tchildrenArray.push(managedObject.getPropertyBag());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsettings[aggregationName as keyof PropertiesOf<this>] = childrenArray;\n\t\t\t} else if (aggregationContent) {\n\t\t\t\tif (aggregationContent.isA<BuildingBlockObjectProperty>(\"sap.fe.macros.controls.BuildingBlockObjectProperty\")) {\n\t\t\t\t\tsettings[aggregationName as keyof PropertiesOf<this>] = aggregationContent.getPropertyBag();\n\t\t\t\t} else {\n\t\t\t\t\tsettings[aggregationName as keyof PropertiesOf<this>] = aggregationContent.getId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Determines the target property of the inline edit field.\n\t * @returns The targetProperty of the inline edit field.\n\t */\n\tgetInlineEditProperty(): Property | undefined {\n\t\tconst dataModelPath = this.getDataModelObjectForMetaPath<DataFieldAbstractTypes | DataPointTypeTypes>(\n\t\t\tthis.metaPath,\n\t\t\tthis.contextPath\n\t\t);\n\t\tconst targetProperty = getDataModelObjectPathForValue(\n\t\t\tdataModelPath as DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes>\n\t\t)?.targetObject;\n\t\treturn targetProperty;\n\t}\n\n\t/**\n\t * Determines the fullyQualifiedName of the inline edit field.\n\t * @returns The fullyQualifiedName of the inline edit field.\n\t */\n\tgetInlineEditPropertyName(): string | undefined {\n\t\treturn this.getInlineEditProperty()?.fullyQualifiedName;\n\t}\n}\n\nexport default Field;\n"],"mappings":"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","ignoreList":[]}