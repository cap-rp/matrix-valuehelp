{"version":3,"file":"RadioButtons.js","names":["RadioButtons","_dec","defineUI5Class","_dec2","property","type","_dec3","_dec4","_dec5","_dec6","_dec7","isBindingInfo","_dec8","_dec9","_dec10","_class","_class2","_BuildingBlock","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","content","createContent","_exports","_inheritsLoose","_proto","prototype","onRadioButtonSelect","event","radioButtonGroup","getSource","selectedIndex","getParameter","undefined","selectedRadioButtonKey","getButtons","getCustomData","getValue","setProperty","CommonUtils","getTargetView","getController","_sideEffects","handleFieldChange","bindProperty","name","bindingInfo","formatter","targetType","setValue","newValue","value","radioButtons","length","radioButtonIndex","radioButton","keyCustomData","getBinding","setSelectedIndex","buttonsBindingContext","path","fixedValuesPath","parameters","$count","events","dataReceived","ev","count","getCount","horizontalLayout","setColumns","getSelectedIndex","bind","_jsx","RadioButtonGroup","buttons","select","enabled","enabledExpression","fieldGroupIds","ariaLabelledBy","children","RadioButton","text","radioButtonTextProperty","customData","CustomData","key","radioButtonKeyProperty","class","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./RadioButtons.tsx"],"sourcesContent":["import type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport RadioButton from \"sap/m/RadioButton\";\nimport type { RadioButtonGroup$SelectEvent } from \"sap/m/RadioButtonGroup\";\nimport RadioButtonGroup from \"sap/m/RadioButtonGroup\";\nimport type Event from \"sap/ui/base/Event\";\nimport type { AggregationBindingInfo, PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\n\n@defineUI5Class(\"sap.fe.macros.controls.RadioButtons\")\nexport default class RadioButtons extends BuildingBlock<RadioButtonGroup> {\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic id!: string;\n\n\t@property({\n\t\ttype: \"string[]\"\n\t})\n\tpublic fieldGroupIds?: string[];\n\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic requiredExpression?: string;\n\n\t// We use type 'raw' here because otherwise the binding will refuse to update the value, as it doesn't know how to convert from any to string\n\t// Setting it to raw make sure that no conversion is attempted which then works\n\t@property({ type: \"any\" })\n\tpublic value!: string | number | boolean;\n\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic fixedValuesPath!: `{${string}}`;\n\n\t@property({\n\t\ttype: \"any\",\n\t\tisBindingInfo: true\n\t})\n\tpublic radioButtonTextProperty: PropertyBindingInfo;\n\n\t@property({\n\t\ttype: \"any\",\n\t\tisBindingInfo: true\n\t})\n\tpublic radioButtonKeyProperty: PropertyBindingInfo;\n\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic horizontalLayout = false;\n\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic enabledExpression = \"\";\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<RadioButtons>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t\tthis.content = this.createContent();\n\t}\n\n\t/**\n\t * Event handler for the RadioButtonGroup's select event.\n\t * We need to parse from the radio button group index to the model value.\n\t * @param event\n\t */\n\tonRadioButtonSelect(event: RadioButtonGroup$SelectEvent): void {\n\t\tconst radioButtonGroup: RadioButtonGroup = event.getSource();\n\t\tconst selectedIndex = event.getParameter(\"selectedIndex\");\n\t\tif (selectedIndex !== undefined) {\n\t\t\tconst selectedRadioButtonKey: string = radioButtonGroup?.getButtons()[selectedIndex].getCustomData()[0].getValue();\n\t\t\t// Now we have the value => write it to the model!\n\t\t\tthis.setProperty(\"value\", selectedRadioButtonKey);\n\t\t\tCommonUtils.getTargetView(radioButtonGroup)?.getController()?._sideEffects?.handleFieldChange(event, true);\n\t\t}\n\t}\n\n\t/**\n\t * The value property type needs to be initially 'any' but has to be changed to 'raw' to avoid parsing errors.\n\t * @param name\n\t * @param bindingInfo\n\t * @returns This\n\t */\n\tbindProperty(name: string, bindingInfo: PropertyBindingInfo): this {\n\t\tif (name === \"value\" && !bindingInfo.formatter) {\n\t\t\t// not if a formatter is used, as this needs to be executed\n\t\t\tbindingInfo.targetType = \"raw\";\n\t\t}\n\n\t\treturn super.bindProperty(name, bindingInfo);\n\t}\n\n\t/**\n\t * This is being called when the model fetches the data from the backend or when we call it directly.\n\t * We need to parse from the model value to the radio button group index.\n\t * @param newValue\n\t */\n\tsetValue(newValue: string | number | boolean): void {\n\t\tthis.value = newValue;\n\t\tif (this.content) {\n\t\t\t// Compute the new radio button index\n\t\t\tconst radioButtons = this.content.getButtons();\n\t\t\tif (radioButtons.length != 0) {\n\t\t\t\tlet radioButtonIndex = 0;\n\t\t\t\tfor (const radioButton of radioButtons) {\n\t\t\t\t\tconst keyCustomData = (radioButton.getCustomData()[0].getBinding(\"value\") as PropertyBinding | undefined)?.getValue();\n\t\t\t\t\tif (keyCustomData === newValue) {\n\t\t\t\t\t\tthis.content.setSelectedIndex(radioButtonIndex);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tradioButtonIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If no value could be found or if the radio button aggregation was empty, which can happen due to\n\t\t\t// a very early call of setValue, set the selected to index to -1 which results in NO radio button to be selected.\n\t\t\tthis.content.setSelectedIndex(-1);\n\t\t}\n\t}\n\n\t/**\n\t * The building block render function.\n\t * @returns The radio button group\n\t */\n\tcreateContent(): RadioButtonGroup {\n\t\t// Setting up the binding so that we can access $count for getting the number\n\t\t// of entries in the fixed value list and set this as number of radio button columns\n\t\t// in case horizontal layout is configured\n\t\tconst buttonsBindingContext: AggregationBindingInfo = {\n\t\t\tpath: `${this.fixedValuesPath}`,\n\t\t\tparameters: { $count: true },\n\t\t\tevents: {\n\t\t\t\tdataReceived: (ev: Event) => {\n\t\t\t\t\tconst count: number | undefined = (ev.getSource() as unknown as ODataListBinding)?.getCount();\n\t\t\t\t\tif (count !== undefined && this.horizontalLayout) {\n\t\t\t\t\t\tradioButtonGroup.setColumns(count);\n\t\t\t\t\t}\n\t\t\t\t\t// Check if there is a value stored from the initialization but the radio\n\t\t\t\t\t// button selection has not yet been done and do this now\n\t\t\t\t\tif (this.value !== undefined && radioButtonGroup.getSelectedIndex() === -1) {\n\t\t\t\t\t\tthis.setValue(this.value as string);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.onRadioButtonSelect.bind(this);\n\t\tconst radioButtonGroup = (\n\t\t\t<RadioButtonGroup\n\t\t\t\tbuttons={buttonsBindingContext}\n\t\t\t\tselect={this.onRadioButtonSelect.bind(this)}\n\t\t\t\tenabled={this.enabledExpression}\n\t\t\t\tfieldGroupIds={this.fieldGroupIds}\n\t\t\t\tariaLabelledBy={this.ariaLabelledBy}\n\t\t\t>\n\t\t\t\t<RadioButton\n\t\t\t\t\ttext={this.radioButtonTextProperty}\n\t\t\t\t\tcustomData={[new CustomData({ key: \"key\", value: this.radioButtonKeyProperty })]}\n\t\t\t\t\tclass=\"sapUiSmallMarginEnd\"\n\t\t\t\t/>\n\t\t\t</RadioButtonGroup>\n\t\t) as RadioButtonGroup;\n\n\t\treturn radioButtonGroup;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}