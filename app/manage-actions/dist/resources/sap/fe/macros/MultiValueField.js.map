{"version":3,"file":"MultiValueField.js","names":["MultiValueFieldBlock","_dec","defineUI5Class","_dec2","implementInterface","_dec3","property","type","_dec4","association","_dec5","_dec6","required","_dec7","_dec8","_dec9","isBindingInfo","_dec10","aggregation","multiple","defaultClass","FormatOptions","_dec11","_class","_class2","_BuildingBlock","props","others","_this","_isInEditMode","compileExpression","UI","IsEditable","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_exports","_inheritsLoose","_proto","prototype","_overrideValue","collectionBinding","itemDataModelObjectPath","textExpression","key","items","model","modelName","path","commonTargetObjectProperty","targetObject","commonPropertyPath","name","isPathAnnotationExpression","annotations","Common","Text","description","_getMultiInputSettings","propertyDataModelObjectPath","formatOptions","collectionPath","_getPathStructure","parameters","$$ownRequest","templateShareable","propertyPathOrProperty","propertyDefinition","isPropertyPathExpression","$target","commonText","relativeLocation","getRelativePaths","getExpressionFromAnnotation","getValueBinding","displayOnly","length","dataModelObjectPath","firstCollectionPath","currentEntitySet","contextLocation","targetEntitySet","startingEntitySet","navigatedPaths","contextNavsForItem","navigationProperties","navProp","undefined","some","contextNavProp","fullyQualifiedName","push","navigationPropertyBinding","hasOwnProperty","isMultipleNavigationProperty","join","Object","assign","computeFieldGroupIds","appComponent","sideEffectService","getSideEffectsService","fieldGroupIds","dataModelPath","targetEntityType","collaborationEnabled","collaborationFieldGroup","CollaborationFieldGroupPrefix","dataSourcePath","result","initialize","metaContextPath","owner","_getOwner","contextPath","preprocessorContext","fullContextPath","odataMetaModel","getMetaModel","metaContext","createBindingContext","getPath","metaPathObject","getTarget","isProperty","DataFieldDefault","enhancedMetaPath","dataFieldDataModelPath","getDataModelObjectForMetaPath","convertedDataField","enhanceDataModelPath","Value","getTargetObjectPath","insertable","isPathInsertable","deleteNavigationRestriction","isPathDeletable","ignoreTargetCollection","authorizeUnresolvable","deletePath","deletable","ifElse","_type","or","not","isConstant","constant","readOnly","visible","getVisibleExpression","insertableAndDeletable","and","collaborationExpression","computeCollaborationProperties","editMode","displayMode","getDisplayMode","localDataModelPath","item","collection","getAppComponent","onMetadataAvailable","content","createContent","isCollaborationDraftSupported","ModelHelper","UIFormatters","getCollaborationExpression","CollaborationFormatters","hasCollaborationActivity","collaborationInitialsExpression","getCollaborationActivityInitials","collaborationColorExpression","getCollaborationActivityColor","getMetaPathObject","metaPath","id","vhIdPrefix","ID","generate","getId","createId","controller","getRootController","view","getView","context","getContextPath","itemsAggregation","customAggregationLength","getManifestEntry","macros","multiValueField","itemsSizeLimit","label","FieldHelper","computeLabelText","vhControl","ValueHelp","getValueHelpForMetaPath","getPageController","getContextRelativeTargetObjectPath","getOwnerContextPath","valueHelp","getContent","_jsx","MultiValueField","delegate","display","width","ariaLabelledBy","showEmptyIndicator","change","MultiValueFieldRuntime","handleChange","bind","validateFieldGroup","FieldRuntime","onValidateFieldGroup","children","MultiValueFieldItem","customData","CustomData","value","formwrapper","avatar","Avatar","initials","displaySize","customDisplaySize","customFontSize","backgroundColor","press","FieldRuntimeHelper","showCollaborationEditUser","FormElementWrapper","HBox","renderType","alignItems","addEventDelegate","onfocusin","evt","currentMultiValueField","srcControl","getParent","collaborativeDraft","handleContentFocusIn","valueHelpControl","getDomRef","attachEventOnce","focus","onfocusout","isA","event","UI5Event","getFieldGroupIds","handleContentFocusOut","Element","getElementById","getValueHelp","attachOpened","getSource","getControl","addCustomData","setReadOnly","setProperty","updateEditMode","set_isInEditMode","inEditMode","getMultiValueField","getItems","multivalueField","data","setEditMode","onBeforeRendering","aAriaLabelledBy","getAriaLabelledBy","sId","aAriaLabelledBys","includes","addAriaLabelledBy","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./MultiValueField.tsx"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport type { PathAnnotationExpression, PropertyPath } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { DataField, DataFieldTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, getExpressionFromAnnotation, ifElse, isConstant, not, or } from \"sap/fe/base/BindingToolkit\";\nimport {\n\taggregation,\n\tassociation,\n\tdefineUI5Class,\n\timplementInterface,\n\tproperty,\n\ttype EnhanceWithUI5,\n\ttype PropertiesOf\n} from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport * as ID from \"sap/fe/core/helpers/StableIdHelper\";\nimport {\n\tisMultipleNavigationProperty,\n\tisPathAnnotationExpression,\n\tisProperty,\n\tisPropertyPathExpression\n} from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tenhanceDataModelPath,\n\tgetContextRelativeTargetObjectPath,\n\tgetRelativePaths,\n\tgetTargetObjectPath,\n\tisPathDeletable,\n\tisPathInsertable\n} from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type { DisplayMode } from \"sap/fe/core/templating/UIFormatters\";\nimport { getCollaborationExpression, getDisplayMode } from \"sap/fe/core/templating/UIFormatters\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\nimport { getValueBinding, getVisibleExpression } from \"sap/fe/macros/field/FieldTemplating\";\nimport type Tokenizer from \"sap/m/Tokenizer\";\nimport type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport MultiValueField from \"sap/ui/mdc/MultiValueField\";\nimport type FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport MultiValueFieldItem from \"sap/ui/mdc/field/MultiValueFieldItem\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\n\nimport type PageController from \"sap/fe/core/PageController\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport { CollaborationFieldGroupPrefix } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport * as CollaborationFormatters from \"sap/fe/core/formatters/CollaborationFormatter\";\nimport type MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport * as UIFormatters from \"sap/fe/core/templating/UIFormatters\";\nimport FieldRuntime from \"sap/fe/macros/field/FieldRuntime\";\nimport FormatOptions from \"sap/fe/macros/multivaluefield/FormatOptions\";\nimport MultiValueFieldRuntime from \"sap/fe/macros/multivaluefield/MultiValueFieldRuntime\";\nimport Avatar from \"sap/m/Avatar\";\nimport HBox from \"sap/m/HBox\";\nimport UI5Event from \"sap/ui/base/Event\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport type { default as MdcValueHelp, ValueHelp$OpenedEvent } from \"sap/ui/mdc/ValueHelp\";\nimport type { MetaModelType } from \"../../../../../../types/metamodel_types\";\nimport ValueHelp from \"./ValueHelp\";\nimport FieldRuntimeHelper from \"./field/FieldRuntimeHelper\";\n\ntype MultiInputSettings = {\n\tdescription: BindingToolkitExpression<string> | CompiledBindingToolkitExpression;\n\tcollectionBinding: PropertyBindingInfo;\n\tkey: BindingToolkitExpression<string> | CompiledBindingToolkitExpression;\n\tdisplayOnly?: boolean;\n};\n\ntype MultiValueFieldPathStructure = {\n\tcollectionPath: string;\n\titemDataModelObjectPath: DataModelObjectPath<Property>;\n};\n\n/**\n * Building block for creating a MultiValueField based on the metadata provided by OData V4.\n * <br>\n * The MultiValueField can be used to display either a DataField or Property directly. It has to point to a collection property.\n * <br>\n * Usage example:\n * <pre>\n * &lt;macro:MultiValueField\n * id=\"SomeUniqueIdentifier\"\n * contextPath=\"{entitySet&gt;}\"\n * metaPath=\"{dataField&gt;}\"\n * /&gt;\n * </pre>\n * @alias sap.fe.macros.MultiValueField\n * @public\n * @since 1.118.0\n * @experimental\n */\n\n@defineUI5Class(\"sap.fe.macros.MultiValueField\")\nexport default class MultiValueFieldBlock extends BuildingBlock<Control> {\n\t@implementInterface(\"sap.ui.core.IFormContent\")\n\t__implements__sap_ui_core_IFormContent = true;\n\n\t/**\n\t * The 'id' property\n\t */\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic id?: string;\n\n\t/**\n\t * Prefix added to the generated ID of the field - only if no id is provided\n\t */\n\t@association({\n\t\ttype: \"string\"\n\t})\n\tidPrefix?: string;\n\n\t/**\n\t * Prefix added to the generated ID of the value help used for the field\n\t */\n\t@association({\n\t\ttype: \"string\"\n\t})\n\tvhIdPrefix!: string;\n\n\t/**\n\t * Defines the relative Metadata path to the MultiValueField.\n\t * The metaPath should point to a Property or DataField.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: true\n\t})\n\tpublic metaPath!: string;\n\n\t/**\n\t * The readOnly flag\n\t * @public\n\t */\n\t@property({ type: \"boolean\", required: false })\n\tpublic readOnly?: boolean | CompiledBindingToolkitExpression;\n\n\t/**\n\t * The context path provided for the MultiValueField\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic contextPath?: string;\n\n\t/**\n\t * Property added to be able to add data / items to the multi value field via a different model\n\t * @experimental\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"any\",\n\t\tisBindingInfo: true\n\t})\n\tpublic items?: PropertyBindingInfo;\n\n\t/**\n\t * The object with the formatting options\n\t *\n\t */\n\t@aggregation({ type: \"sap.fe.macros.multivaluefield.FormatOptions\", multiple: false, defaultClass: FormatOptions })\n\tformatOptions?: FormatOptions;\n\n\t@property({ type: \"boolean\" })\n\t_isInEditMode: boolean | CompiledBindingToolkitExpression = false;\n\n\t// Computed properties\n\n\tprivate item!: MultiInputSettings;\n\n\t/**\n\t * Pointed at dataField, can be DataFieldDefault from a property.\n\t */\n\tprivate convertedDataField!: DataField;\n\n\t/**\n\t * DataModelPath for the corresponding property displayed.\n\t */\n\tprivate dataModelPath!: DataModelObjectPath<Property>;\n\n\t/**\n\t * Property to be displayed\n\t */\n\tprivate property!: Property;\n\n\t/**\n\t * Edit Mode of the field.\n\t * If the editMode is undefined then we compute it based on the metadata\n\t * Otherwise we use the value provided here.\n\t */\n\tprivate editMode!: FieldEditMode | CompiledBindingToolkitExpression;\n\n\t/**\n\t * The display mode added to the collection field\n\t */\n\tprivate displayMode!: DisplayMode;\n\n\t/**\n\t * The CompiledBindingToolkitExpression that is calculated internally\n\t */\n\tprivate collection!: PropertyBindingInfo;\n\n\tprivate visible: CompiledBindingToolkitExpression;\n\n\tprivate fieldGroupIds?: string;\n\n\tprivate enhancedMetaPath!: Context;\n\n\tprivate enableExpression: CompiledBindingToolkitExpression;\n\n\tprivate collaborationExpression!: BindingToolkitExpression<boolean>;\n\n\tprivate collaborationInitialsExpression!: CompiledBindingToolkitExpression;\n\n\tprivate collaborationColorExpression!: CompiledBindingToolkitExpression;\n\n\tprivate collaborationEnabled!: boolean;\n\n\tprivate dataSourcePath!: string;\n\n\tprivate insertableAndDeletable!: BindingToolkitExpression<boolean>;\n\n\tconstructor(props: string | ($ControlSettings & PropertiesOf<MultiValueFieldBlock>), others?: $ControlSettings) {\n\t\tif (typeof props !== \"string\") {\n\t\t\t// type of props can be a string if we are cloning the MultiValueField inside an aggregation\n\t\t\t// in that case _isInEditMode has already been computed on the one we clone\n\t\t\tprops._isInEditMode = compileExpression(UI.IsEditable);\n\t\t}\n\t\tsuper(props, others);\n\t}\n\n\t/**\n\t * In case an external value is set (e.g. for providing data in a json model) we need to override the binding strings for the item.\n\t * @param collectionBinding\n\t * @param itemDataModelObjectPath\n\t * @param textExpression\n\t * @param key\n\t * @returns MultiInputSettings\n\t */\n\tprivate _overrideValue(\n\t\tcollectionBinding: PropertyBindingInfo & { parameters?: object },\n\t\titemDataModelObjectPath: DataModelObjectPath<PropertyPath | Property>,\n\t\ttextExpression: CompiledBindingToolkitExpression,\n\t\tkey: CompiledBindingToolkitExpression\n\t): MultiInputSettings {\n\t\tif (this.items) {\n\t\t\tconst model = this.items.model ?? this.items.modelName;\n\t\t\tcollectionBinding = { path: `${model}>${this.items.path}` };\n\t\t\tconst commonTargetObjectProperty = itemDataModelObjectPath.targetObject as Property;\n\t\t\tconst commonPropertyPath = `{${model}>${commonTargetObjectProperty.name}}`;\n\n\t\t\t// Text arrangement use case\n\t\t\tif (isPathAnnotationExpression<string>(commonTargetObjectProperty.annotations.Common?.Text)) {\n\t\t\t\ttextExpression = `{${model}>${commonTargetObjectProperty.annotations.Common?.Text?.path}}`;\n\t\t\t\t// non text arrangement use case\n\t\t\t} else {\n\t\t\t\ttextExpression = commonPropertyPath;\n\t\t\t}\n\t\t\tkey = commonPropertyPath;\n\t\t}\n\t\treturn {\n\t\t\tdescription: textExpression,\n\t\t\tcollectionBinding,\n\t\t\tkey: key\n\t\t};\n\t}\n\n\t/**\n\t * Function to get the correct settings for the multi input.\n\t * @param propertyDataModelObjectPath The corresponding DataModelObjectPath.\n\t * @param formatOptions The format options to calculate the result\n\t * @returns MultiInputSettings\n\t */\n\tprivate _getMultiInputSettings(\n\t\tpropertyDataModelObjectPath: DataModelObjectPath<Property>,\n\t\tformatOptions: FormatOptions | undefined\n\t): MultiInputSettings {\n\t\tconst { collectionPath, itemDataModelObjectPath } = MultiValueFieldBlock._getPathStructure(propertyDataModelObjectPath);\n\t\tconst collectionBinding = { path: collectionPath, parameters: { $$ownRequest: true }, templateShareable: false };\n\n\t\tconst propertyPathOrProperty = propertyDataModelObjectPath.targetObject as PropertyPath | Property;\n\t\tconst propertyDefinition = isPropertyPathExpression(propertyPathOrProperty)\n\t\t\t? propertyPathOrProperty.$target\n\t\t\t: propertyPathOrProperty;\n\t\tconst commonText = propertyDefinition?.annotations.Common?.Text;\n\t\tconst relativeLocation = getRelativePaths(propertyDataModelObjectPath);\n\n\t\tconst textExpression = commonText\n\t\t\t? compileExpression(getExpressionFromAnnotation(commonText, relativeLocation))\n\t\t\t: getValueBinding(itemDataModelObjectPath, formatOptions ?? {}, true);\n\n\t\tconst key = getValueBinding(itemDataModelObjectPath, formatOptions ?? {}, true);\n\t\tlet displayOnly = false;\n\t\tif (getRelativePaths(itemDataModelObjectPath).length > 0) {\n\t\t\t// if the relative path to the value contains a navigation, create will not be possible in the delegate, so we force the display Mode\n\t\t\tdisplayOnly = true;\n\t\t}\n\t\treturn {\n\t\t\tdisplayOnly,\n\t\t\t...this._overrideValue(collectionBinding, itemDataModelObjectPath, textExpression, key)\n\t\t};\n\t}\n\n\t// Process the dataModelPath to find the collection and the relative DataModelPath for the item.\n\tprivate static _getPathStructure(dataModelObjectPath: DataModelObjectPath<Property>): MultiValueFieldPathStructure {\n\t\tlet firstCollectionPath = \"\";\n\t\tconst currentEntitySet = dataModelObjectPath.contextLocation?.targetEntitySet\n\t\t\t? dataModelObjectPath.contextLocation.targetEntitySet\n\t\t\t: dataModelObjectPath.startingEntitySet;\n\t\tconst navigatedPaths: string[] = [];\n\t\tconst contextNavsForItem = dataModelObjectPath.contextLocation?.navigationProperties || [];\n\t\tfor (const navProp of dataModelObjectPath.navigationProperties) {\n\t\t\tif (\n\t\t\t\tdataModelObjectPath.contextLocation === undefined ||\n\t\t\t\t!dataModelObjectPath.contextLocation.navigationProperties.some(\n\t\t\t\t\t(contextNavProp) => contextNavProp.fullyQualifiedName === navProp.fullyQualifiedName\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// in case of relative entitySetPath we don't consider navigationPath that are already in the context\n\t\t\t\tnavigatedPaths.push(navProp.name);\n\t\t\t\tcontextNavsForItem.push(navProp);\n\t\t\t\tif (currentEntitySet.navigationPropertyBinding.hasOwnProperty(navProp.name)) {\n\t\t\t\t\tif (isMultipleNavigationProperty(navProp)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfirstCollectionPath = `${navigatedPaths.join(\"/\")}`;\n\t\tconst itemDataModelObjectPath: DataModelObjectPath<Property> = Object.assign({}, dataModelObjectPath);\n\t\tif (itemDataModelObjectPath.contextLocation) {\n\t\t\titemDataModelObjectPath.contextLocation.navigationProperties = contextNavsForItem; // this changes the creation of the valueHelp ID ...\n\t\t}\n\n\t\treturn { collectionPath: firstCollectionPath, itemDataModelObjectPath: itemDataModelObjectPath };\n\t}\n\n\t/**\n\t * Calculate the fieldGroupIds for the MultiValueField.\n\t * @param appComponent\n\t * @returns The value for the fieldGroupIds\n\t */\n\tprivate computeFieldGroupIds(appComponent?: AppComponent): string | undefined {\n\t\tif (!appComponent) {\n\t\t\t//for ValueHelp / Mass edit Templating the appComponent is not passed to the templating\n\t\t\treturn \"\";\n\t\t}\n\t\tconst sideEffectService = appComponent.getSideEffectsService();\n\t\tconst fieldGroupIds = sideEffectService.computeFieldGroupIds(\n\t\t\tthis.dataModelPath.targetEntityType.fullyQualifiedName,\n\t\t\t(this.dataModelPath.targetObject as Property).fullyQualifiedName\n\t\t);\n\t\tif (this.collaborationEnabled) {\n\t\t\tconst collaborationFieldGroup = `${CollaborationFieldGroupPrefix}${this.dataSourcePath}`;\n\t\t\tfieldGroupIds.push(collaborationFieldGroup);\n\t\t}\n\t\tthis.fieldGroupIds = fieldGroupIds.length ? fieldGroupIds.join(\",\") : undefined;\n\t\tconst result = fieldGroupIds.join(\",\");\n\t\treturn result === \"\" ? undefined : result;\n\t}\n\n\tinitialize(metaContextPath: MetaPath<unknown>): void {\n\t\tconst owner = this._getOwner();\n\n\t\tthis.contextPath = this.contextPath ?? owner?.preprocessorContext?.fullContextPath;\n\t\tconst odataMetaModel = owner?.getMetaModel();\n\n\t\tconst metaContext = odataMetaModel?.createBindingContext(metaContextPath.getPath()) as Context | undefined;\n\n\t\tconst metaPathObject = metaContextPath?.getTarget();\n\n\t\t// If the target is a property with a DataFieldDefault, use this as data field\n\t\tif (isProperty(metaPathObject) && metaPathObject.annotations.UI?.DataFieldDefault !== undefined) {\n\t\t\tthis.enhancedMetaPath = odataMetaModel?.createBindingContext(`@${UIAnnotationTerms.DataFieldDefault}`, metaContext) as Context;\n\t\t} else {\n\t\t\tthis.enhancedMetaPath = metaContext as Context;\n\t\t}\n\t\tconst dataFieldDataModelPath = this.getDataModelObjectForMetaPath(this.enhancedMetaPath.getPath(), this.contextPath)!;\n\n\t\tthis.convertedDataField = dataFieldDataModelPath.targetObject as DataField;\n\n\t\tthis.dataModelPath = enhanceDataModelPath<Property>(\n\t\t\tdataFieldDataModelPath,\n\t\t\t(this.convertedDataField.Value as PathAnnotationExpression<string>).path\n\t\t);\n\t\tthis.dataSourcePath = getTargetObjectPath(this.dataModelPath);\n\t\tthis.property = this.dataModelPath.targetObject as Property;\n\n\t\tlet insertable = isPathInsertable(this.dataModelPath);\n\t\tconst deleteNavigationRestriction = isPathDeletable(this.dataModelPath, {\n\t\t\tignoreTargetCollection: true,\n\t\t\tauthorizeUnresolvable: true\n\t\t});\n\t\tconst deletePath = isPathDeletable(this.dataModelPath);\n\n\t\t// deletable:\n\t\t//\t\tif restrictions come from Navigation we apply it\n\t\t//\t\totherwise we apply restrictions defined on target collection only if it's a constant\n\t\t//      otherwise it's true!\n\t\tlet deletable = ifElse(\n\t\t\tdeleteNavigationRestriction._type === \"Unresolvable\",\n\t\t\tor(not(isConstant(deletePath)), deletePath),\n\t\t\tdeletePath\n\t\t);\n\n\t\tif (this.items) {\n\t\t\tinsertable = deletable = constant(!this.readOnly);\n\t\t} else {\n\t\t\tthis.visible = getVisibleExpression(this.dataModelPath, this.formatOptions);\n\t\t}\n\n\t\tthis.insertableAndDeletable = and(insertable, deletable);\n\t\tthis.collaborationExpression = constant(false);\n\t\tthis.computeCollaborationProperties();\n\t\tif (this.formatOptions?.displayOnly === true || this.readOnly === true) {\n\t\t\tthis.editMode = \"Display\";\n\t\t} else if (this.readOnly === false) {\n\t\t\tthis.editMode = compileExpression(\n\t\t\t\tifElse(\n\t\t\t\t\tand(insertable, deletable),\n\t\t\t\t\tifElse(this.collaborationExpression, constant(\"ReadOnly\"), constant(\"Editable\")),\n\t\t\t\t\tconstant(\"Display\")\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.editMode = compileExpression(\n\t\t\t\tifElse(\n\t\t\t\t\tand(insertable, deletable, UI.IsEditable),\n\t\t\t\t\tifElse(this.collaborationExpression, constant(\"ReadOnly\"), constant(\"Editable\")),\n\t\t\t\t\tconstant(\"Display\")\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.displayMode = getDisplayMode(this.dataModelPath);\n\n\t\tconst localDataModelPath = enhanceDataModelPath<Property>(\n\t\t\tthis.getDataModelObjectForMetaPath(this.enhancedMetaPath.getPath(), this.contextPath)!,\n\t\t\t(this.convertedDataField.Value as PathAnnotationExpression<string>).path\n\t\t);\n\n\t\tthis.item = this._getMultiInputSettings(localDataModelPath, this.formatOptions); // this function rewrites dataModelPath, therefore, for now a clean object is passed\n\t\tif (this.item.displayOnly) {\n\t\t\tthis.editMode = \"Display\";\n\t\t}\n\t\tthis.collection = this.item.collectionBinding;\n\n\t\tconst appComponent = this.getAppComponent();\n\t\tthis.fieldGroupIds = this.computeFieldGroupIds(appComponent);\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tif (!this.content) {\n\t\t\tthis.content = this.createContent();\n\t\t}\n\t}\n\n\t/**\n\t * The function checks if the collaboration draft is supported.\n\t * @returns True if the collaboration draft is supported.\n\t */\n\tisCollaborationDraftSupported(): boolean {\n\t\tconst owner = this._getOwner();\n\t\tconst odataMetaModel = owner?.getMetaModel();\n\t\treturn ModelHelper.isCollaborationDraftSupported(odataMetaModel!);\n\t}\n\n\t/**\n\t * This helper computes the properties that are needed for the collaboration avatar.\n\t */\n\tcomputeCollaborationProperties(): void {\n\t\tif (this.isCollaborationDraftSupported() && this.editMode !== \"Display\") {\n\t\t\tthis.collaborationEnabled = true;\n\t\t\tthis.collaborationExpression = UIFormatters.getCollaborationExpression(\n\t\t\t\tthis.dataModelPath,\n\t\t\t\tCollaborationFormatters.hasCollaborationActivity\n\t\t\t);\n\n\t\t\tthis.collaborationInitialsExpression = compileExpression(\n\t\t\t\tgetCollaborationExpression(this.dataModelPath, CollaborationFormatters.getCollaborationActivityInitials)\n\t\t\t);\n\t\t\tthis.collaborationColorExpression = compileExpression(\n\t\t\t\tgetCollaborationExpression(this.dataModelPath, CollaborationFormatters.getCollaborationActivityColor)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Creates the content.\n\t * @returns The content of the building block.\n\t */\n\tcreateContent(): Control | undefined {\n\t\tconst metaContextPath = this.getMetaPathObject(this.metaPath, this.contextPath);\n\t\tif (metaContextPath) {\n\t\t\tthis.initialize(metaContextPath);\n\n\t\t\t// BuildingBlock with set ID scenario\n\t\t\tif (this.id) {\n\t\t\t\tthis.vhIdPrefix = ID.generate([this.getId(), this.vhIdPrefix ?? \"FieldValueHelp\"]); // Use getId to retrieve ID, not this.id\n\t\t\t} else if (!this.vhIdPrefix) {\n\t\t\t\t// Maybe not entered\n\t\t\t\tthis.vhIdPrefix = this.createId(\"FieldValueHelp\")!;\n\t\t\t}\n\t\t\tconst controller = this._getOwner()?.getRootController() as PageController;\n\t\t\tconst view = controller.getView();\n\t\t\tconst odataMetaModel = this._getOwner()?.getMetaModel();\n\t\t\tconst metaContext = odataMetaModel?.createBindingContext(metaContextPath.getPath());\n\t\t\tconst context = odataMetaModel?.createBindingContext(metaContextPath.getContextPath());\n\t\t\tif (!metaContext || !context) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//create a new binding context for the value help\n\n\t\t\tconst itemsAggregation = this.collection;\n\t\t\tconst customAggregationLength = this.getAppComponent()?.getManifestEntry(\"sap.fe\")?.macros?.multiValueField?.itemsSizeLimit;\n\t\t\tif (customAggregationLength !== undefined) {\n\t\t\t\titemsAggregation.length = customAggregationLength;\n\t\t\t}\n\n\t\t\t//compute the correct label\n\t\t\tconst label = FieldHelper.computeLabelText(this.convertedDataField.Value as MetaModelType<DataFieldTypes>, {\n\t\t\t\tcontext: metaContext\n\t\t\t}) as string;\n\n\t\t\tconst vhControl = ValueHelp.getValueHelpForMetaPath(\n\t\t\t\tthis.getPageController(),\n\t\t\t\tgetContextRelativeTargetObjectPath(this.dataModelPath)!,\n\t\t\t\tthis.contextPath ?? this.getOwnerContextPath()!,\n\t\t\t\tthis._getOwner()?.getMetaModel()\n\t\t\t);\n\t\t\tlet valueHelp: string | undefined;\n\t\t\tif (vhControl && vhControl.getContent()) {\n\t\t\t\tvalueHelp = vhControl.getContent()!.getId();\n\t\t\t}\n\t\t\tconst multiValueField = (\n\t\t\t\t<MultiValueField\n\t\t\t\t\tid={this.createId(\"_mvf\")}\n\t\t\t\t\tdelegate={{ name: \"sap/fe/macros/multivaluefield/MultiValueFieldDelegate\" }}\n\t\t\t\t\titems={itemsAggregation}\n\t\t\t\t\tdisplay={this.displayMode}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\teditMode={this.editMode}\n\t\t\t\t\tvalueHelp={valueHelp}\n\t\t\t\t\tariaLabelledBy={this.ariaLabelledBy ? this.ariaLabelledBy : []}\n\t\t\t\t\tshowEmptyIndicator={this.formatOptions?.showEmptyIndicator}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tchange={(MultiValueFieldRuntime.handleChange as unknown as Function).bind(MultiValueFieldRuntime, controller)}\n\t\t\t\t\tfieldGroupIds={this.fieldGroupIds}\n\t\t\t\t\tvalidateFieldGroup={FieldRuntime.onValidateFieldGroup}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\titems: <MultiValueFieldItem key={this.item.key} description={this.item.description} />,\n\t\t\t\t\t\tcustomData: <CustomData key=\"insertableAndDeletable\" value={this.insertableAndDeletable} />\n\t\t\t\t\t}}\n\t\t\t\t</MultiValueField>\n\t\t\t);\n\n\t\t\tlet formwrapper = null;\n\t\t\tif (this.collaborationEnabled) {\n\t\t\t\tconst avatar = (\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tvisible={this.collaborationExpression}\n\t\t\t\t\t\tinitials={this.collaborationInitialsExpression}\n\t\t\t\t\t\tdisplaySize=\"Custom\"\n\t\t\t\t\t\tcustomDisplaySize=\"1.5rem\"\n\t\t\t\t\t\tcustomFontSize=\"0.8rem\"\n\t\t\t\t\t\tbackgroundColor={this.collaborationColorExpression}\n\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\tFieldRuntimeHelper.showCollaborationEditUser(avatar, view);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t\tformwrapper = (\n\t\t\t\t\t<FormElementWrapper>\n\t\t\t\t\t\t<HBox width=\"100%\" renderType=\"Bare\" alignItems=\"End\">\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\titems: [multiValueField, avatar]\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t</FormElementWrapper>\n\t\t\t\t);\n\n\t\t\t\tmultiValueField?.addEventDelegate(\n\t\t\t\t\t{\n\t\t\t\t\t\tonfocusin: (evt: jQuery.Event & { srcControl: Control }) => {\n\t\t\t\t\t\t\tconst currentMultiValueField = evt.srcControl.getParent() as MultiValueField;\n\t\t\t\t\t\t\tcontroller.collaborativeDraft?.handleContentFocusIn(currentMultiValueField);\n\n\t\t\t\t\t\t\tif (valueHelpControl?.getDomRef()) {\n\t\t\t\t\t\t\t\tvalueHelpControl.attachEventOnce(\"closed\", () => {\n\t\t\t\t\t\t\t\t\tcurrentMultiValueField?.focus();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonfocusout: (evt: jQuery.Event & { srcControl: Control }) => {\n\t\t\t\t\t\t\tlet currentMultiValueField = evt.srcControl.getParent() as MultiValueField;\n\t\t\t\t\t\t\tif (currentMultiValueField?.isA<Tokenizer>(\"sap.m.Tokenizer\")) {\n\t\t\t\t\t\t\t\tcurrentMultiValueField = currentMultiValueField.getParent()?.getParent() as MultiValueField;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst event = new UI5Event(\"\", currentMultiValueField, {\n\t\t\t\t\t\t\t\tfieldGroupIds: currentMultiValueField.getFieldGroupIds()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontroller.collaborativeDraft.handleContentFocusOut(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tthis\n\t\t\t\t);\n\n\t\t\t\tconst valueHelpControl = Element.getElementById(multiValueField.getValueHelp()) as MdcValueHelp;\n\n\t\t\t\tvalueHelpControl?.attachOpened((evt: ValueHelp$OpenedEvent) => {\n\t\t\t\t\tconst currentMultiValueField = evt.getSource().getControl()!;\n\t\t\t\t\tcontroller.collaborativeDraft.handleContentFocusIn(currentMultiValueField as MultiValueField);\n\t\t\t\t});\n\t\t\t}\n\t\t\tmultiValueField.addCustomData(new CustomData({ key: \"forwardedItemsBinding\", value: this.items }));\n\t\t\treturn this.collaborationEnabled ? formwrapper : multiValueField;\n\t\t}\n\t}\n\n\t/**\n\t * Setter for the readOnly property.\n\t * @param readOnly\n\t */\n\tsetReadOnly(readOnly: boolean): void {\n\t\tsuper.setProperty(\"readOnly\", readOnly);\n\t\tthis.updateEditMode();\n\t}\n\n\t/**\n\t * Setter for the _isInEditMode property.\n\t * @param inEditMode\n\t */\n\tset_isInEditMode(inEditMode: boolean): void {\n\t\tsuper.setProperty(\"_isInEditMode\", inEditMode);\n\t\tthis.updateEditMode();\n\t}\n\n\t/**\n\t * The function returns the MultiValueField.\n\t * @returns The MultiValueField.\n\t */\n\tgetMultiValueField(): MultiValueField {\n\t\tif (this.isCollaborationDraftSupported()) {\n\t\t\treturn ((this.content as FormElementWrapper).content as HBox).getItems()[0] as MultiValueField;\n\t\t} else {\n\t\t\treturn this.content as MultiValueField;\n\t\t}\n\t}\n\n\t/**\n\t * Update the edit mode based on the readOnly and _isInEditMode properties.\n\t */\n\tupdateEditMode(): void {\n\t\tif (!this.content) {\n\t\t\treturn;\n\t\t}\n\t\tconst multivalueField = this.getMultiValueField();\n\t\tconst insertableAndDeletable = multivalueField.data(\"insertableAndDeletable\");\n\t\tif (this.readOnly === true) {\n\t\t\tthis.editMode = \"Display\";\n\t\t\tmultivalueField.setEditMode(\"Display\");\n\t\t} else if (this.readOnly === false && insertableAndDeletable) {\n\t\t\t//readOnly false can only have impact if items are provided\n\t\t\tif (this._isInEditMode) {\n\t\t\t\tthis.editMode = \"Editable\";\n\t\t\t\tmultivalueField.setEditMode(\"Editable\");\n\t\t\t} else {\n\t\t\t\tthis.editMode = \"Display\";\n\t\t\t\tmultivalueField.setEditMode(\"Display\");\n\t\t\t}\n\t\t}\n\t\t// if readOnly is not explicitly set we keep teh standard behavior\n\t}\n\n\t/**\n\t * On Before rendering froward the ariaLabelledBy to the mdc MultiValueField.\n\t */\n\tonBeforeRendering(): void {\n\t\tif (this.content) {\n\t\t\tconst multiValueField = this.getMultiValueField();\n\t\t\tconst aAriaLabelledBy = (this as unknown as EnhanceWithUI5<MultiValueFieldBlock>).getAriaLabelledBy();\n\n\t\t\tfor (const sId of aAriaLabelledBy) {\n\t\t\t\tconst aAriaLabelledBys = multiValueField.getAriaLabelledBy();\n\t\t\t\tif (!aAriaLabelledBys.includes(sId)) {\n\t\t\t\t\tmultiValueField.addAriaLabelledBy(sId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}