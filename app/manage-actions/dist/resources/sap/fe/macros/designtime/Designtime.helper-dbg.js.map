{"version":3,"names":["getChangedPropertyValues","designtimeSettings","unchangedData","propertyValues","propertyChanges","forEach","setting","id","JSON","stringify","writeObject","writeObjectFor","changeObject","length","settingsTogether","path","skipChange","_exports","getChangeStructure","appComponent","page","propertyPath","selector","changeSpecificData","appDescriptorChangeType","content","parameters","entityPropertyChange","operation","propertyValue","setLocalText","item","resourceModel","key","getText","setLocalTexts","model","settingsData","getData","control","controlData","enum","enumData","createAdaptionDialogContent","configContext","configPath","arguments","undefined","settingsModel","JSONModel","setData","deepClone","getProperty","list","List","setModel","listItem","InputListItem","label","bindContent","factory","context","type","Item","text","select","Select","selectedKey","change","event","data","getParameter","getKey","bindItems","template","Input","value","oMultiInput","MultiInput","width","showValueHelp","showClearIcon","tokens","navigationProperties","map","navigationProperty","Token","tokenUpdate","array","push","splice","indexOf","addValidator","args","CheckBox","selected","toLowerCase","parse","toString","openAdaptionDialog","title","infoText","size","informationMessage","MessageStrip","showIcon","addStyleClass","listIndex","Promise","resolve","reject","dialog","Dialog","contentWidth","contentHeight","height","buttons","Button","press","updateConfigModel","getContent","getModel","close","open","processChanges","singleChange","changes","Object","entries","getChange","processGlobalChanges","keys","separateChanges","CommonUtils","getAppComponent","getPage","getParent","separateGlobalChanges","viewId","getTargetView","getId","split","extractChanges","propertyValuesEntered","globalSettings","globalChanges","global","concat","noChanges","isFioriToolsRtaMode","urlParams","shellService","getShellServices","parseParameters","window","location","search","isRTAMode","getSettingsIfKeyUser","items","filter","keyUser","isConfigModelPrepared","prepareConfigModel","setProperty","getPersonalizationSetting","settings","getObject","personalizationSetting","find","updatedSettings","getPropertyNamesAndDescriptions","props","prop","name","description","enums","enumm"],"sourceRoot":".","sources":["Designtime.helper.ts"],"sourcesContent":["/*!\n * Reuse functions for designtime adaption\n */\n\nimport deepClone from \"sap/base/util/deepClone\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport type { TemplateType } from \"sap/fe/core/converters/ManifestSettings\";\nimport Button from \"sap/m/Button\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport Dialog from \"sap/m/Dialog\";\nimport Input from \"sap/m/Input\";\nimport InputListItem from \"sap/m/InputListItem\";\nimport List from \"sap/m/List\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport type { MultiInput$TokenUpdateEvent } from \"sap/m/MultiInput\";\nimport MultiInput from \"sap/m/MultiInput\";\nimport Select from \"sap/m/Select\";\nimport Token from \"sap/m/Token\";\nimport type Control from \"sap/ui/core/Control\";\nimport Item from \"sap/ui/core/Item\";\nimport type Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\n\nexport type adaptionChange = {\n\tappComponent: AppComponent;\n\tselector: AppComponent;\n\tchangeSpecificData: {\n\t\tappDescriptorChangeType: \"appdescr_fe_changePageConfiguration\";\n\t\tcontent: {\n\t\t\tparameters: {\n\t\t\t\tpage: string;\n\t\t\t\tentityPropertyChange: {\n\t\t\t\t\tpropertyPath: string;\n\t\t\t\t\toperation: string;\n\t\t\t\t\tpropertyValue: string | string[] | boolean | number | object | undefined;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type DesigntimeSettingEnums = {\n\tid: string;\n\tname: string;\n\tdescription?: string;\n};\n\nexport type DesigntimeSetting = {\n\tid: string;\n\tpath?: string;\n\tname: string;\n\tdescription: string;\n\trestrictedTo?: TemplateType[];\n\tvalue: unknown;\n\ttype?: string;\n\tenums?: DesigntimeSettingEnums[];\n\tskipChange?: boolean;\n\twriteObjectFor?: string;\n\twriteObject?: { id: string; path?: string }[];\n\tkeyUser?: boolean;\n};\n\nexport type PropertyValue = Record<string, string | string[] | boolean | number | object | undefined>;\n\nexport type SettingsData = {\n\tlabel: string;\n\ttooltip: string;\n\tcontrol: ControlData[];\n\tkeyUser?: boolean;\n};\n\ntype ControlData = {\n\ttype: string | undefined;\n\tenum: DesigntimeSettingEnums[] | undefined;\n\tvalue: unknown;\n\tid: string;\n};\n\ntype propKeyAndValue = { [key: string]: string | string[] | boolean | number | object | undefined };\n\n/**\n * Identify which settings have changed.\n * @param designtimeSettings\n * @param unchangedData\n * @param propertyValues\n *  @returns The configuration properties where the values have been changed compared to the starting values\n */\nexport function getChangedPropertyValues(\n\tdesigntimeSettings: DesigntimeSetting[],\n\tunchangedData: PropertyValue,\n\tpropertyValues: PropertyValue\n): PropertyValue {\n\tconst propertyChanges: PropertyValue = {};\n\n\tdesigntimeSettings.forEach(function (setting) {\n\t\tif (\n\t\t\t(typeof unchangedData[setting.id] !== \"object\" && unchangedData[setting.id] !== propertyValues[setting.id]) ||\n\t\t\t(typeof unchangedData[setting.id] === \"object\" &&\n\t\t\t\tJSON.stringify(unchangedData[setting.id]) !== JSON.stringify(propertyValues[setting.id]))\n\t\t) {\n\t\t\tif (setting.writeObject && propertyValues[setting.id] === setting.writeObjectFor) {\n\t\t\t\t// We write an object for this setting\n\t\t\t\tconst changeObject: PropertyValue = {};\n\t\t\t\tif (setting.writeObject && setting.writeObject?.length > 0) {\n\t\t\t\t\tsetting.writeObject.forEach(function (settingsTogether) {\n\t\t\t\t\t\tchangeObject[settingsTogether.path ? settingsTogether.path : settingsTogether.id] =\n\t\t\t\t\t\t\tpropertyValues[settingsTogether.id];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tpropertyChanges[setting.path ? setting.path : setting.id] = changeObject;\n\t\t\t} else if (!setting.skipChange) {\n\t\t\t\tpropertyChanges[setting.path ? setting.path : setting.id] = propertyValues[setting.id];\n\t\t\t}\n\t\t}\n\t});\n\treturn propertyChanges;\n}\n/**\n * Convert sap.fe change into a structure required by the flexibility tools.\n * @param appComponent\n * @param page\n * @param propertyPath\n * @param propertyChanges\n * @returns The change structure used by flexibility tools\n */\nexport function getChangeStructure(\n\tappComponent: AppComponent,\n\tpage: string,\n\tpropertyPath: string,\n\tpropertyChanges: string | string[] | boolean | number | object | undefined\n): adaptionChange {\n\treturn {\n\t\tappComponent: appComponent,\n\t\tselector: appComponent,\n\t\tchangeSpecificData: {\n\t\t\tappDescriptorChangeType: \"appdescr_fe_changePageConfiguration\",\n\t\t\tcontent: {\n\t\t\t\tparameters: {\n\t\t\t\t\tpage: page,\n\t\t\t\t\tentityPropertyChange: {\n\t\t\t\t\t\tpropertyPath: propertyPath,\n\t\t\t\t\t\toperation: \"UPSERT\",\n\t\t\t\t\t\tpropertyValue: propertyChanges\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction setLocalText(item: Record<string, unknown>, resourceModel: ResourceModel): void {\n\tfor (const key in item) {\n\t\tif (key !== \"id\" && typeof item[key] === \"string\") {\n\t\t\titem[key] = resourceModel.getText(item[key] as string);\n\t\t}\n\t}\n}\n\nfunction setLocalTexts(model: JSONModel, resourceModel: ResourceModel): void {\n\tconst settingsData = model.getData() as SettingsData[];\n\tsettingsData.forEach((setting) => {\n\t\tsetLocalText(setting, resourceModel);\n\t\tsetting.control.forEach((controlData) => {\n\t\t\tsetLocalText(controlData, resourceModel);\n\t\t\tcontrolData.enum?.forEach((enumData) => {\n\t\t\t\tsetLocalText(enumData, resourceModel);\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function createAdaptionDialogContent(\n\tconfigContext: Context,\n\tpropertyValues: PropertyValue,\n\tresourceModel: ResourceModel,\n\tconfigPath = \"rta/configSettings\"\n): List {\n\tconst settingsModel = new JSONModel();\n\tsettingsModel.setData(deepClone(configContext.getProperty(configPath)));\n\tsetLocalTexts(settingsModel, resourceModel);\n\tconst list = new List();\n\tlist.setModel(settingsModel);\n\n\tconst listItem = new InputListItem({\n\t\tlabel: \"{label}\"\n\t});\n\n\tlistItem.bindContent({\n\t\tpath: \"control\",\n\t\tfactory: function (path: string, context: { getProperty(name: string): string } /* sap.ui.model.Context */) {\n\t\t\tconst type = context.getProperty(\"type\");\n\t\t\tconst id = context.getProperty(\"id\");\n\n\t\t\tswitch (type) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tif (context.getProperty(\"enum\")) {\n\t\t\t\t\t\t// Create a select list for multiple options to select\n\t\t\t\t\t\tconst item = new Item({\n\t\t\t\t\t\t\ttext: \"{name}\",\n\t\t\t\t\t\t\tkey: \"{id}\"\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst select = new Select({\n\t\t\t\t\t\t\tselectedKey: \"{value}\",\n\t\t\t\t\t\t\tchange: function (event): void {\n\t\t\t\t\t\t\t\tpropertyValues[(this as Select).data(\"id\") as keyof PropertyValue] = (\n\t\t\t\t\t\t\t\t\tevent.getParameter(\"selectedItem\") as Item\n\t\t\t\t\t\t\t\t).getKey() as string & boolean;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).data(\"id\", id);\n\n\t\t\t\t\t\tselect.bindItems({\n\t\t\t\t\t\t\tpath: \"enum\",\n\t\t\t\t\t\t\ttemplate: item\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn select;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create an Input for text changes\n\t\t\t\t\t\treturn new Input({\n\t\t\t\t\t\t\tvalue: \"{value}\",\n\t\t\t\t\t\t\tchange: function (event): void {\n\t\t\t\t\t\t\t\tpropertyValues[(this as Input).data(\"id\") as keyof PropertyValue] = event.getParameter(\"value\") as string &\n\t\t\t\t\t\t\t\t\tboolean;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).data(\"id\", id);\n\t\t\t\t\t}\n\t\t\t\tcase \"string[]\":\n\t\t\t\t\t// Create an multi input field for the navigation properties\n\t\t\t\t\tconst oMultiInput = new MultiInput({\n\t\t\t\t\t\twidth: \"70%\",\n\t\t\t\t\t\tshowValueHelp: false,\n\t\t\t\t\t\tshowClearIcon: true,\n\t\t\t\t\t\ttokens: (propertyValues?.navigationProperties as string[]).map((navigationProperty) => {\n\t\t\t\t\t\t\treturn new Token({ text: navigationProperty, key: navigationProperty });\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ttokenUpdate: function (event: MultiInput$TokenUpdateEvent): void {\n\t\t\t\t\t\t\tconst array = propertyValues[(this as MultiInput).data(\"id\")] as string[];\n\t\t\t\t\t\t\tif ((event.getParameter(\"addedTokens\") as Token[])?.length > 0) {\n\t\t\t\t\t\t\t\tarray.push((event?.getParameter(\"addedTokens\") as Token[])[0]?.getProperty(\"key\"));\n\t\t\t\t\t\t\t} else if ((event.getParameter(\"removedTokens\") as Token[])?.length > 0) {\n\t\t\t\t\t\t\t\tarray.splice(array.indexOf((event?.getParameter(\"removedTokens\") as Token[])[0]?.getProperty(\"key\")), 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}).data(\"id\", id);\n\t\t\t\t\toMultiInput.addValidator(function (args: { text: string }) {\n\t\t\t\t\t\tconst text = args.text;\n\t\t\t\t\t\treturn new Token({\n\t\t\t\t\t\t\tkey: text,\n\t\t\t\t\t\t\ttext: text\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\treturn oMultiInput;\n\t\t\t\tcase \"number\":\n\t\t\t\t\t// Create an Input for number changes\n\t\t\t\t\treturn new Input({\n\t\t\t\t\t\tvalue: \"{value}\",\n\t\t\t\t\t\ttype: \"Number\",\n\t\t\t\t\t\tchange: function (event): void {\n\t\t\t\t\t\t\tpropertyValues[(this as Input).data(\"id\") as keyof PropertyValue] = event.getParameter(\"value\") as string &\n\t\t\t\t\t\t\t\tboolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t}).data(\"id\", id);\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\t// Create a checkbox for true/false values\n\t\t\t\t\treturn new CheckBox({\n\t\t\t\t\t\tselected: \"{value}\",\n\t\t\t\t\t\tselect: function (event): void {\n\t\t\t\t\t\t\tpropertyValues[(this as CheckBox).data(\"id\") as keyof PropertyValue] = event.getParameter(\n\t\t\t\t\t\t\t\t\"selected\"\n\t\t\t\t\t\t\t) as string & boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t}).data(\"id\", id);\n\t\t\t\tcase \"booleanOrString\":\n\t\t\t\t\t// Create a select list for boolean and string options to select\n\t\t\t\t\t// This type is at the moment only used for personalization settings which can be undefined, true, false or an object\n\t\t\t\t\t// The select list is used to select between true, false and \"Own Settings\"\n\t\t\t\t\t// If \"Own Settings\" is selected, the personalization object is written, otherwise the boolean is written (undefined cannot be written in a manifest change)\n\t\t\t\t\tconst item = new Item({\n\t\t\t\t\t\ttext: \"{name}\",\n\t\t\t\t\t\tkey: \"{id}\"\n\t\t\t\t\t});\n\n\t\t\t\t\tconst select = new Select({\n\t\t\t\t\t\tselectedKey: \"{value}\",\n\t\t\t\t\t\tchange: function (event): void {\n\t\t\t\t\t\t\tlet value = (event.getParameter(\"selectedItem\") as Item).getKey();\n\t\t\t\t\t\t\t// Convert string to boolean if necessary\n\t\t\t\t\t\t\tif (value.toLowerCase() === \"false\" || value.toLowerCase() === \"true\") {\n\t\t\t\t\t\t\t\tvalue = JSON.parse(value.toLowerCase());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpropertyValues[(this as Select).data(\"id\") as keyof PropertyValue] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}).data(\"id\", id);\n\n\t\t\t\t\tselect.bindItems({\n\t\t\t\t\t\tpath: \"enum\",\n\t\t\t\t\t\ttemplate: item\n\t\t\t\t\t});\n\t\t\t\t\treturn select;\n\t\t\t\tcase \"json\":\n\t\t\t\t\t// Create an input for json object descriptions\n\t\t\t\t\t// A text area would have been better but this does not work with the InputListItem\n\t\t\t\t\t// we would have needed a CustomListItem instead\n\t\t\t\t\t// which would have been too much effort as we would have needed to change the whole structure\n\t\t\t\t\treturn new Input({\n\t\t\t\t\t\tvalue: \"{value}\",\n\t\t\t\t\t\tchange: function (event): void {\n\t\t\t\t\t\t\tpropertyValues[(this as Input).data(\"id\") as keyof PropertyValue] = JSON.parse(\n\t\t\t\t\t\t\t\tevent.getParameter(\"value\")?.toString() as string\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}).data(\"id\", id);\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\n\tlist.bindItems({\n\t\tpath: \"/\",\n\t\ttemplate: listItem\n\t});\n\n\treturn list;\n}\n\nexport async function openAdaptionDialog(\n\tconfigContext: Context,\n\tpropertyValues: PropertyValue,\n\ttitle: string,\n\tresourceModel: ResourceModel,\n\tconfigPath = \"rta/configSettings\",\n\tinfoText = \"{sap.fe.i18n>RTA_CONFIGURATION_INFO_MESSAGE}\",\n\tsize?: { width: string; height: string }\n): Promise<PropertyValue> {\n\tconst list = createAdaptionDialogContent(configContext, propertyValues, resourceModel, configPath);\n\tconst content: (List | MessageStrip)[] = [];\n\tconst informationMessage = new MessageStrip({\n\t\tshowIcon: true,\n\t\ttype: \"Information\",\n\t\ttext: infoText\n\t});\n\tinformationMessage.addStyleClass(\"sapUiSmallMarginBottom\");\n\tcontent.push(informationMessage);\n\tcontent.push(list);\n\tconst listIndex = content.indexOf(list);\n\treturn new Promise(function (resolve, reject) {\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: title,\n\t\t\tcontentWidth: size ? size.width : \"550px\",\n\t\t\tcontentHeight: size ? size.height : \"300px\",\n\t\t\tcontent: content,\n\t\t\tbuttons: [\n\t\t\t\tnew Button({\n\t\t\t\t\ttext: \"{sap.fe.i18n>RTA_CONFIGURATION_APPLY}\",\n\t\t\t\t\ttype: \"Emphasized\",\n\t\t\t\t\tpress: function (): void {\n\t\t\t\t\t\t// persist changes done\n\t\t\t\t\t\tupdateConfigModel(configContext, dialog.getContent()[listIndex].getModel() as JSONModel, configPath);\n\t\t\t\t\t\tdialog.close();\n\t\t\t\t\t\tresolve(propertyValues);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tnew Button({\n\t\t\t\t\ttext: \"{sap.fe.i18n>RTA_CONFIGURATION_CANCEL}\",\n\t\t\t\t\tpress: function (): void {\n\t\t\t\t\t\tdialog.close();\n\t\t\t\t\t\treject();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t\tdialog.setModel(resourceModel, \"sap.fe.i18n\");\n\t\tdialog.addStyleClass(\"sapUiContentPadding\");\n\t\tdialog.addStyleClass(\"sapUiRTABorder\");\n\t\tdialog.open();\n\t\treturn;\n\t});\n}\n\nexport function processChanges(\n\tpropertyChanges: propKeyAndValue,\n\tappComponent: AppComponent,\n\tpage: string,\n\tpropertyPath: string\n): adaptionChange[] {\n\tlet singleChange: propKeyAndValue = {};\n\tconst changes = [];\n\tfor (const [key, value] of Object.entries(propertyChanges)) {\n\t\tsingleChange = {};\n\t\tsingleChange[key] = value;\n\t\tchanges.push(getChange(singleChange, appComponent, page, propertyPath));\n\t}\n\treturn changes;\n}\n\n/**\n * Format each change made to global settings \"sap.fe\"\n * The set of changes are put into individual changes to ensure\n * that earlier changes are not lost when these are loaded at runtime.\n * @param propertyChanges\n * @param appComponent\n * @param page\n * @param propertyPath\n * @returns The change structure used by flexibility tools\n */\nexport function processGlobalChanges(\n\tpropertyChanges: propKeyAndValue,\n\tappComponent: AppComponent,\n\tpage: string,\n\tpropertyPath: string\n): adaptionChange[] {\n\tlet singleChange: propKeyAndValue = {};\n\tconst changes = [];\n\tfor (const [key, value] of Object.entries(propertyChanges)) {\n\t\tsingleChange = {};\n\t\tsingleChange[key] = value;\n\t\tchanges.push(getChange(singleChange, appComponent, page, propertyPath));\n\t}\n\treturn changes;\n}\n\nexport function getChange(\n\tpropertyChanges: propKeyAndValue,\n\tappComponent: AppComponent,\n\tpage: string,\n\tpropertyPath: string\n): adaptionChange {\n\t// Changes for controls have a path starting with controlConfiguration, followed by an annotation path\n\t// For the list report changes, there is no path because the properties are directly under Settings\n\t// for the \"sap.fe.templates.ListReport\" in the manifest.\n\tif (propertyPath === \"\") {\n\t\tpropertyPath = Object.keys(propertyChanges)[0];\n\t} else {\n\t\tpropertyPath = propertyPath + \"/\" + Object.keys(propertyChanges)[0];\n\t}\n\tconst value = propertyChanges[Object.keys(propertyChanges)[0]];\n\n\treturn getChangeStructure(appComponent, page, propertyPath, value);\n}\n\n/**\n * Get the parameters other than the control settings that are needed\n * for the change structure.\n * @param propertyChanges\n * @param propertyPath\n * @param control\n * @returns The changes in a structure used by flexibility tools\n */\nexport function separateChanges(propertyChanges: PropertyValue, propertyPath: string, control: Control): adaptionChange[] {\n\tconst appComponent = CommonUtils.getAppComponent(control);\n\tconst page = getPage(control.getParent() as Control);\n\treturn processChanges(propertyChanges, appComponent, page, propertyPath);\n}\n\n/**\n * Get the parameters other than the global settings that are needed\n * for the change structure.\n * @param propertyChanges\n * @param propertyPath\n * @param control\n * @returns The changes in a structure used by flexibility tools\n */\nfunction separateGlobalChanges(propertyChanges: PropertyValue, propertyPath: string, control: Control): adaptionChange[] {\n\tconst appComponent = CommonUtils.getAppComponent(control);\n\tconst page = \"sap.fe\";\n\treturn processGlobalChanges(propertyChanges, appComponent, page, propertyPath);\n}\n\nfunction getPage(control: Control): string {\n\tconst viewId = CommonUtils.getTargetView(control).getId().split(\"::\");\n\treturn viewId[viewId.length - 1];\n}\n\nexport const extractChanges = function (\n\tdesigntimeSettings: DesigntimeSetting[],\n\tunchangedData: PropertyValue,\n\tpropertyValuesEntered: PropertyValue,\n\tpropertyPath: string,\n\tcontrol: Control,\n\tglobalSettings?: DesigntimeSetting[]\n): adaptionChange[] {\n\tconst propertyChanges = getChangedPropertyValues(designtimeSettings, unchangedData, propertyValuesEntered);\n\t// Put each property into its own change. This ensures that we don't lose previous changes.\n\tlet changes = separateChanges(propertyChanges, propertyPath, control);\n\tif (globalSettings) {\n\t\tconst globalChanges = getChangedPropertyValues(globalSettings, unchangedData, propertyValuesEntered);\n\t\tconst global = separateGlobalChanges(globalChanges, propertyPath, control);\n\t\tchanges = changes.concat(global);\n\t}\n\tif (changes.length > 0) {\n\t\treturn changes;\n\t} else {\n\t\treturn [];\n\t}\n};\n\nexport const noChanges = function (): [] {\n\treturn [];\n};\n\nexport function isFioriToolsRtaMode(appComponent: AppComponent): boolean {\n\t// Check if rta mode has been specified on url (for local testing)\n\tlet urlParams: Record<string, string[]> = {};\n\tconst shellService = appComponent.getShellServices();\n\turlParams = shellService?.parseParameters?.(window.location.search);\n\treturn !!urlParams && urlParams[\"fiori-tools-rta-mode\"]?.[0] === \"forAdaptation\";\n}\n\nexport function isRTAMode(appComponent: AppComponent): boolean {\n\t// Check if rta mode has been specified on url (for local testing)\n\tlet urlParams: Record<string, string[]> = {};\n\tconst shellService = appComponent.getShellServices();\n\turlParams = shellService?.parseParameters?.(window.location.search);\n\treturn !!urlParams && urlParams[\"sap-fe-rta-mode\"]?.[0] === \"true\";\n}\n\nexport function getSettingsIfKeyUser(appComponent: AppComponent, items: SettingsData[]): SettingsData[] {\n\tif (!isFioriToolsRtaMode(appComponent)) {\n\t\t// not tools => key user\n\t\treturn items.filter((setting) => {\n\t\t\treturn setting.keyUser;\n\t\t});\n\t}\n\treturn items;\n}\n\nexport function isConfigModelPrepared(configContext: Context, path = \"rta/configSettings\"): boolean {\n\tif (configContext.getProperty(path)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function prepareConfigModel(items: SettingsData[], configContext: Context, path = \"rta/configSettings\"): void {\n\tif (!configContext.getProperty(path)) {\n\t\tconfigContext.setProperty(path, items);\n\t}\n}\n\nexport function getPersonalizationSetting(configContext: Context, path = \"rta/configSettings\"): boolean | string | undefined {\n\tconst settings = configContext.getObject(path);\n\tconst personalizationSetting = settings.find((setting: SettingsData) => {\n\t\treturn setting?.control[0]?.id === \"personalization\";\n\t});\n\tif (personalizationSetting) {\n\t\treturn personalizationSetting.control[0].value;\n\t}\n\treturn undefined;\n}\n\nexport function updateConfigModel(configContext: Context, settingsModel: JSONModel, path = \"rta/configSettings\"): void {\n\tconst updatedSettings = deepClone(settingsModel.getData());\n\tconfigContext.setProperty(path, updatedSettings);\n}\n\nexport function getPropertyNamesAndDescriptions(props: DesigntimeSetting[], resourceModel: ResourceModel): DesigntimeSetting[] {\n\tprops.forEach(function (prop) {\n\t\tprop.name = resourceModel.getText(prop.name);\n\t\tprop.description = resourceModel.getText(prop.description);\n\t\tif (prop.enums) {\n\t\t\tprop.enums.forEach(function (enumm) {\n\t\t\t\tenumm.name = resourceModel.getText(enumm.name);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn props;\n}\n"],"mappings":";;;;;;;;EAAA;AACA;AACA;EAgFA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAASA,wBAAwBA,CACvCC,kBAAuC,EACvCC,aAA4B,EAC5BC,cAA6B,EACb;IAChB,MAAMC,eAA8B,GAAG,CAAC,CAAC;IAEzCH,kBAAkB,CAACI,OAAO,CAAC,UAAUC,OAAO,EAAE;MAC7C,IACE,OAAOJ,aAAa,CAACI,OAAO,CAACC,EAAE,CAAC,KAAK,QAAQ,IAAIL,aAAa,CAACI,OAAO,CAACC,EAAE,CAAC,KAAKJ,cAAc,CAACG,OAAO,CAACC,EAAE,CAAC,IACzG,OAAOL,aAAa,CAACI,OAAO,CAACC,EAAE,CAAC,KAAK,QAAQ,IAC7CC,IAAI,CAACC,SAAS,CAACP,aAAa,CAACI,OAAO,CAACC,EAAE,CAAC,CAAC,KAAKC,IAAI,CAACC,SAAS,CAACN,cAAc,CAACG,OAAO,CAACC,EAAE,CAAC,CAAE,EACzF;QACD,IAAID,OAAO,CAACI,WAAW,IAAIP,cAAc,CAACG,OAAO,CAACC,EAAE,CAAC,KAAKD,OAAO,CAACK,cAAc,EAAE;UACjF;UACA,MAAMC,YAA2B,GAAG,CAAC,CAAC;UACtC,IAAIN,OAAO,CAACI,WAAW,IAAIJ,OAAO,CAACI,WAAW,EAAEG,MAAM,GAAG,CAAC,EAAE;YAC3DP,OAAO,CAACI,WAAW,CAACL,OAAO,CAAC,UAAUS,gBAAgB,EAAE;cACvDF,YAAY,CAACE,gBAAgB,CAACC,IAAI,GAAGD,gBAAgB,CAACC,IAAI,GAAGD,gBAAgB,CAACP,EAAE,CAAC,GAChFJ,cAAc,CAACW,gBAAgB,CAACP,EAAE,CAAC;YACrC,CAAC,CAAC;UACH;UACAH,eAAe,CAACE,OAAO,CAACS,IAAI,GAAGT,OAAO,CAACS,IAAI,GAAGT,OAAO,CAACC,EAAE,CAAC,GAAGK,YAAY;QACzE,CAAC,MAAM,IAAI,CAACN,OAAO,CAACU,UAAU,EAAE;UAC/BZ,eAAe,CAACE,OAAO,CAACS,IAAI,GAAGT,OAAO,CAACS,IAAI,GAAGT,OAAO,CAACC,EAAE,CAAC,GAAGJ,cAAc,CAACG,OAAO,CAACC,EAAE,CAAC;QACvF;MACD;IACD,CAAC,CAAC;IACF,OAAOH,eAAe;EACvB;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAPAa,QAAA,CAAAjB,wBAAA,GAAAA,wBAAA;EAQO,SAASkB,kBAAkBA,CACjCC,YAA0B,EAC1BC,IAAY,EACZC,YAAoB,EACpBjB,eAA0E,EACzD;IACjB,OAAO;MACNe,YAAY,EAAEA,YAAY;MAC1BG,QAAQ,EAAEH,YAAY;MACtBI,kBAAkB,EAAE;QACnBC,uBAAuB,EAAE,qCAAqC;QAC9DC,OAAO,EAAE;UACRC,UAAU,EAAE;YACXN,IAAI,EAAEA,IAAI;YACVO,oBAAoB,EAAE;cACrBN,YAAY,EAAEA,YAAY;cAC1BO,SAAS,EAAE,QAAQ;cACnBC,aAAa,EAAEzB;YAChB;UACD;QACD;MACD;IACD,CAAC;EACF;EAACa,QAAA,CAAAC,kBAAA,GAAAA,kBAAA;EAED,SAASY,YAAYA,CAACC,IAA6B,EAAEC,aAA4B,EAAQ;IACxF,KAAK,MAAMC,GAAG,IAAIF,IAAI,EAAE;MACvB,IAAIE,GAAG,KAAK,IAAI,IAAI,OAAOF,IAAI,CAACE,GAAG,CAAC,KAAK,QAAQ,EAAE;QAClDF,IAAI,CAACE,GAAG,CAAC,GAAGD,aAAa,CAACE,OAAO,CAACH,IAAI,CAACE,GAAG,CAAW,CAAC;MACvD;IACD;EACD;EAEA,SAASE,aAAaA,CAACC,KAAgB,EAAEJ,aAA4B,EAAQ;IAC5E,MAAMK,YAAY,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAmB;IACtDD,YAAY,CAAChC,OAAO,CAAEC,OAAO,IAAK;MACjCwB,YAAY,CAACxB,OAAO,EAAE0B,aAAa,CAAC;MACpC1B,OAAO,CAACiC,OAAO,CAAClC,OAAO,CAAEmC,WAAW,IAAK;QACxCV,YAAY,CAACU,WAAW,EAAER,aAAa,CAAC;QACxCQ,WAAW,CAACC,IAAI,EAAEpC,OAAO,CAAEqC,QAAQ,IAAK;UACvCZ,YAAY,CAACY,QAAQ,EAAEV,aAAa,CAAC;QACtC,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC,CAAC;EACH;EAEO,SAASW,2BAA2BA,CAC1CC,aAAsB,EACtBzC,cAA6B,EAC7B6B,aAA4B,EAErB;IAAA,IADPa,UAAU,GAAAC,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,oBAAoB;IAEjC,MAAME,aAAa,GAAG,IAAIC,SAAS,CAAC,CAAC;IACrCD,aAAa,CAACE,OAAO,CAACC,SAAS,CAACP,aAAa,CAACQ,WAAW,CAACP,UAAU,CAAC,CAAC,CAAC;IACvEV,aAAa,CAACa,aAAa,EAAEhB,aAAa,CAAC;IAC3C,MAAMqB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBD,IAAI,CAACE,QAAQ,CAACP,aAAa,CAAC;IAE5B,MAAMQ,QAAQ,GAAG,IAAIC,aAAa,CAAC;MAClCC,KAAK,EAAE;IACR,CAAC,CAAC;IAEFF,QAAQ,CAACG,WAAW,CAAC;MACpB5C,IAAI,EAAE,SAAS;MACf6C,OAAO,EAAE,SAAAA,CAAU7C,IAAY,EAAE8C,OAA8C,EAA6B;QAC3G,MAAMC,IAAI,GAAGD,OAAO,CAACT,WAAW,CAAC,MAAM,CAAC;QACxC,MAAM7C,EAAE,GAAGsD,OAAO,CAACT,WAAW,CAAC,IAAI,CAAC;QAEpC,QAAQU,IAAI;UACX,KAAK,QAAQ;YACZ,IAAID,OAAO,CAACT,WAAW,CAAC,MAAM,CAAC,EAAE;cAChC;cACA,MAAMrB,IAAI,GAAG,IAAIgC,IAAI,CAAC;gBACrBC,IAAI,EAAE,QAAQ;gBACd/B,GAAG,EAAE;cACN,CAAC,CAAC;cAEF,MAAMgC,MAAM,GAAG,IAAIC,MAAM,CAAC;gBACzBC,WAAW,EAAE,SAAS;gBACtBC,MAAM,EAAE,SAAAA,CAAUC,KAAK,EAAQ;kBAC9BlE,cAAc,CAAE,IAAI,CAAYmE,IAAI,CAAC,IAAI,CAAC,CAAwB,GACjED,KAAK,CAACE,YAAY,CAAC,cAAc,CAAC,CACjCC,MAAM,CAAC,CAAqB;gBAC/B;cACD,CAAC,CAAC,CAACF,IAAI,CAAC,IAAI,EAAE/D,EAAE,CAAC;cAEjB0D,MAAM,CAACQ,SAAS,CAAC;gBAChB1D,IAAI,EAAE,MAAM;gBACZ2D,QAAQ,EAAE3C;cACX,CAAC,CAAC;cACF,OAAOkC,MAAM;YACd,CAAC,MAAM;cACN;cACA,OAAO,IAAIU,KAAK,CAAC;gBAChBC,KAAK,EAAE,SAAS;gBAChBR,MAAM,EAAE,SAAAA,CAAUC,KAAK,EAAQ;kBAC9BlE,cAAc,CAAE,IAAI,CAAWmE,IAAI,CAAC,IAAI,CAAC,CAAwB,GAAGD,KAAK,CAACE,YAAY,CAAC,OAAO,CACtF;gBACT;cACD,CAAC,CAAC,CAACD,IAAI,CAAC,IAAI,EAAE/D,EAAE,CAAC;YAClB;UACD,KAAK,UAAU;YACd;YACA,MAAMsE,WAAW,GAAG,IAAIC,UAAU,CAAC;cAClCC,KAAK,EAAE,KAAK;cACZC,aAAa,EAAE,KAAK;cACpBC,aAAa,EAAE,IAAI;cACnBC,MAAM,EAAE,CAAC/E,cAAc,EAAEgF,oBAAoB,EAAcC,GAAG,CAAEC,kBAAkB,IAAK;gBACtF,OAAO,IAAIC,KAAK,CAAC;kBAAEtB,IAAI,EAAEqB,kBAAkB;kBAAEpD,GAAG,EAAEoD;gBAAmB,CAAC,CAAC;cACxE,CAAC,CAAC;cACFE,WAAW,EAAE,SAAAA,CAAUlB,KAAkC,EAAQ;gBAChE,MAAMmB,KAAK,GAAGrF,cAAc,CAAE,IAAI,CAAgBmE,IAAI,CAAC,IAAI,CAAC,CAAa;gBACzE,IAAKD,KAAK,CAACE,YAAY,CAAC,aAAa,CAAC,EAAc1D,MAAM,GAAG,CAAC,EAAE;kBAC/D2E,KAAK,CAACC,IAAI,CAAC,CAACpB,KAAK,EAAEE,YAAY,CAAC,aAAa,CAAC,EAAa,CAAC,CAAC,EAAEnB,WAAW,CAAC,KAAK,CAAC,CAAC;gBACnF,CAAC,MAAM,IAAKiB,KAAK,CAACE,YAAY,CAAC,eAAe,CAAC,EAAc1D,MAAM,GAAG,CAAC,EAAE;kBACxE2E,KAAK,CAACE,MAAM,CAACF,KAAK,CAACG,OAAO,CAAC,CAACtB,KAAK,EAAEE,YAAY,CAAC,eAAe,CAAC,EAAa,CAAC,CAAC,EAAEnB,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;gBACzG;cACD;YACD,CAAC,CAAC,CAACkB,IAAI,CAAC,IAAI,EAAE/D,EAAE,CAAC;YACjBsE,WAAW,CAACe,YAAY,CAAC,UAAUC,IAAsB,EAAE;cAC1D,MAAM7B,IAAI,GAAG6B,IAAI,CAAC7B,IAAI;cACtB,OAAO,IAAIsB,KAAK,CAAC;gBAChBrD,GAAG,EAAE+B,IAAI;gBACTA,IAAI,EAAEA;cACP,CAAC,CAAC;YACH,CAAC,CAAC;YACF,OAAOa,WAAW;UACnB,KAAK,QAAQ;YACZ;YACA,OAAO,IAAIF,KAAK,CAAC;cAChBC,KAAK,EAAE,SAAS;cAChBd,IAAI,EAAE,QAAQ;cACdM,MAAM,EAAE,SAAAA,CAAUC,KAAK,EAAQ;gBAC9BlE,cAAc,CAAE,IAAI,CAAWmE,IAAI,CAAC,IAAI,CAAC,CAAwB,GAAGD,KAAK,CAACE,YAAY,CAAC,OAAO,CACtF;cACT;YACD,CAAC,CAAC,CAACD,IAAI,CAAC,IAAI,EAAE/D,EAAE,CAAC;UAClB,KAAK,SAAS;YACb;YACA,OAAO,IAAIuF,QAAQ,CAAC;cACnBC,QAAQ,EAAE,SAAS;cACnB9B,MAAM,EAAE,SAAAA,CAAUI,KAAK,EAAQ;gBAC9BlE,cAAc,CAAE,IAAI,CAAcmE,IAAI,CAAC,IAAI,CAAC,CAAwB,GAAGD,KAAK,CAACE,YAAY,CACxF,UACD,CAAqB;cACtB;YACD,CAAC,CAAC,CAACD,IAAI,CAAC,IAAI,EAAE/D,EAAE,CAAC;UAClB,KAAK,iBAAiB;YACrB;YACA;YACA;YACA;YACA,MAAMwB,IAAI,GAAG,IAAIgC,IAAI,CAAC;cACrBC,IAAI,EAAE,QAAQ;cACd/B,GAAG,EAAE;YACN,CAAC,CAAC;YAEF,MAAMgC,MAAM,GAAG,IAAIC,MAAM,CAAC;cACzBC,WAAW,EAAE,SAAS;cACtBC,MAAM,EAAE,SAAAA,CAAUC,KAAK,EAAQ;gBAC9B,IAAIO,KAAK,GAAIP,KAAK,CAACE,YAAY,CAAC,cAAc,CAAC,CAAUC,MAAM,CAAC,CAAC;gBACjE;gBACA,IAAII,KAAK,CAACoB,WAAW,CAAC,CAAC,KAAK,OAAO,IAAIpB,KAAK,CAACoB,WAAW,CAAC,CAAC,KAAK,MAAM,EAAE;kBACtEpB,KAAK,GAAGpE,IAAI,CAACyF,KAAK,CAACrB,KAAK,CAACoB,WAAW,CAAC,CAAC,CAAC;gBACxC;gBACA7F,cAAc,CAAE,IAAI,CAAYmE,IAAI,CAAC,IAAI,CAAC,CAAwB,GAAGM,KAAK;cAC3E;YACD,CAAC,CAAC,CAACN,IAAI,CAAC,IAAI,EAAE/D,EAAE,CAAC;YAEjB0D,MAAM,CAACQ,SAAS,CAAC;cAChB1D,IAAI,EAAE,MAAM;cACZ2D,QAAQ,EAAE3C;YACX,CAAC,CAAC;YACF,OAAOkC,MAAM;UACd,KAAK,MAAM;YACV;YACA;YACA;YACA;YACA,OAAO,IAAIU,KAAK,CAAC;cAChBC,KAAK,EAAE,SAAS;cAChBR,MAAM,EAAE,SAAAA,CAAUC,KAAK,EAAQ;gBAC9BlE,cAAc,CAAE,IAAI,CAAWmE,IAAI,CAAC,IAAI,CAAC,CAAwB,GAAG9D,IAAI,CAACyF,KAAK,CAC7E5B,KAAK,CAACE,YAAY,CAAC,OAAO,CAAC,EAAE2B,QAAQ,CAAC,CACvC,CAAC;cACF;YACD,CAAC,CAAC,CAAC5B,IAAI,CAAC,IAAI,EAAE/D,EAAE,CAAC;UAClB;YACC;QACF;MACD;IACD,CAAC,CAAC;IAEF8C,IAAI,CAACoB,SAAS,CAAC;MACd1D,IAAI,EAAE,GAAG;MACT2D,QAAQ,EAAElB;IACX,CAAC,CAAC;IAEF,OAAOH,IAAI;EACZ;EAACpC,QAAA,CAAA0B,2BAAA,GAAAA,2BAAA;EAEM,eAAewD,kBAAkBA,CACvCvD,aAAsB,EACtBzC,cAA6B,EAC7BiG,KAAa,EACbpE,aAA4B,EAIH;IAAA,IAHzBa,UAAU,GAAAC,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,oBAAoB;IAAA,IACjCuD,QAAQ,GAAAvD,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,8CAA8C;IAAA,IACzDwD,IAAwC,GAAAxD,SAAA,CAAAjC,MAAA,OAAAiC,SAAA,MAAAC,SAAA;IAExC,MAAMM,IAAI,GAAGV,2BAA2B,CAACC,aAAa,EAAEzC,cAAc,EAAE6B,aAAa,EAAEa,UAAU,CAAC;IAClG,MAAMpB,OAAgC,GAAG,EAAE;IAC3C,MAAM8E,kBAAkB,GAAG,IAAIC,YAAY,CAAC;MAC3CC,QAAQ,EAAE,IAAI;MACd3C,IAAI,EAAE,aAAa;MACnBE,IAAI,EAAEqC;IACP,CAAC,CAAC;IACFE,kBAAkB,CAACG,aAAa,CAAC,wBAAwB,CAAC;IAC1DjF,OAAO,CAACgE,IAAI,CAACc,kBAAkB,CAAC;IAChC9E,OAAO,CAACgE,IAAI,CAACpC,IAAI,CAAC;IAClB,MAAMsD,SAAS,GAAGlF,OAAO,CAACkE,OAAO,CAACtC,IAAI,CAAC;IACvC,OAAO,IAAIuD,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;MAC7C,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC;QACzBZ,KAAK,EAAEA,KAAK;QACZa,YAAY,EAAEX,IAAI,GAAGA,IAAI,CAACvB,KAAK,GAAG,OAAO;QACzCmC,aAAa,EAAEZ,IAAI,GAAGA,IAAI,CAACa,MAAM,GAAG,OAAO;QAC3C1F,OAAO,EAAEA,OAAO;QAChB2F,OAAO,EAAE,CACR,IAAIC,MAAM,CAAC;UACVrD,IAAI,EAAE,uCAAuC;UAC7CF,IAAI,EAAE,YAAY;UAClBwD,KAAK,EAAE,SAAAA,CAAA,EAAkB;YACxB;YACAC,iBAAiB,CAAC3E,aAAa,EAAEmE,MAAM,CAACS,UAAU,CAAC,CAAC,CAACb,SAAS,CAAC,CAACc,QAAQ,CAAC,CAAC,EAAe5E,UAAU,CAAC;YACpGkE,MAAM,CAACW,KAAK,CAAC,CAAC;YACdb,OAAO,CAAC1G,cAAc,CAAC;UACxB;QACD,CAAC,CAAC,EACF,IAAIkH,MAAM,CAAC;UACVrD,IAAI,EAAE,wCAAwC;UAC9CsD,KAAK,EAAE,SAAAA,CAAA,EAAkB;YACxBP,MAAM,CAACW,KAAK,CAAC,CAAC;YACdZ,MAAM,CAAC,CAAC;UACT;QACD,CAAC,CAAC;MAEJ,CAAC,CAAC;MACFC,MAAM,CAACxD,QAAQ,CAACvB,aAAa,EAAE,aAAa,CAAC;MAC7C+E,MAAM,CAACL,aAAa,CAAC,qBAAqB,CAAC;MAC3CK,MAAM,CAACL,aAAa,CAAC,gBAAgB,CAAC;MACtCK,MAAM,CAACY,IAAI,CAAC,CAAC;MACb;IACD,CAAC,CAAC;EACH;EAAC1G,QAAA,CAAAkF,kBAAA,GAAAA,kBAAA;EAEM,SAASyB,cAAcA,CAC7BxH,eAAgC,EAChCe,YAA0B,EAC1BC,IAAY,EACZC,YAAoB,EACD;IACnB,IAAIwG,YAA6B,GAAG,CAAC,CAAC;IACtC,MAAMC,OAAO,GAAG,EAAE;IAClB,KAAK,MAAM,CAAC7F,GAAG,EAAE2C,KAAK,CAAC,IAAImD,MAAM,CAACC,OAAO,CAAC5H,eAAe,CAAC,EAAE;MAC3DyH,YAAY,GAAG,CAAC,CAAC;MACjBA,YAAY,CAAC5F,GAAG,CAAC,GAAG2C,KAAK;MACzBkD,OAAO,CAACrC,IAAI,CAACwC,SAAS,CAACJ,YAAY,EAAE1G,YAAY,EAAEC,IAAI,EAAEC,YAAY,CAAC,CAAC;IACxE;IACA,OAAOyG,OAAO;EACf;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATA7G,QAAA,CAAA2G,cAAA,GAAAA,cAAA;EAUO,SAASM,oBAAoBA,CACnC9H,eAAgC,EAChCe,YAA0B,EAC1BC,IAAY,EACZC,YAAoB,EACD;IACnB,IAAIwG,YAA6B,GAAG,CAAC,CAAC;IACtC,MAAMC,OAAO,GAAG,EAAE;IAClB,KAAK,MAAM,CAAC7F,GAAG,EAAE2C,KAAK,CAAC,IAAImD,MAAM,CAACC,OAAO,CAAC5H,eAAe,CAAC,EAAE;MAC3DyH,YAAY,GAAG,CAAC,CAAC;MACjBA,YAAY,CAAC5F,GAAG,CAAC,GAAG2C,KAAK;MACzBkD,OAAO,CAACrC,IAAI,CAACwC,SAAS,CAACJ,YAAY,EAAE1G,YAAY,EAAEC,IAAI,EAAEC,YAAY,CAAC,CAAC;IACxE;IACA,OAAOyG,OAAO;EACf;EAAC7G,QAAA,CAAAiH,oBAAA,GAAAA,oBAAA;EAEM,SAASD,SAASA,CACxB7H,eAAgC,EAChCe,YAA0B,EAC1BC,IAAY,EACZC,YAAoB,EACH;IACjB;IACA;IACA;IACA,IAAIA,YAAY,KAAK,EAAE,EAAE;MACxBA,YAAY,GAAG0G,MAAM,CAACI,IAAI,CAAC/H,eAAe,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,MAAM;MACNiB,YAAY,GAAGA,YAAY,GAAG,GAAG,GAAG0G,MAAM,CAACI,IAAI,CAAC/H,eAAe,CAAC,CAAC,CAAC,CAAC;IACpE;IACA,MAAMwE,KAAK,GAAGxE,eAAe,CAAC2H,MAAM,CAACI,IAAI,CAAC/H,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IAE9D,OAAOc,kBAAkB,CAACC,YAAY,EAAEC,IAAI,EAAEC,YAAY,EAAEuD,KAAK,CAAC;EACnE;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAPA3D,QAAA,CAAAgH,SAAA,GAAAA,SAAA;EAQO,SAASG,eAAeA,CAAChI,eAA8B,EAAEiB,YAAoB,EAAEkB,OAAgB,EAAoB;IACzH,MAAMpB,YAAY,GAAGkH,WAAW,CAACC,eAAe,CAAC/F,OAAO,CAAC;IACzD,MAAMnB,IAAI,GAAGmH,OAAO,CAAChG,OAAO,CAACiG,SAAS,CAAC,CAAY,CAAC;IACpD,OAAOZ,cAAc,CAACxH,eAAe,EAAEe,YAAY,EAAEC,IAAI,EAAEC,YAAY,CAAC;EACzE;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAPAJ,QAAA,CAAAmH,eAAA,GAAAA,eAAA;EAQA,SAASK,qBAAqBA,CAACrI,eAA8B,EAAEiB,YAAoB,EAAEkB,OAAgB,EAAoB;IACxH,MAAMpB,YAAY,GAAGkH,WAAW,CAACC,eAAe,CAAC/F,OAAO,CAAC;IACzD,MAAMnB,IAAI,GAAG,QAAQ;IACrB,OAAO8G,oBAAoB,CAAC9H,eAAe,EAAEe,YAAY,EAAEC,IAAI,EAAEC,YAAY,CAAC;EAC/E;EAEA,SAASkH,OAAOA,CAAChG,OAAgB,EAAU;IAC1C,MAAMmG,MAAM,GAAGL,WAAW,CAACM,aAAa,CAACpG,OAAO,CAAC,CAACqG,KAAK,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;IACrE,OAAOH,MAAM,CAACA,MAAM,CAAC7H,MAAM,GAAG,CAAC,CAAC;EACjC;EAEO,MAAMiI,cAAc,GAAG,SAAAA,CAC7B7I,kBAAuC,EACvCC,aAA4B,EAC5B6I,qBAAoC,EACpC1H,YAAoB,EACpBkB,OAAgB,EAChByG,cAAoC,EACjB;IACnB,MAAM5I,eAAe,GAAGJ,wBAAwB,CAACC,kBAAkB,EAAEC,aAAa,EAAE6I,qBAAqB,CAAC;IAC1G;IACA,IAAIjB,OAAO,GAAGM,eAAe,CAAChI,eAAe,EAAEiB,YAAY,EAAEkB,OAAO,CAAC;IACrE,IAAIyG,cAAc,EAAE;MACnB,MAAMC,aAAa,GAAGjJ,wBAAwB,CAACgJ,cAAc,EAAE9I,aAAa,EAAE6I,qBAAqB,CAAC;MACpG,MAAMG,MAAM,GAAGT,qBAAqB,CAACQ,aAAa,EAAE5H,YAAY,EAAEkB,OAAO,CAAC;MAC1EuF,OAAO,GAAGA,OAAO,CAACqB,MAAM,CAACD,MAAM,CAAC;IACjC;IACA,IAAIpB,OAAO,CAACjH,MAAM,GAAG,CAAC,EAAE;MACvB,OAAOiH,OAAO;IACf,CAAC,MAAM;MACN,OAAO,EAAE;IACV;EACD,CAAC;EAAC7G,QAAA,CAAA6H,cAAA,GAAAA,cAAA;EAEK,MAAMM,SAAS,GAAG,SAAAA,CAAA,EAAgB;IACxC,OAAO,EAAE;EACV,CAAC;EAACnI,QAAA,CAAAmI,SAAA,GAAAA,SAAA;EAEK,SAASC,mBAAmBA,CAAClI,YAA0B,EAAW;IACxE;IACA,IAAImI,SAAmC,GAAG,CAAC,CAAC;IAC5C,MAAMC,YAAY,GAAGpI,YAAY,CAACqI,gBAAgB,CAAC,CAAC;IACpDF,SAAS,GAAGC,YAAY,EAAEE,eAAe,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IACnE,OAAO,CAAC,CAACN,SAAS,IAAIA,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,KAAK,eAAe;EACjF;EAACrI,QAAA,CAAAoI,mBAAA,GAAAA,mBAAA;EAEM,SAASQ,SAASA,CAAC1I,YAA0B,EAAW;IAC9D;IACA,IAAImI,SAAmC,GAAG,CAAC,CAAC;IAC5C,MAAMC,YAAY,GAAGpI,YAAY,CAACqI,gBAAgB,CAAC,CAAC;IACpDF,SAAS,GAAGC,YAAY,EAAEE,eAAe,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IACnE,OAAO,CAAC,CAACN,SAAS,IAAIA,SAAS,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,KAAK,MAAM;EACnE;EAACrI,QAAA,CAAA4I,SAAA,GAAAA,SAAA;EAEM,SAASC,oBAAoBA,CAAC3I,YAA0B,EAAE4I,KAAqB,EAAkB;IACvG,IAAI,CAACV,mBAAmB,CAAClI,YAAY,CAAC,EAAE;MACvC;MACA,OAAO4I,KAAK,CAACC,MAAM,CAAE1J,OAAO,IAAK;QAChC,OAAOA,OAAO,CAAC2J,OAAO;MACvB,CAAC,CAAC;IACH;IACA,OAAOF,KAAK;EACb;EAAC9I,QAAA,CAAA6I,oBAAA,GAAAA,oBAAA;EAEM,SAASI,qBAAqBA,CAACtH,aAAsB,EAAwC;IAAA,IAAtC7B,IAAI,GAAA+B,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,oBAAoB;IACxF,IAAIF,aAAa,CAACQ,WAAW,CAACrC,IAAI,CAAC,EAAE;MACpC,OAAO,IAAI;IACZ;IACA,OAAO,KAAK;EACb;EAACE,QAAA,CAAAiJ,qBAAA,GAAAA,qBAAA;EAEM,SAASC,kBAAkBA,CAACJ,KAAqB,EAAEnH,aAAsB,EAAqC;IAAA,IAAnC7B,IAAI,GAAA+B,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,oBAAoB;IAC5G,IAAI,CAACF,aAAa,CAACQ,WAAW,CAACrC,IAAI,CAAC,EAAE;MACrC6B,aAAa,CAACwH,WAAW,CAACrJ,IAAI,EAAEgJ,KAAK,CAAC;IACvC;EACD;EAAC9I,QAAA,CAAAkJ,kBAAA,GAAAA,kBAAA;EAEM,SAASE,yBAAyBA,CAACzH,aAAsB,EAA6D;IAAA,IAA3D7B,IAAI,GAAA+B,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,oBAAoB;IAC5F,MAAMwH,QAAQ,GAAG1H,aAAa,CAAC2H,SAAS,CAACxJ,IAAI,CAAC;IAC9C,MAAMyJ,sBAAsB,GAAGF,QAAQ,CAACG,IAAI,CAAEnK,OAAqB,IAAK;MACvE,OAAOA,OAAO,EAAEiC,OAAO,CAAC,CAAC,CAAC,EAAEhC,EAAE,KAAK,iBAAiB;IACrD,CAAC,CAAC;IACF,IAAIiK,sBAAsB,EAAE;MAC3B,OAAOA,sBAAsB,CAACjI,OAAO,CAAC,CAAC,CAAC,CAACqC,KAAK;IAC/C;IACA,OAAO7B,SAAS;EACjB;EAAC9B,QAAA,CAAAoJ,yBAAA,GAAAA,yBAAA;EAEM,SAAS9C,iBAAiBA,CAAC3E,aAAsB,EAAEI,aAAwB,EAAqC;IAAA,IAAnCjC,IAAI,GAAA+B,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,oBAAoB;IAC9G,MAAM4H,eAAe,GAAGvH,SAAS,CAACH,aAAa,CAACV,OAAO,CAAC,CAAC,CAAC;IAC1DM,aAAa,CAACwH,WAAW,CAACrJ,IAAI,EAAE2J,eAAe,CAAC;EACjD;EAACzJ,QAAA,CAAAsG,iBAAA,GAAAA,iBAAA;EAEM,SAASoD,+BAA+BA,CAACC,KAA0B,EAAE5I,aAA4B,EAAuB;IAC9H4I,KAAK,CAACvK,OAAO,CAAC,UAAUwK,IAAI,EAAE;MAC7BA,IAAI,CAACC,IAAI,GAAG9I,aAAa,CAACE,OAAO,CAAC2I,IAAI,CAACC,IAAI,CAAC;MAC5CD,IAAI,CAACE,WAAW,GAAG/I,aAAa,CAACE,OAAO,CAAC2I,IAAI,CAACE,WAAW,CAAC;MAC1D,IAAIF,IAAI,CAACG,KAAK,EAAE;QACfH,IAAI,CAACG,KAAK,CAAC3K,OAAO,CAAC,UAAU4K,KAAK,EAAE;UACnCA,KAAK,CAACH,IAAI,GAAG9I,aAAa,CAACE,OAAO,CAAC+I,KAAK,CAACH,IAAI,CAAC;QAC/C,CAAC,CAAC;MACH;IACD,CAAC,CAAC;IAEF,OAAOF,KAAK;EACb;EAAC3J,QAAA,CAAA0J,+BAAA,GAAAA,+BAAA;EAAA,OAAA1J,QAAA;AAAA","ignoreList":[],"file":"Designtime.helper-dbg.js"}