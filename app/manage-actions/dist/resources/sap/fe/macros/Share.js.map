{"version":3,"file":"Share.js","names":["enumMSTeamsOption","COLLABORATION_MSTEAMS_CARD","COLLABORATION_MSTEAMS_TAB","COLLABORATION_MSTEAMS_CHAT","enumShareOption","SEND_EMAIL","SHARE_JAM","SAVE_AS_TILE","MS_TEAMS_GROUP","SHARE_COLLABORATION_MANAGER","Share","_dec","defineUI5Class","_dec2","property","type","_dec3","aggregation","defaultClass","ShareOptions","isDefault","_dec4","MsTeamsOptions","_dec5","defineReference","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_class","_class2","_BuildingBlock","idOrProps","props","_this","shareAPIId","id","undefined","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","_ownerComponent","content","createContent","getAppComponent","_initializeMenuItems","async","view","appComponent","isTeamsModeActive","getEnvironmentCapabilities","getCapabilities","Collaboration","default","CollaborationHelper","__ui5_require_async","menuButton","current","unbindProperty","setVisible","controller","getController","shellServices","getShellServices","isPluginInfoStable","waitForPluginsLoad","internalButton","getAggregation","attachEventOnce","_blockInternalConfig","_getShareBlockConfig","_addMenuItems","setShareOptionsVisibility","_addSendEmailOption","_addShellBasedMenuItems","shareOptions","showSendEmail","menu","addItem","_jsx","MenuItem","ref","sendEmailMenuItem","text","getTranslatedText","icon","press","share","_triggerEmail","hasUshell","hasUShell","_addShareViaJAMOption","_addMSTeamsOptions","_addCollaborationManagerOption","_addSaveAsTileOption","collaborativeToolsService","getCollaborativeToolsService","collaborationOption","getCollaborationManagerOption","showCollaborationManager","menuItem","shareAsCollaborationManager","_collaborationManagerButtonPress","event","FESRHelper","setSemanticStepname","fesrStepName","err","message","Error","String","Log","error","collaborationCallBack","clickedMenuItem","getSource","CommonUtils","getTargetView","_adaptShareMetadata","shareInfoModel","getModel","shareInfo","getData","collaborationInfo","appTitle","url","hasJam","isJamActive","shareViaJAMMenuItem","_triggerShareToJam","showMsTeamsOptions","shareCollaborationOptions","getTeamsCollabOptionsViaShare","isShareAsCardEnabled","_getIsShareAsCardEnabled","menuItemSettings","_getMsTeamsMenuItemSettings","subOptions","items","menuItemKey","Array","isArray","length","key","_addMsTeamsMenuItem","AddBookmarkButton","addBookmarkButton","getEnabled","saveAsTileMenuItem","getText","getIcon","_saveAsTile","children","dependents","destroy","showShareAsCard","msTeamsOptions","enableCard","Boolean","BindingParser","complexParser","_getMsTeamsSubOptions","collaborationMenuItemPress","CustomData","value","_getMenuItemReference","customData","attachPress","reduce","menuItems","subOption","subMenuItem","collaborationData","data","teamsHelperService","getCollaborationServices","oTeamsHelperService","isFeatureFlagEnabled","cardDefinition","getCardDefinition","cardId","shellServiceHelper","semanticObject","action","parseShellHash","document","location","hash","reason","info","optionKeys","Object","keys","visibleBindingExps","bindingToolkitExps","option","exp","_getShareOptionVisibilityExpression","_setShareOptionVisibility","shareBlockVisibleExp","or","cmdExecution","_bindUIVisibility","shareAsCardMenuItem","shareViaChatMenuItem","shareAsTabMenuItem","msTeamsGroupMenuItem","optionMenuItemRef","constant","_getMSTeamsShareOptionVisibility","_getCollaborationOptionExpression","resolveBindingString","internalOption","isConstant","and","msTeamsConfigExp","_getShowMsTeamsOptionsExpression","msTeamsOptionsValue","allMSTeamsOptionsExps","bindingToolkitExp","msTeamsOption","msTeamOptionExp","optionExp","internalOptionExp","_getShareAsCardVisibility","shareAsCardOptionRef","expShowMSTeamsOptions","expShowShareAsCard","not","UI","IsEditable","msTeamsOptionRef","expression","menuItemRef","item","compiledExp","compileExpression","startsWith","endsWith","parsedExp","bindProperty","viewData","getViewData","viewShareConfigs","feAppShareConfigs","getManifestEntry","app","_getOptionBlockConfig","teams","asCard","feAppSetting","viewLevelSetting","feAppExp","viewLevelExp","ShareAPI","OverflowToolbarMenuButton","tooltip","Menu","getPageController","getView","addDependent","CommandExecution","command","execute","getMenu","openBy","isInitialized","catch","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./Share.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression, EmbeddedUI5BindingExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, isConstant, not, or, resolveBindingString } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineReference, defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport type { IShellServices } from \"sap/fe/core/services/ShellServicesFactory\";\nimport Menu from \"sap/m/Menu\";\nimport type MenuButton from \"sap/m/MenuButton\";\nimport type { $MenuItemSettings } from \"sap/m/MenuItem\";\nimport MenuItem from \"sap/m/MenuItem\";\nimport type { CollaborationOptionKey, CollaborationOptions } from \"sap/suite/ui/commons/collaboration/TeamsHelperService\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport FESRHelper from \"sap/ui/performance/trace/FESRHelper\";\n\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport type { ViewData } from \"sap/fe/core/services/TemplatedViewServiceFactory\";\nimport ShareOptions from \"sap/fe/macros/share/ShareOptions\";\nimport OverflowToolbarMenuButton from \"sap/m/OverflowToolbarMenuButton\";\nimport BindingParser from \"sap/ui/base/BindingParser\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport MsTeamsOptions from \"./share/MsTeamsOptions\";\nimport ShareAPI from \"./share/ShareAPI\";\n\n// MS Teams options are not public via Share building block.\n// So, 'showMsTeamsOptions' is internal and shall be only picked from template manifest.\ntype InternalShareOptions = PropertiesOf<ShareOptions>;\n\ntype ShareOptionKey =\n\t| CollaborationOptionKey\n\t| \"SEND_EMAIL\"\n\t| \"SHARE_JAM\"\n\t| \"SAVE_AS_TILE\"\n\t| \"MS_TEAMS_GROUP\"\n\t| \"SHARE_COLLABORATION_MANAGER\";\n\nconst enumMSTeamsOption: {\n\t[key in CollaborationOptionKey]: CollaborationOptionKey;\n} = {\n\tCOLLABORATION_MSTEAMS_CARD: \"COLLABORATION_MSTEAMS_CARD\",\n\tCOLLABORATION_MSTEAMS_TAB: \"COLLABORATION_MSTEAMS_TAB\",\n\tCOLLABORATION_MSTEAMS_CHAT: \"COLLABORATION_MSTEAMS_CHAT\"\n};\n\nconst enumShareOption: {\n\t[key in ShareOptionKey]: ShareOptionKey;\n} = {\n\t...enumMSTeamsOption,\n\t...{\n\t\tSEND_EMAIL: \"SEND_EMAIL\",\n\t\tSHARE_JAM: \"SHARE_JAM\",\n\t\tSAVE_AS_TILE: \"SAVE_AS_TILE\",\n\t\tMS_TEAMS_GROUP: \"MS_TEAMS_GROUP\",\n\t\tSHARE_COLLABORATION_MANAGER: \"SHARE_COLLABORATION_MANAGER\"\n\t}\n};\n\ntype ConfigOptions = InternalShareOptions & PropertiesOf<MsTeamsOptions>;\n\n/**\n * Building block used to create the ‘Share’ functionality.\n * <br>\n * Please note that the 'Share in SAP Jam' option is only available on platforms that are integrated with SAP Jam.\n * <br>\n * If you are consuming this macro in an environment where the SAP Fiori launchpad is not available, then the 'Save as Tile' option is not visible.\n *\n *\n * Usage example:\n * <pre>\n * &lt;macros:Share\n * id=\"someID\"\n * visible=\"true\"\n * /&gt;\n * </pre>\n * {@link demo:sap/fe/core/fpmExplorer/index.html#/buildingBlocks/features/shareDefault Overview of Building Blocks}\n * @hideconstructor\n * @public\n * @since 1.93.0\n */\n@defineUI5Class(\"sap.fe.macros.Share\")\nexport default class Share extends BuildingBlock<ShareAPI> {\n\t@property({ type: \"string\" })\n\tpublic shareAPIId?: string;\n\n\t/**\n\t * Supported Share options {@link sap.fe.macros.share.ShareOptions}.\n\t * @public\n\t */\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.share.ShareOptions\",\n\t\tdefaultClass: ShareOptions,\n\t\tisDefault: true\n\t})\n\tpublic shareOptions?: ShareOptions;\n\n\t/**\n\t * Supported Microsoft Teams options.\n\t */\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.share.MsTeamsOptions\",\n\t\tdefaultClass: MsTeamsOptions\n\t})\n\tpublic msTeamsOptions?: MsTeamsOptions;\n\n\t@defineReference()\n\tmenuButton!: Ref<MenuButton>;\n\n\t@defineReference()\n\tcmdExecution!: Ref<CommandExecution>;\n\n\t@defineReference()\n\tmenu!: Ref<Menu>;\n\n\t@defineReference()\n\tsaveAsTileMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareAsCollaborationManager!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareViaJAMMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tsendEmailMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareAsCardMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareViaChatMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareAsTabMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tmsTeamsGroupMenuItem!: Ref<MenuItem>;\n\n\tpublic isInitialized?: Promise<void>;\n\n\tprivate _blockInternalConfig!: ConfigOptions;\n\n\tconstructor(idOrProps: string | (PropertiesOf<Share> & $ControlSettings), props?: PropertiesOf<Share> & $ControlSettings) {\n\t\tlet shareAPIId: string | undefined;\n\t\tif (typeof idOrProps !== \"string\") {\n\t\t\tprops = idOrProps;\n\t\t\tshareAPIId = props.id;\n\t\t} else {\n\t\t\tshareAPIId = idOrProps;\n\t\t}\n\t\tprops ??= {};\n\t\tprops.shareAPIId = shareAPIId;\n\t\tprops.id = undefined;\n\t\tsuper(undefined, props);\n\t}\n\n\tonMetadataAvailable(_ownerComponent: TemplateComponent): void {\n\t\tsuper.onMetadataAvailable(_ownerComponent);\n\t\tthis.content = this.createContent(_ownerComponent.getAppComponent());\n\t}\n\n\t/**\n\t * Retrieves the share option from the shell configuration asynchronously and prepare the content of the menu button.\n\t * Options order are:\n\t * - Send as Email\n\t * - Share as Jam (if available)\n\t * - Teams options (if available)\n\t * - Save as tile.\n\t * @param view The view this building block is used in\n\t * @param appComponent The AppComponent instance\n\t */\n\tasync _initializeMenuItems(view: View, appComponent: AppComponent): Promise<void> {\n\t\tlet isTeamsModeActive = false;\n\t\tif (appComponent.getEnvironmentCapabilities().getCapabilities().Collaboration) {\n\t\t\tconst { default: CollaborationHelper } = await import(\"sap/suite/ui/commons/collaboration/CollaborationHelper\");\n\t\t\tisTeamsModeActive = await CollaborationHelper.isTeamsModeActive();\n\t\t}\n\n\t\tif (isTeamsModeActive) {\n\t\t\t//need to clear the visible property bindings otherwise when the binding value changes then it will set back the visible to the resolved value\n\t\t\tthis.menuButton.current?.unbindProperty(\"visible\", true);\n\t\t\tthis.menuButton.current?.setVisible(false);\n\t\t\treturn;\n\t\t}\n\t\tconst controller = view.getController() as PageController;\n\t\tconst shellServices = appComponent.getShellServices();\n\t\tconst isPluginInfoStable = await shellServices.waitForPluginsLoad();\n\t\tif (!isPluginInfoStable) {\n\t\t\t// In case the plugin info is not yet available we need to do this computation again on the next button click\n\t\t\tconst internalButton = this.menuButton.current?.getAggregation(\"_control\") as ManagedObject;\n\t\t\tinternalButton?.attachEventOnce(\"press\", {}, () => this._initializeMenuItems, this);\n\t\t}\n\n\t\tthis._blockInternalConfig = this._getShareBlockConfig(view);\n\n\t\tawait this._addMenuItems(controller, shellServices);\n\t\tthis.setShareOptionsVisibility();\n\t}\n\n\t/**\n\t * Add share options as menu items to the share button.\n\t * @param controller Page controller\n\t * @param shellServices Shell Services\n\t */\n\tasync _addMenuItems(controller: PageController, shellServices: IShellServices): Promise<void> {\n\t\tthis._addSendEmailOption(controller);\n\t\tawait this._addShellBasedMenuItems(controller, shellServices);\n\t}\n\n\t/**\n\t * Add send email option to menu button.\n\t * @param controller Page controller\n\t */\n\t_addSendEmailOption(controller: PageController): void {\n\t\tif (this.shareOptions?.showSendEmail ?? true) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.sendEmailMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_SEMANTIC_CONTROL_SEND_EMAIL\")}\n\t\t\t\t\ticon={\"sap-icon://email\"}\n\t\t\t\t\tpress={async (): Promise<void> => controller.share._triggerEmail()}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add UShell based share options.\n\t * @param controller Page controller\n\t * @param shellServices Shell Services\n\t */\n\tasync _addShellBasedMenuItems(controller: PageController, shellServices: IShellServices): Promise<void> {\n\t\tconst hasUshell = shellServices.hasUShell();\n\t\tif (hasUshell) {\n\t\t\t// share via JAM\n\t\t\tthis._addShareViaJAMOption(controller, shellServices);\n\n\t\t\t// Prepare teams menu items\n\t\t\tawait this._addMSTeamsOptions(controller);\n\n\t\t\t// Prepare Collaboration Manager Options\n\t\t\tawait this._addCollaborationManagerOption(controller);\n\n\t\t\t// Save as Tile\n\t\t\tawait this._addSaveAsTileOption(controller);\n\t\t}\n\t}\n\n\t/**\n\t * Add CM option.\n\t * @param controller The controller instance\n\t * @returns MenuItems\n\t */\n\tasync _addCollaborationManagerOption(controller: PageController): Promise<void> {\n\t\ttry {\n\t\t\tconst collaborativeToolsService = controller.getAppComponent().getCollaborativeToolsService();\n\t\t\tconst collaborationOption = await collaborativeToolsService.getCollaborationManagerOption();\n\t\t\tif (collaborationOption && (this.shareOptions?.showCollaborationManager ?? false)) {\n\t\t\t\tconst menuItem = (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tref={this.shareAsCollaborationManager}\n\t\t\t\t\t\ttext={collaborationOption.text}\n\t\t\t\t\t\ticon={collaborationOption.icon}\n\t\t\t\t\t\tpress={async (event: UI5Event<{}, MenuItem>): Promise<void> =>\n\t\t\t\t\t\t\tthis._collaborationManagerButtonPress(collaborationOption.press, event)\n\t\t\t\t\t\t}\n\t\t\t\t\t></MenuItem>\n\t\t\t\t);\n\t\t\t\tFESRHelper.setSemanticStepname(menuItem, \"press\", collaborationOption.fesrStepName);\n\t\t\t\tthis?.menu?.current?.addItem(menuItem);\n\t\t\t}\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(`FE : Adding Collaboration Manager Option : ${message}`);\n\t\t}\n\t}\n\n\tasync _collaborationManagerButtonPress(collaborationCallBack: Function, event: UI5Event<{}, MenuItem>): Promise<void> {\n\t\tconst clickedMenuItem = event.getSource();\n\n\t\tconst view: View = CommonUtils.getTargetView(clickedMenuItem);\n\t\tconst controller: PageController = view.getController() as PageController;\n\t\tawait controller.share._adaptShareMetadata();\n\t\tconst shareInfoModel = view.getModel(\"shareInfo\") as JSONModel | undefined;\n\n\t\tif (shareInfoModel) {\n\t\t\tconst shareInfo = shareInfoModel.getData();\n\t\t\tconst { collaborationInfo } = shareInfo;\n\t\t\tcollaborationCallBack(collaborationInfo.appTitle, collaborationInfo.url);\n\t\t}\n\t}\n\n\t/**\n\t * Add share via JAM option.\n\t * @param controller Page controller\n\t * @param shellServices Shell Services\n\t */\n\t_addShareViaJAMOption(controller: PageController, shellServices: IShellServices): void {\n\t\tconst hasJam = !!shellServices.isJamActive?.();\n\t\tif (hasJam) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.shareViaJAMMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_COMMON_SAPFE_SHARE_JAM\")}\n\t\t\t\t\ticon={\"sap-icon://share-2\"}\n\t\t\t\t\tpress={async (): Promise<void> => controller.share._triggerShareToJam()}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add options to share via Microsoft Teams.\n\t * @param controller PageController\n\t */\n\tasync _addMSTeamsOptions(controller: PageController): Promise<void> {\n\t\ttry {\n\t\t\tif (this._blockInternalConfig?.showMsTeamsOptions === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst collaborativeToolsService = controller.getAppComponent().getCollaborativeToolsService();\n\t\t\tconst shareCollaborationOptions = await collaborativeToolsService.getTeamsCollabOptionsViaShare({\n\t\t\t\tisShareAsCardEnabled: this._getIsShareAsCardEnabled()\n\t\t\t});\n\n\t\t\tif (!shareCollaborationOptions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const collaborationOption of shareCollaborationOptions) {\n\t\t\t\tconst menuItemSettings: $MenuItemSettings = this._getMsTeamsMenuItemSettings(collaborationOption);\n\t\t\t\tconst subOptions = menuItemSettings.items;\n\t\t\t\t// Multiple sub options are grouped into single teams group menu item.\n\t\t\t\tconst menuItemKey =\n\t\t\t\t\tArray.isArray(subOptions) && subOptions.length ? enumShareOption.MS_TEAMS_GROUP : collaborationOption.key;\n\n\t\t\t\tthis._addMsTeamsMenuItem(menuItemSettings, menuItemKey, collaborationOption.fesrStepName);\n\t\t\t}\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(`FE : Buildingblock : Share : adding MS teams options : ${message}`);\n\t\t}\n\t}\n\n\t/**\n\t * Add save as tile option.\n\t * @param controller Page controller\n\t */\n\tasync _addSaveAsTileOption(controller: PageController): Promise<void> {\n\t\ttry {\n\t\t\t// set save as tile\n\t\t\t// for now we need to create addBookmarkButton to use the save as tile feature.\n\t\t\t// In the future save as tile should be available as an API or a MenuItem so that it can be added to the Menu button.\n\t\t\t// This needs to be discussed with AddBookmarkButton team.\n\t\t\t// Included in a hasUshell branch\n\t\t\tconst { default: AddBookmarkButton } = await import(\"sap/ushell/ui/footerbar/AddBookmarkButton\");\n\t\t\tconst addBookmarkButton = new AddBookmarkButton();\n\t\t\tif (addBookmarkButton.getEnabled()) {\n\t\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tref={this.saveAsTileMenuItem}\n\t\t\t\t\t\ttext={addBookmarkButton.getText()}\n\t\t\t\t\t\ticon={addBookmarkButton.getIcon()}\n\t\t\t\t\t\tpress={async (): Promise<void> => controller.share._saveAsTile(this.saveAsTileMenuItem.current!)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ dependents: [addBookmarkButton] }}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\taddBookmarkButton.destroy();\n\t\t\t}\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(`FE : Buildingblock : Share : adding Save as tile option : ${message}`);\n\t\t}\n\t}\n\n\t/**\n\t * Get isShareAsCardEnabled to fetch supported collaboration options.\n\t * @returns Boolean.\n\t */\n\t_getIsShareAsCardEnabled(): boolean {\n\t\tconst showShareAsCard = this.msTeamsOptions?.enableCard ?? false;\n\n\t\tif (typeof showShareAsCard === \"boolean\") {\n\t\t\treturn showShareAsCard;\n\t\t} else if (typeof showShareAsCard === \"string\") {\n\t\t\t// \"true\" or a binding expression\n\t\t\ttry {\n\t\t\t\treturn showShareAsCard === \"true\" || Boolean(BindingParser.complexParser(showShareAsCard));\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(err as string);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get Menu Item settings for main MS teams option.\n\t * @param collaborationOption Root Collaboration Option\n\t * @returns MenuItemSettings\n\t */\n\t_getMsTeamsMenuItemSettings(collaborationOption: CollaborationOptions): $MenuItemSettings {\n\t\tconst items = this._getMsTeamsSubOptions(collaborationOption?.subOptions);\n\t\tconst menuItemSettings: $MenuItemSettings = {\n\t\t\ttext: collaborationOption.text,\n\t\t\ticon: collaborationOption.icon,\n\t\t\titems\n\t\t};\n\n\t\tif (items.length === 0) {\n\t\t\t// if there are no sub option then the main option should be clickable\n\t\t\t// so add a press handler.\n\t\t\tmenuItemSettings.press = async (event: UI5Event<{}, MenuItem>): Promise<void> => this.collaborationMenuItemPress(event);\n\t\t\tmenuItemSettings[\"customData\"] = new CustomData({\n\t\t\t\tkey: \"collaborationData\",\n\t\t\t\tvalue: collaborationOption\n\t\t\t});\n\t\t}\n\t\treturn menuItemSettings;\n\t}\n\n\t/**\n\t * Add main MS Teams Menu Item to the Share building block menu.\n\t * @param menuItemSettings Menu Item settings\n\t * @param menuItemKey MS teams option key\n\t * @param fesrStepName Step name\n\t */\n\t_addMsTeamsMenuItem(menuItemSettings: $MenuItemSettings, menuItemKey?: ShareOptionKey, fesrStepName?: string): void {\n\t\tconst menuItem: MenuItem = (\n\t\t\t<MenuItem\n\t\t\t\tref={this._getMenuItemReference(menuItemKey)}\n\t\t\t\ttext={menuItemSettings.text}\n\t\t\t\ticon={menuItemSettings.icon}\n\t\t\t\tcustomData={menuItemSettings.customData}\n\t\t\t\titems={menuItemSettings.items}\n\t\t\t></MenuItem>\n\t\t);\n\t\tif (menuItemSettings.press) {\n\t\t\t//\n\t\t\tmenuItem.attachPress(menuItemSettings.press);\n\t\t\tif (fesrStepName) {\n\t\t\t\tFESRHelper.setSemanticStepname(menuItem, \"press\", fesrStepName);\n\t\t\t}\n\t\t}\n\t\tthis?.menu?.current?.addItem(menuItem);\n\t}\n\n\t/**\n\t * Get Menu Items corresponding to MS teams sub options.\n\t * @param subOptions Array of collaboration options\n\t * @returns MenuItems\n\t */\n\t_getMsTeamsSubOptions(subOptions?: CollaborationOptions[]): MenuItem[] {\n\t\tif (!Array.isArray(subOptions)) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn subOptions.reduce((menuItems: MenuItem[], subOption: CollaborationOptions) => {\n\t\t\tconst subMenuItem = (\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this._getMenuItemReference(subOption.key)}\n\t\t\t\t\ttext={subOption.text}\n\t\t\t\t\ticon={subOption.icon}\n\t\t\t\t\tpress={async (event: UI5Event<{}, MenuItem>): Promise<void> => this.collaborationMenuItemPress(event)}\n\t\t\t\t\tcustomData={\n\t\t\t\t\t\tnew CustomData({\n\t\t\t\t\t\t\tkey: \"collaborationData\",\n\t\t\t\t\t\t\tvalue: subOption\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t></MenuItem>\n\t\t\t);\n\t\t\tif (subOption.fesrStepName) {\n\t\t\t\tFESRHelper.setSemanticStepname(subMenuItem, \"press\", subOption.fesrStepName);\n\t\t\t}\n\t\t\treturn [...menuItems, subMenuItem];\n\t\t}, []);\n\t}\n\n\t/**\n\t * Press handler for collaboration menu items.\n\t *`\n\t * @param event Event object\n\t */\n\tasync collaborationMenuItemPress(event: UI5Event<{}, MenuItem>): Promise<void> {\n\t\tconst clickedMenuItem = event.getSource();\n\n\t\tconst view: View = CommonUtils.getTargetView(clickedMenuItem);\n\t\tconst controller: PageController = view.getController() as PageController;\n\t\tawait controller.share._adaptShareMetadata();\n\t\tconst shareInfoModel = view.getModel(\"shareInfo\") as JSONModel | undefined;\n\n\t\tif (shareInfoModel) {\n\t\t\tconst shareInfo = shareInfoModel.getData();\n\t\t\tconst { collaborationInfo } = shareInfo;\n\n\t\t\tconst collaborationData = clickedMenuItem.data(\"collaborationData\");\n\t\t\tconst collaborativeToolsService = controller.getAppComponent().getCollaborativeToolsService();\n\t\t\tconst teamsHelperService = (await collaborativeToolsService.getCollaborationServices()).oTeamsHelperService;\n\t\t\tif (collaborationData[\"key\"] === enumMSTeamsOption.COLLABORATION_MSTEAMS_CARD) {\n\t\t\t\tconst isShareAsCardEnabled = teamsHelperService.isFeatureFlagEnabled();\n\t\t\t\tconst cardDefinition = isShareAsCardEnabled ? await controller.share.getCardDefinition() : undefined;\n\t\t\t\tlet cardId: string | undefined;\n\t\t\t\tif (cardDefinition) {\n\t\t\t\t\tconst shellServiceHelper = controller.getAppComponent().getShellServices();\n\t\t\t\t\tconst { semanticObject, action } = shellServiceHelper.parseShellHash(document.location.hash);\n\t\t\t\t\tcardId = `${semanticObject}_${action}`;\n\t\t\t\t} else {\n\t\t\t\t\tconst reason = !isShareAsCardEnabled\n\t\t\t\t\t\t? \"Feature flag disabled in collaboration teams helper\"\n\t\t\t\t\t\t: \"Card definition was not created\";\n\t\t\t\t\tLog.info(`FE V4 : Share block : share as Card : ${reason}`);\n\t\t\t\t}\n\t\t\t\tcollaborationInfo[\"cardManifest\"] = cardDefinition;\n\t\t\t\tcollaborationInfo[\"cardId\"] = cardId;\n\t\t\t}\n\t\t\tteamsHelperService.share(collaborationData, collaborationInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Set the visibility of individual UI elements of the Share building block. Like, MenuItems, MenuButton and Command execution.\n\t */\n\tsetShareOptionsVisibility(): void {\n\t\tconst optionKeys = Object.keys(enumShareOption) as ShareOptionKey[];\n\t\tconst visibleBindingExps = optionKeys.reduce((bindingToolkitExps: BindingToolkitExpression<boolean>[], option: ShareOptionKey) => {\n\t\t\tconst exp = this._getShareOptionVisibilityExpression(option);\n\t\t\tthis._setShareOptionVisibility(option, exp);\n\t\t\treturn [...bindingToolkitExps, exp];\n\t\t}, []);\n\t\tconst shareBlockVisibleExp = or(...visibleBindingExps);\n\t\tif (this.menuButton.current && this.cmdExecution.current) {\n\t\t\tthis._bindUIVisibility(this.menuButton.current, shareBlockVisibleExp);\n\t\t\tthis._bindUIVisibility(this.cmdExecution.current, shareBlockVisibleExp);\n\t\t}\n\t}\n\n\t/**\n\t * Get Menu Item reference of the corresponding Share option.\n\t *`\n\t * @param option Share option key\n\t * @returns Reference to the Menu Item\n\t */\n\t_getMenuItemReference(option?: ShareOptionKey): Ref<MenuItem> | undefined {\n\t\tlet ref: Ref<MenuItem> | undefined;\n\t\tswitch (option) {\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CARD:\n\t\t\t\tref = this.shareAsCardMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CHAT:\n\t\t\t\tref = this.shareViaChatMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_TAB:\n\t\t\t\tref = this.shareAsTabMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SEND_EMAIL:\n\t\t\t\tref = this.sendEmailMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SHARE_JAM:\n\t\t\t\tref = this.shareViaJAMMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SAVE_AS_TILE:\n\t\t\t\tref = this.saveAsTileMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.MS_TEAMS_GROUP:\n\t\t\t\tref = this.msTeamsGroupMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SHARE_COLLABORATION_MANAGER:\n\t\t\t\tref = this.shareAsCollaborationManager;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn ref;\n\t}\n\n\t/**\n\t * Get the visibility expression of share option based on the building block configuration.\n\t * @param option Share option name of the visible expression that needs to be fetched.\n\t * @returns Binding toolkit expression.\n\t */\n\t_getShareOptionVisibilityExpression(option?: ShareOptionKey): BindingToolkitExpression<boolean> {\n\t\tconst optionMenuItemRef = this._getMenuItemReference(option);\n\t\tif (!optionMenuItemRef?.current) {\n\t\t\treturn constant(false);\n\t\t}\n\n\t\tlet exp: BindingToolkitExpression<boolean>;\n\t\tswitch (option) {\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CARD:\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CHAT:\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_TAB:\n\t\t\t\texp = this._getMSTeamsShareOptionVisibility(option);\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SHARE_COLLABORATION_MANAGER:\n\t\t\t\texp = this._getCollaborationOptionExpression();\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SEND_EMAIL: {\n\t\t\t\tconst showSendEmail = resolveBindingString<boolean>(this.shareOptions?.showSendEmail ?? true, \"boolean\");\n\t\t\t\tconst internalOption = resolveBindingString(\n\t\t\t\t\tthis._blockInternalConfig.showSendEmail ?? true,\n\t\t\t\t\t\"boolean\"\n\t\t\t\t) as unknown as BindingToolkitExpression<boolean>;\n\t\t\t\tif (isConstant(internalOption) && internalOption.value === false) {\n\t\t\t\t\texp = constant(false);\n\t\t\t\t} else if (isConstant(internalOption) && internalOption.value === true) {\n\t\t\t\t\texp = (this.shareOptions?.showSendEmail ?? true) as unknown as EmbeddedUI5BindingExpression<boolean>;\n\t\t\t\t} else {\n\t\t\t\t\texp = and(showSendEmail, internalOption) as unknown as EmbeddedUI5BindingExpression<boolean>;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enumShareOption.SHARE_JAM:\n\t\t\tcase enumShareOption.SAVE_AS_TILE: {\n\t\t\t\t// No overrides for Share via Jam and Save as tile yet.\n\t\t\t\texp = constant(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enumShareOption.MS_TEAMS_GROUP: {\n\t\t\t\tconst msTeamsConfigExp = this._getShowMsTeamsOptionsExpression();\n\t\t\t\tconst msTeamsOptionsValue = Object.keys(enumMSTeamsOption) as ShareOptionKey[];\n\t\t\t\tconst allMSTeamsOptionsExps = msTeamsOptionsValue.reduce(\n\t\t\t\t\t(bindingToolkitExp: BindingToolkitExpression<boolean>[], msTeamsOption: ShareOptionKey) => {\n\t\t\t\t\t\tconst msTeamOptionExp = this._getMSTeamsShareOptionVisibility(msTeamsOption);\n\t\t\t\t\t\treturn [...bindingToolkitExp, msTeamOptionExp];\n\t\t\t\t\t},\n\t\t\t\t\t[] as BindingToolkitExpression<boolean>[]\n\t\t\t\t);\n\t\t\t\texp = and(msTeamsConfigExp, or(...allMSTeamsOptionsExps));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\texp = constant(false);\n\t\t}\n\n\t\treturn exp;\n\t}\n\n\t_getCollaborationOptionExpression(): BindingToolkitExpression<boolean> {\n\t\tconst showCollaborationManager = this.shareOptions?.showCollaborationManager ?? false;\n\t\tconst optionExp = resolveBindingString<boolean>(showCollaborationManager, \"boolean\");\n\t\tconst internalOption = this._blockInternalConfig.showCollaborationManager ?? true;\n\t\tconst internalOptionExp = resolveBindingString<boolean>(internalOption, \"boolean\");\n\t\treturn and(optionExp, internalOptionExp);\n\t}\n\n\t/**\n\t * Get expression for showMsTeamsOptions share option based on the building block configuration.\n\t * @returns Binding toolkit expression.\n\t */\n\t_getShowMsTeamsOptionsExpression(): BindingToolkitExpression<boolean> {\n\t\tconst internalOption = this._blockInternalConfig.showMsTeamsOptions ?? true;\n\t\treturn resolveBindingString<boolean>(internalOption, \"boolean\");\n\t}\n\n\t/**\n\t * Get binding toolkit expression for share as card visibility.\n\t * @returns Binding toolkit expression.\n\t */\n\t_getShareAsCardVisibility(): BindingToolkitExpression<boolean> {\n\t\tlet exp: BindingToolkitExpression<boolean>;\n\t\tconst shareAsCardOptionRef = this._getMenuItemReference(enumShareOption.COLLABORATION_MSTEAMS_CARD);\n\t\tif (shareAsCardOptionRef?.current) {\n\t\t\tconst expShowMSTeamsOptions = this._getShowMsTeamsOptionsExpression();\n\t\t\tconst showShareAsCard = this.msTeamsOptions?.enableCard ?? true;\n\t\t\tconst optionExp = resolveBindingString<boolean>(showShareAsCard, \"boolean\");\n\t\t\tconst internalOption = this._blockInternalConfig.enableCard ?? true;\n\t\t\tconst internalOptionExp = resolveBindingString<boolean>(internalOption, \"boolean\");\n\t\t\tconst expShowShareAsCard = and(optionExp, internalOptionExp);\n\t\t\texp = and(not(UI.IsEditable), expShowMSTeamsOptions, expShowShareAsCard);\n\t\t} else {\n\t\t\texp = constant(false);\n\t\t}\n\t\treturn exp;\n\t}\n\n\t/**\n\t * Get binding toolkit expression for share option's visibility.\n\t * @param option Share option key\n\t * @returns Binding toolkit expression.\n\t */\n\t_getMSTeamsShareOptionVisibility(option: ShareOptionKey): BindingToolkitExpression<boolean> {\n\t\tif (option === enumShareOption.COLLABORATION_MSTEAMS_CARD) {\n\t\t\treturn this._getShareAsCardVisibility();\n\t\t}\n\t\t// No overrides for Share as Tab and Chat yet.\n\n\t\tconst msTeamsOptionRef = this._getMenuItemReference(option);\n\t\treturn msTeamsOptionRef?.current ? this._getShowMsTeamsOptionsExpression() : constant(false);\n\t}\n\n\t/**\n\t * Set visiblity of individual share option's MenuItem.\n\t * @param option Share option key\n\t * @param expression Visibility binding toolkit expression\n\t */\n\t_setShareOptionVisibility(option: ShareOptionKey, expression: BindingToolkitExpression<boolean>): void {\n\t\tconst menuItemRef = this._getMenuItemReference(option);\n\t\tif (menuItemRef?.current) {\n\t\t\tthis._bindUIVisibility(menuItemRef.current, expression);\n\t\t}\n\t}\n\n\t/**\n\t * Bind the UI element's visibility property.\n\t * @param item UI element\n\t * @param expression Expression to bind.\n\t */\n\t_bindUIVisibility(item: MenuButton | MenuItem | CommandExecution, expression: BindingToolkitExpression<boolean>): void {\n\t\t// NOTE: We need convert the binding toolkit expression to the format that can be consumed by the UI element.\n\t\t// At runtime, we can't use binding toolkit expression or compiled expression directly to bind the visibility or set the visible property or the UI element.\n\t\t// We would need to convert the binding toolkit expression -> UI5 BindingInfo to bind the UI element.\n\t\tconst compiledExp = compileExpression(expression);\n\n\t\tif (compiledExp && compiledExp.startsWith(\"{\") && compiledExp?.endsWith(\"}\")) {\n\t\t\t// Probable binding\n\t\t\ttry {\n\t\t\t\tconst parsedExp = BindingParser.complexParser(compiledExp);\n\t\t\t\titem.bindProperty(\"visible\", parsedExp);\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(err as string);\n\t\t\t}\n\t\t} else if (compiledExp === \"false\") {\n\t\t\t// Statically false\n\t\t\titem.unbindProperty(\"visible\", true);\n\t\t\titem.setVisible(false);\n\t\t}\n\t}\n\n\t_getShareBlockConfig(view: View): ConfigOptions {\n\t\tconst viewData = view.getViewData() as ViewData;\n\t\tconst viewShareConfigs = viewData?.share;\n\t\tconst controller = view.getController() as PageController;\n\t\tconst feAppShareConfigs = controller.getAppComponent().getManifestEntry(\"sap.fe\")?.app?.share;\n\n\t\tconst showSendEmail = this._getOptionBlockConfig(feAppShareConfigs?.showSendEmail, viewShareConfigs?.showSendEmail);\n\t\tconst showCollaborationManager = this._getOptionBlockConfig(\n\t\t\tfeAppShareConfigs?.showCollaborationManager,\n\t\t\tviewShareConfigs?.showCollaborationManager\n\t\t);\n\n\t\tconst showMsTeamsOptions = this._getOptionBlockConfig(\n\t\t\tfeAppShareConfigs?.teams?.showMsTeamsOptions,\n\t\t\tviewShareConfigs?.teams?.showMsTeamsOptions\n\t\t);\n\t\tconst enableCard = this._getOptionBlockConfig(feAppShareConfigs?.teams?.asCard, viewShareConfigs?.teams?.asCard);\n\n\t\treturn { showSendEmail, showMsTeamsOptions, enableCard, showCollaborationManager };\n\t}\n\n\t_getOptionBlockConfig(feAppSetting?: boolean | string, viewLevelSetting?: boolean | string): CompiledBindingToolkitExpression {\n\t\tconst feAppExp = typeof feAppSetting === \"string\" ? resolveBindingString<boolean>(feAppSetting) : constant(feAppSetting ?? true);\n\t\tconst viewLevelExp =\n\t\t\ttypeof viewLevelSetting === \"string\" ? resolveBindingString<boolean>(viewLevelSetting) : constant(viewLevelSetting ?? true);\n\t\treturn compileExpression(and(feAppExp, viewLevelExp));\n\t}\n\n\tcreateContent(appComponent: AppComponent): ShareAPI {\n\t\t// Ctrl+Shift+S is needed for the time being but this needs to be removed after backlog from menu button\n\t\tconst menuButton = (\n\t\t\t<ShareAPI id={this.shareAPIId}>\n\t\t\t\t<OverflowToolbarMenuButton\n\t\t\t\t\ttext={\"{sap.fe.i18n>M_COMMON_SAPFE_ACTION_SHARE}\"}\n\t\t\t\t\tref={this.menuButton}\n\t\t\t\t\ticon={\"sap-icon://action\"}\n\t\t\t\t\ttooltip={\"{sap.fe.i18n>M_COMMON_SAPFE_ACTION_SHARE} (Ctrl+Shift+S)\"}\n\t\t\t\t>\n\t\t\t\t\t<Menu ref={this.menu}></Menu>\n\t\t\t\t</OverflowToolbarMenuButton>\n\t\t\t</ShareAPI>\n\t\t) as ShareAPI;\n\t\tthis.getPageController()\n\t\t\t.getView()\n\t\t\t.addDependent(\n\t\t\t\t<CommandExecution\n\t\t\t\t\tref={this.cmdExecution}\n\t\t\t\t\tcommand=\"Share\"\n\t\t\t\t\texecute={(): void => {\n\t\t\t\t\t\tthis.menuButton.current?.getMenu().openBy(this.menuButton.current, true);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t// The initialization is asynchronous, so we just trigger it and hope for the best :D\n\t\tthis.isInitialized = this._initializeMenuItems(this.getPageController().getView(), appComponent).catch((error) => {\n\t\t\tLog.error(error as string);\n\t\t});\n\t\treturn menuButton;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}