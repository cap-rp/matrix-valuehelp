{"version":3,"names":["ActionParameterDialog","action","parameters","parameterValues","entitySetName","messageHandler","isDialogOpen","buttonLock","actionParameterInfos","parameterModel","JSONModel","$displayMode","actionName","actionHelper","getActionName","metaModel","model","getMetaModel","resourceModel","view","getResourceModel","appComponent","parametersValuesPromise","Promise","resolve","reject","parametersValuesResolve","parametersValuesReject","_exports","_proto","prototype","getParameterEditMode","parameter","annotations","fieldControl","Common","FieldControl","immutable","Core","Immutable","valueOf","computed","Computed","constant","FieldEditMode","ReadOnly","ifElse","isReadOnlyExpression","isDisabledExpression","Disabled","Editable","createFormElement","actionMetaPath","isBound","getMetaPath","contexts","getPath","convertTypes","namespace","name","metaContext","createBindingContext","field","label","Label","getText","toString","streamParameter","isCollection","createMultiField","type","startsWith","getStreamProperty","createFileUploader","createField","_jsxs","_Fragment","children","_jsx","id","generate","text","parameterContext","display","FieldHelper","getAPDialogDisplayFormat","getObject","context","err","Log","warning","MultiValueField","placeholder","UI","Placeholder","items","path","delegate","editMode","width","multipleLines","MultiLineText","required","compileExpression","isActionParameterRequiredExpression","valueHelp","hasValueHelp","undefined","change","e","handleFieldChange","visible","not","equal","getExpressionFromAnnotation","Hidden","ariaLabelledBy","dependents","createParameterDialogValueHelp","MultiValueFieldItem","description","fileAcceptableMediaTypes","AcceptableMediaTypes","acceptedTypes","Array","from","map","join","handleTypeMissmatch","event","fileUploader","getSource","givenType","getParameter","getMimeType","showTypeMismatchDialog","fileMaximumSize","calculateMBfromByte","maxLength","handleFileSizeExceed","showFileSizeExceedDialog","getMaximumFileSize","toFixed","onUploadComplete","displayMessageForFailedUpload","FileUploader","buttonOnly","iconOnly","multiple","tooltip","icon","style","sendXHR","useMultipart","sameFilenameAllowed","uploadOnChange","mimeType","typeMissmatch","maximumFileSize","fileSizeExceed","httpRequestMethod","FileUploaderHttpRequestMethod","Put","uploadComplete","handleFileUploaderChange","Field","payload","retrieveTextFromValueList","value","AnnotationHelper","format","isMultiLineText","ValueHelp","propertyPath","getTargetNavigationPath","getInvolvedDataModelObjects","substring","lastIndexOf","qualifiers","valueHelpQualifier","validateInput","requiresValidation","typeahead","Popover","MTable","caseSensitive","useCaseSensitiveFilterRequests","entityContainer","Capabilities","FilterFunctions","useAsValueHelp","ValueListWithFixedValues","dialog","createFieldVHDialog","VHDialog","fieldPromise","parameterInfo","find","actionParameterInfo","validationPromise","removeMessagesForParameter","parametersValues","hasError","error","ActionRuntime","_addMessageForActionParameter","message","files","getBase64File","getMimeTypePath","getFileNamePath","ContentDisposition","Filename","MediaType","typeReference","properties","property","reader","FileReader","onload","result","split","readAsDataURL","item","messages","Messaging","getMessageModel","getData","controlId","relevantMessages","filter","msg","getControlIds","some","includes","removeMessages","getFormElements","formElements","getDialog","createDialog","dialogContents","dialogContentsWithParameters","actionParameters","slice","OperationParameterFacets","actionParameterGroups","forEach","facet","facetTitle","$Type","hasFieldGroupTarget","fieldGroup","Target","$target","groupedActionParameters","Data","group","push","Value","data","getGroupForm","all","bind","formData","parameterGroup","opFacets","dialogContent","Title","element","opFacet","registerActionParameterInfo","messageStrip","getCustomActionMessageStripText","endButton","Button","press","onCancel","Dialog","title","getTitleText","escapeHandler","draggable","resizable","afterClose","beforeOpen","afterOpen","initialFocus","beginButton","isCreateAction","getBeginButtonLabel","onApply","content","MessageStrip","showIcon","SimpleForm","columnsM","editable","labelSpanL","labelSpanM","binding","actionLabel","key","defaultKey","getOverriddenText","boundActionName","pop","suffixResourceKey","checkIfResourceKeyExists","getObjectBinding","getParameterContext","BusyLocker","lock","validateProperties","unlock","newValuesDictionary","Object","assign","values","getModel","getProperty","paramValue","Key","isNewValue","setProperty","UiModelConstants","DocumentModified","removeTransitionMessages","resetState","unlockDialog","updateDialogBindingContextForError","length","warningContext","infoContext","erroneousCtx","getMessages","getType","MessageType","Warning","Information","Error","contextToUse","setBindingContext","isLocked","FELibrary","Constants","CancelActionDialog","closeDialog","events","onParameterDialogClosed","close","openDialog","CommonUtils","setUserDefaults","setModels","addDependent","setOperationDefaultValues","open","setModel","bindElement","_event","waitForParametersValues","isOpen","getParameterDefaultValue","bindingParameter","operationBinding","parameterModelData","paramName","defaultValue","ParameterDefaultValue","isPathAnnotationExpression","pathForContext","replace","requestSingletonProperty","requestProperty","noPossibleValue","latePropertyError","getManifestFunctionValues","bindingContext","getBindingContext","defaultValuesExtensionFunction","FPMHelper","loadModuleAndCallMethod","getPreDefinedValues","boundFunctionName","DefaultValuesFunction","requestContextObject","functionParams","operations","callBoundFunction","requestObject","contextValues","promises","defaultValues","functionValues","manifestFunctionValues","firstVisibleParameter","getVisible","firstField","focusInfo","getFocusInfo","targetInfo","silent","focus","onParameterDialogOpened","isMultiValue","setParameter","i","parameterName","parameterProvidedValue","hasOwnProperty","setOfFunctionValues","Set","index","size","next","refresh","MessageBox","actions","Action","OK","emphasizedAction","onClose","extensionAPI","getController","getExtensionAPI","contentWidth","destroy"],"sourceRoot":".","sources":["OperationParameterDialog.tsx"],"sourcesContent":["import type { ComplexType, PathAnnotationExpression, PrimitiveType, Property, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport { type Action, type ActionParameter } from \"@sap-ux/vocabularies-types\";\nimport { type PropertyAnnotations_Core } from \"@sap-ux/vocabularies-types/vocabularies/Core_Edm\";\nimport type { DataField, FieldGroupType, ReferenceFacet } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { PathInModelExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tnot,\n\ttype BindingToolkitExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport type { ActionParameterInfo } from \"sap/fe/core/ActionRuntime\";\nimport ActionRuntime from \"sap/fe/core/ActionRuntime\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport type MessageHandler from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport UiModelConstants from \"sap/fe/core/controllerextensions/editFlow/editFlowConstants\";\nimport actionHelper from \"sap/fe/core/controllerextensions/editFlow/operations/actionHelper\";\nimport operations from \"sap/fe/core/controllerextensions/editFlow/operations/facade\";\nimport { convertTypes, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { hasFieldGroupTarget } from \"sap/fe/core/converters/annotations/DataField\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport FELibrary from \"sap/fe/core/library\";\nimport { getTargetNavigationPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { isActionParameterRequiredExpression, isDisabledExpression, isReadOnlyExpression } from \"sap/fe/core/templating/FieldControlHelper\";\nimport { hasValueHelp, isMultiLineText } from \"sap/fe/core/templating/PropertyHelper\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\nimport { requiresValidation, useCaseSensitiveFilterRequests } from \"sap/fe/macros/internal/valuehelp/ValueHelpTemplating\";\nimport type ListReportExtensionAPI from \"sap/fe/templates/ListReport/ExtensionAPI\";\nimport type ObjectPageExtensionAPI from \"sap/fe/templates/ObjectPage/ExtensionAPI\";\nimport Button from \"sap/m/Button\";\nimport type { Dialog$BeforeOpenEvent } from \"sap/m/Dialog\";\nimport Dialog from \"sap/m/Dialog\";\nimport Label from \"sap/m/Label\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport Title from \"sap/ui/core/Title\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport SimpleForm from \"sap/ui/layout/form/SimpleForm\";\nimport type { Field$ChangeEvent } from \"sap/ui/mdc/Field\";\nimport Field from \"sap/ui/mdc/Field\";\nimport type { MultiValueField$ChangeEvent } from \"sap/ui/mdc/MultiValueField\";\nimport MultiValueField from \"sap/ui/mdc/MultiValueField\";\nimport ValueHelp from \"sap/ui/mdc/ValueHelp\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport MultiValueFieldItem from \"sap/ui/mdc/field/MultiValueFieldItem\";\nimport VHDialog from \"sap/ui/mdc/valuehelp/Dialog\";\nimport Popover from \"sap/ui/mdc/valuehelp/Popover\";\nimport MTable from \"sap/ui/mdc/valuehelp/content/MTable\";\nimport type Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport AnnotationHelper from \"sap/ui/model/odata/v4/AnnotationHelper\";\nimport type { default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type {\n\tFileUploader$ChangeEvent,\n\tFileUploader$FileSizeExceedEvent,\n\tFileUploader$TypeMissmatchEvent,\n\tFileUploader$UploadCompleteEvent\n} from \"sap/ui/unified/FileUploader\";\nimport FileUploader from \"sap/ui/unified/FileUploader\";\nimport FileUploaderHttpRequestMethod from \"sap/ui/unified/FileUploaderHttpRequestMethod\";\nimport { displayMessageForFailedUpload, showFileSizeExceedDialog, showTypeMismatchDialog } from \"../internal/helpers/Upload\";\n\ntype ParameterDefaultValue = { paramName: string; value: unknown; latePropertyError?: boolean; noPossibleValue?: boolean };\n\ntype ElementGroup = { facetTitle: PropertyAnnotationValue<string> | undefined; data: ActionParameter[] };\ntype ElementGroupConverted = { facetTitle: PropertyAnnotationValue<string> | undefined; data: DialogContentTypes[] };\n\ntype FormElementType = [Label, Field | MultiValueField];\n\ntype DialogContentTypes = {\n\tformElements: FormElementType;\n\tparameter: ActionParameter;\n};\nexport default class ActionParameterDialog {\n\tprivate parametersValuesPromise: Promise<Record<string, PrimitiveType>>;\n\n\tprivate parametersValuesResolve!: (resolveValue: Record<string, PrimitiveType>) => void;\n\n\tprivate parametersValuesReject!: (error: unknown) => void;\n\n\t// the dialog is considered as closed after the afterClose event has been triggered\n\t// this is asynchronous, so we need to keep track of the dialog state since the message handling is synchronous\n\t// and we need to know if the dialog is open or closed\n\tprivate isDialogOpen = false;\n\n\tprivate dialog: Dialog | undefined;\n\n\tprivate readonly actionName: string;\n\n\tprivate buttonLock = false;\n\n\tprivate readonly metaModel: ODataMetaModel;\n\n\tprivate readonly actionParameterInfos: (ActionParameterInfo & { parameter: ActionParameter })[] = [];\n\n\tprivate readonly parameterModel: JSONModel = new JSONModel({\n\t\t$displayMode: {}\n\t});\n\n\tprivate readonly resourceModel: ResourceModel;\n\n\tconstructor(\n\t\tprivate readonly action: Action,\n\t\tprivate readonly parameters: {\n\t\t\tappComponent: AppComponent;\n\t\t\tcontexts: ODataV4Context[];\n\t\t\tparametersValues: Record<string, PrimitiveType>;\n\t\t\tdefaultValuesExtensionFunction?: string;\n\t\t\tisCreateAction?: boolean;\n\t\t\tlabel?: string;\n\t\t\tmodel: ODataModel;\n\t\t\tview?: FEView;\n\t\t\tevents?: {\n\t\t\t\tonParameterDialogOpened?: () => void;\n\t\t\t\tonParameterDialogClosed?: () => void;\n\t\t\t};\n\t\t},\n\t\tprivate readonly parameterValues: Record<string, unknown>[] | undefined,\n\t\tprivate readonly entitySetName: string | undefined,\n\t\tprivate readonly messageHandler: MessageHandler\n\t) {\n\t\tthis.actionName = actionHelper.getActionName(this.action);\n\t\tthis.metaModel = this.parameters.model.getMetaModel();\n\t\tthis.resourceModel = this.parameters.view ? getResourceModel(this.parameters.view) : getResourceModel(this.parameters.appComponent);\n\t\tthis.parametersValuesPromise = new Promise((resolve, reject) => {\n\t\t\tthis.parametersValuesResolve = resolve;\n\t\t\tthis.parametersValuesReject = reject;\n\t\t});\n\t}\n\n\t/**\n\t * Gets binding expression of the edit mode property for a parameter.\n\t * @param parameter The parameter\n\t * @returns The binding expression.\n\t */\n\tprivate getParameterEditMode(parameter: ActionParameter): BindingToolkitExpression<FieldEditMode> {\n\t\tconst annotations = parameter.annotations,\n\t\t\tfieldControl = annotations.Common?.FieldControl,\n\t\t\timmutable = (annotations.Core as unknown as PropertyAnnotations_Core)?.Immutable?.valueOf(),\n\t\t\tcomputed = (annotations.Core as unknown as PropertyAnnotations_Core)?.Computed?.valueOf();\n\n\t\tif (immutable || computed) {\n\t\t\treturn constant(FieldEditMode.ReadOnly);\n\t\t} else if (fieldControl) {\n\t\t\treturn ifElse(\n\t\t\t\tisReadOnlyExpression(parameter),\n\t\t\t\tFieldEditMode.ReadOnly,\n\t\t\t\tifElse(isDisabledExpression(parameter), FieldEditMode.Disabled, FieldEditMode.Editable)\n\t\t\t);\n\t\t}\n\t\treturn constant(FieldEditMode.Editable);\n\t}\n\n\t/**\n\t * Creates the form element control for a parameter.\n\t * @param parameter The parameter\n\t * @returns The form element control.\n\t */\n\tprivate async createFormElement(parameter: ActionParameter): Promise<FormElementType> {\n\t\tconst actionMetaPath = this.action.isBound\n\t\t\t? `${this.metaModel.getMetaPath(this.parameters.contexts[0].getPath())}/${convertTypes(this.metaModel).namespace}.${\n\t\t\t\t\tthis.action.name\n\t\t\t  }`\n\t\t\t: `/${this.action.name}`;\n\t\tconst metaContext = this.metaModel.createBindingContext(`${actionMetaPath}/${parameter.name}`)!;\n\t\tlet field;\n\t\tlet label = parameter.annotations.Common?.Label\n\t\t\t? this.resourceModel.getText(parameter.annotations.Common.Label.toString())\n\t\t\t: parameter.name;\n\t\tlet streamParameter;\n\t\tif (parameter.isCollection) {\n\t\t\tfield = await this.createMultiField(parameter, metaContext);\n\t\t} else if (!parameter.type.startsWith(\"Edm.\") && this.getStreamProperty(parameter)) {\n\t\t\tstreamParameter = this.getStreamProperty(parameter);\n\t\t\t// calculate label from the stream property within the ComplexType\n\t\t\tlabel = streamParameter?.annotations.Common?.Label\n\t\t\t\t? this.resourceModel.getText(streamParameter.annotations.Common.Label.toString())\n\t\t\t\t: (streamParameter?.name as string);\n\t\t\tfield = this.createFileUploader(parameter);\n\t\t} else {\n\t\t\tfield = await this.createField(parameter, metaContext);\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Label id={generate([\"APD_\", parameter.name, streamParameter?.name, \"Label\"])} text={label} />\n\t\t\t\t{field}\n\t\t\t</>\n\t\t);\n\t}\n\n\t/**\n\t * Creates the multi field control for a parameter.\n\t * @param parameter The parameter\n\t * @param parameterContext The parameter context\n\t * @returns The multi value field control.\n\t */\n\tprivate async createMultiField(parameter: ActionParameter, parameterContext: Context): Promise<MultiValueField> {\n\t\tlet display = \"Value\";\n\t\ttry {\n\t\t\tdisplay = await FieldHelper.getAPDialogDisplayFormat(parameterContext.getObject(), { context: parameterContext });\n\t\t} catch (err: unknown) {\n\t\t\tLog.warning(`Parameter dialog multifield: display format couldn't be calculated for parameter '${parameter.name}': ${err}`);\n\t\t}\n\t\treturn (\n\t\t\t<MultiValueField\n\t\t\t\tid={generate([\"APD_\", parameter.name])}\n\t\t\t\tplaceholder={parameter.annotations.UI?.Placeholder}\n\t\t\t\titems={{ path: `mvfview>/${parameter.name}` }}\n\t\t\t\tdelegate={{ name: \"sap/fe/core/controls/MultiValueParameterDelegate\" }}\n\t\t\t\tdisplay={display}\n\t\t\t\teditMode={this.getParameterEditMode(parameter)}\n\t\t\t\twidth=\"100%\"\n\t\t\t\tmultipleLines={parameter.annotations.UI?.MultiLineText?.valueOf() === true}\n\t\t\t\trequired={compileExpression(isActionParameterRequiredExpression(parameter, this.action, convertTypes(this.metaModel)))}\n\t\t\t\tvalueHelp={hasValueHelp(parameter) ? generate([this.actionName, parameter.name]) : undefined}\n\t\t\t\tchange={async (e): Promise<void> => this.handleFieldChange(e, parameter)}\n\t\t\t\tvisible={compileExpression(not(equal(getExpressionFromAnnotation(parameter.annotations?.UI?.Hidden), true)))}\n\t\t\t\tariaLabelledBy={[generate([\"APD_\", parameter.name, \"Label\"])]}\n\t\t\t\tdependents={this.createParameterDialogValueHelp(parameter, parameterContext)}\n\t\t\t>\n\t\t\t\t<MultiValueFieldItem key=\"{path: 'mvfview>Key', type:'sap.ui.model.type.String'}\" description=\"{mvfview>Desc}\" />\n\t\t\t</MultiValueField>\n\t\t);\n\t}\n\n\t/**\n\t * Creates the FileUploader control for a parameter.\n\t * @param parameter The parameter\n\t * @returns The FileUploader control.\n\t */\n\tprivate createFileUploader(parameter: ActionParameter): FileUploader {\n\t\tlet fileAcceptableMediaTypes;\n\t\tif (this.getStreamProperty(parameter)?.annotations.Core?.AcceptableMediaTypes) {\n\t\t\tconst acceptedTypes = Array.from(\n\t\t\t\tthis.getStreamProperty(parameter)?.annotations.Core?.AcceptableMediaTypes as unknown as string[]\n\t\t\t).map((type) => `'${type}'`);\n\t\t\tfileAcceptableMediaTypes = `{=odata.collection([${acceptedTypes.join(\",\")}])}`;\n\t\t}\n\t\tconst handleTypeMissmatch = function (event: FileUploader$TypeMissmatchEvent): void {\n\t\t\tconst fileUploader = event.getSource();\n\t\t\tconst givenType = event.getParameter(\"mimeType\");\n\t\t\tconst acceptedTypes = fileUploader.getMimeType();\n\t\t\tif (givenType) {\n\t\t\t\tshowTypeMismatchDialog(fileUploader, givenType, acceptedTypes);\n\t\t\t}\n\t\t};\n\t\t// verify check for stream\n\t\tconst fileMaximumSize = FieldHelper.calculateMBfromByte(this.getStreamProperty(parameter)?.maxLength);\n\t\tconst handleFileSizeExceed = function (event: FileUploader$FileSizeExceedEvent): void {\n\t\t\tconst fileUploader = event?.getSource();\n\t\t\tshowFileSizeExceedDialog(fileUploader, fileUploader.getMaximumFileSize().toFixed(3));\n\t\t};\n\t\tconst onUploadComplete = function (event: FileUploader$UploadCompleteEvent): void {\n\t\t\tif (event.getParameter(\"status\") === 0 || (event.getParameter(\"status\") as number) >= 400) {\n\t\t\t\tdisplayMessageForFailedUpload(\n\t\t\t\t\tevent.getSource(),\n\t\t\t\t\t(event.getParameter(\"responseRaw\") as string) || (event.getParameter(\"response\") as string)\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\treturn (\n\t\t\t<FileUploader\n\t\t\t\tname=\"FEV4FileUpload\"\n\t\t\t\tbuttonOnly=\"false\"\n\t\t\t\ticonOnly=\"true\"\n\t\t\t\tmultiple=\"false\"\n\t\t\t\ttooltip=\"{sap.fe.i18n>M_FIELD_FILEUPLOADER_UPLOAD_BUTTON_TOOLTIP}\"\n\t\t\t\ticon=\"sap-icon://upload\"\n\t\t\t\tstyle=\"Transparent\"\n\t\t\t\tsendXHR=\"true\"\n\t\t\t\tuseMultipart=\"false\"\n\t\t\t\tsameFilenameAllowed=\"true\"\n\t\t\t\tuploadOnChange=\"false\"\n\t\t\t\tmimeType={fileAcceptableMediaTypes}\n\t\t\t\ttypeMissmatch={handleTypeMissmatch}\n\t\t\t\tmaximumFileSize={fileMaximumSize}\n\t\t\t\tfileSizeExceed={handleFileSizeExceed}\n\t\t\t\thttpRequestMethod={FileUploaderHttpRequestMethod.Put}\n\t\t\t\tuploadComplete={onUploadComplete}\n\t\t\t\tchange={async (e): Promise<void> => this.handleFileUploaderChange(e, parameter)}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Creates the field control for a parameter.\n\t * @param parameter The parameter\n\t * @param parameterContext The parameter context\n\t * @returns The field control.\n\t */\n\tprivate async createField(parameter: ActionParameter, parameterContext: Context): Promise<Field> {\n\t\tlet display = \"Value\";\n\t\ttry {\n\t\t\tdisplay = await FieldHelper.getAPDialogDisplayFormat(parameterContext.getObject(), { context: parameterContext });\n\t\t} catch (err: unknown) {\n\t\t\tLog.warning(`Parameter dialog field: display format couldn't be calculated for parameter '${parameter.name}': ${err}`);\n\t\t}\n\t\treturn (\n\t\t\t<Field\n\t\t\t\tdelegate={{ name: \"sap/fe/macros/field/FieldBaseDelegate\", payload: { retrieveTextFromValueList: true } }}\n\t\t\t\tid={generate([\"APD_\", parameter.name])}\n\t\t\t\tvalue={AnnotationHelper.format(parameterContext.getObject(), { context: parameterContext })}\n\t\t\t\tplaceholder={parameter.annotations.UI?.Placeholder}\n\t\t\t\tdisplay={display}\n\t\t\t\teditMode={this.getParameterEditMode(parameter)}\n\t\t\t\twidth=\"100%\"\n\t\t\t\tmultipleLines={isMultiLineText(parameter)}\n\t\t\t\trequired={compileExpression(isActionParameterRequiredExpression(parameter, this.action, convertTypes(this.metaModel)))}\n\t\t\t\tchange={async (e): Promise<void> => this.handleFieldChange(e, parameter)}\n\t\t\t\tvalueHelp={hasValueHelp(parameter) ? generate([this.actionName, parameter.name]) : undefined}\n\t\t\t\tdependents={this.createParameterDialogValueHelp(parameter, parameterContext)}\n\t\t\t\tvisible={compileExpression(\n\t\t\t\t\tifElse(\n\t\t\t\t\t\tparameter.name === \"ResultIsActiveEntity\",\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tnot(equal(getExpressionFromAnnotation(parameter.annotations?.UI?.Hidden), true))\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t\tariaLabelledBy={[generate([\"APD_\", parameter.name, \"Label\"])]}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Creates the valueHelp  for a parameter.\n\t * @param parameter The parameter\n\t * @param parameterContext The parameter context\n\t * @returns A valueHelp if the parameter has a VH, undefined otherwise\n\t */\n\tprivate createParameterDialogValueHelp(parameter: ActionParameter, parameterContext: Context): ValueHelp | undefined {\n\t\tif (!hasValueHelp(parameter)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn (\n\t\t\t<ValueHelp\n\t\t\t\tid={generate([this.actionName, parameter.name])}\n\t\t\t\tdelegate={{\n\t\t\t\t\tname: \"sap/fe/macros/valuehelp/ValueHelpDelegate\",\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tpropertyPath: this.action.isBound\n\t\t\t\t\t\t\t? `${getTargetNavigationPath(getInvolvedDataModelObjects<ActionParameter>(parameterContext))}/${\n\t\t\t\t\t\t\t\t\tthis.actionName\n\t\t\t\t\t\t\t  }/${parameter.name}`\n\t\t\t\t\t\t\t: `/${this.action.name.substring(this.action.name.lastIndexOf(\".\") + 1)}/${parameter.name}`,\n\t\t\t\t\t\tqualifiers: {},\n\t\t\t\t\t\tvalueHelpQualifier: \"\"\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidateInput={requiresValidation(parameter)}\n\t\t\t\ttypeahead={\n\t\t\t\t\t<Popover>\n\t\t\t\t\t\t<MTable\n\t\t\t\t\t\t\tid={generate([this.actionName, parameter.name, \"Popover\", \"qualifier\"])}\n\t\t\t\t\t\t\tcaseSensitive={\n\t\t\t\t\t\t\t\tthis.action.isBound\n\t\t\t\t\t\t\t\t\t? useCaseSensitiveFilterRequests(\n\t\t\t\t\t\t\t\t\t\t\tgetInvolvedDataModelObjects<ActionParameter>(parameterContext),\n\t\t\t\t\t\t\t\t\t\t\t(convertTypes(this.metaModel).entityContainer.annotations.Capabilities\n\t\t\t\t\t\t\t\t\t\t\t\t?.FilterFunctions as unknown as string[]) ?? []\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuseAsValueHelp={!!parameter.annotations.Common?.ValueListWithFixedValues}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\t\t\t\tdialog={this.createFieldVHDialog(parameter)}\n\t\t\t></ValueHelp>\n\t\t);\n\t}\n\n\t/**\n\t * Creates the ValueHelp dialog for a parameter.\n\t * @param parameter The parameter\n\t * @returns A dialog if the parameter has a VH, undefined otherwise\n\t */\n\tprivate createFieldVHDialog(parameter: ActionParameter): VHDialog | undefined {\n\t\tif (parameter.annotations.Common?.ValueListWithFixedValues?.valueOf() !== true) {\n\t\t\treturn <VHDialog />;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the field change event for a parameter.\n\t * @param event The ui5 event\n\t * @param parameter The parameter\n\t * @returns Promise.\n\t */\n\tprivate async handleFieldChange(event: MultiValueField$ChangeEvent | Field$ChangeEvent, parameter: ActionParameter): Promise<void> {\n\t\tconst fieldPromise = (event as Field$ChangeEvent).getParameter(\"promise\");\n\t\tconst field = (event as Field$ChangeEvent).getSource() as Field | MultiValueField;\n\t\tconst parameterInfo = this.actionParameterInfos.find((actionParameterInfo) => actionParameterInfo.field === field);\n\t\tif (!parameterInfo) {\n\t\t\treturn;\n\t\t}\n\t\tparameterInfo.validationPromise = fieldPromise;\n\t\t// field value is being changed, thus existing messages related to that field are not valid anymore\n\t\tthis.removeMessagesForParameter(parameter);\n\t\ttry {\n\t\t\tparameterInfo.value = await fieldPromise;\n\t\t\tthis.parameters.parametersValues[parameterInfo.parameter.name] = parameterInfo.value;\n\t\t\tparameterInfo.hasError = false;\n\t\t} catch (error) {\n\t\t\tdelete parameterInfo.value;\n\t\t\tparameterInfo.hasError = true;\n\t\t\tActionRuntime._addMessageForActionParameter([\n\t\t\t\t{\n\t\t\t\t\tactionParameterInfo: parameterInfo,\n\t\t\t\t\tmessage: (error as { message: string }).message\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the FileUploader change event for a parameter.\n\t * @param event The SAPUI5 event corresponding to the FileUploader change event.\n\t * @param parameter The action parameter.\n\t * @returns Promise.\n\t */\n\tprivate async handleFileUploaderChange(event: FileUploader$ChangeEvent, parameter: ActionParameter): Promise<void> {\n\t\tconst files = event.getParameter(\"files\");\n\t\tconst fileUploader = event.getSource();\n\t\t// correction needed for multiple file uploaders\n\t\tconst parameterInfo = this.actionParameterInfos.find((actionParameterInfo) => actionParameterInfo.field === fileUploader);\n\t\tif (!parameterInfo || !files) {\n\t\t\treturn;\n\t\t}\n\t\tthis.removeMessagesForParameter(parameter);\n\t\tparameterInfo.value = {};\n\t\tif (this.getStreamProperty(parameter)) {\n\t\t\tparameterInfo.value[this.getStreamProperty(parameter)?.name as keyof typeof parameterInfo.value] =\n\t\t\t\tawait this.getBase64File(files);\n\t\t\tparameterInfo.value[(this.getMimeTypePath(parameter) as PathInModelExpression<string>).path] =\n\t\t\t\t(files[0] as File).type || \"application/octet-stream\";\n\t\t\tparameterInfo.value[this.getFileNamePath(parameter) as string] = (files[0] as File).name;\n\t\t\tparameterInfo.hasError = false;\n\t\t\tthis.parameters.parametersValues[parameterInfo.parameter.name] = parameterInfo.value;\n\t\t}\n\t}\n\n\t/**\n\t * Provides the property name for the file name associated with the Stream property in the action parameter.\n\t * @param parameter The action parameter.\n\t * @returns Path as a string.\n\t */\n\tprivate getFileNamePath(parameter: ActionParameter): string | undefined {\n\t\treturn (this.getStreamProperty(parameter)?.annotations.Core?.ContentDisposition?.Filename as PathAnnotationExpression<string>).path;\n\t}\n\n\t/**\n\t * Provides the property name for the Mime type with the associated Stream property in the action parameter.\n\t * @param parameter The action parameter.\n\t * @returns The path expression.\n\t */\n\tprivate getMimeTypePath(parameter: ActionParameter): BindingToolkitExpression<string> | undefined {\n\t\treturn getExpressionFromAnnotation(this.getStreamProperty(parameter)?.annotations.Core?.MediaType);\n\t}\n\n\t/**\n\t * Provides the Stream property associated with the Complex type action parameter.\n\t * @param parameter The action parameter.\n\t * @returns The Edm.Stream property.\n\t */\n\tprivate getStreamProperty(parameter: ActionParameter): Property | undefined {\n\t\treturn (parameter.typeReference as ComplexType).properties?.find((property) => property.type === \"Edm.Stream\");\n\t}\n\n\t/**\n\t * Provides the content of the file.\n\t * @param files The file selected.\n\t * @returns The file content.\n\t */\n\tprivate async getBase64File(files: object[]): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = (): void => {\n\t\t\t\tif (!reader.result) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve((reader.result as string).split(\",\")[1]);\n\t\t\t};\n\t\t\treader.readAsDataURL((files as unknown as FileList).item(0)!);\n\t\t});\n\t}\n\n\t/**\n\t * Removes the messages for a parameter.\n\t * @param parameter The parameter\n\t */\n\tprivate removeMessagesForParameter(parameter: ActionParameter): void {\n\t\tconst messages = Messaging.getMessageModel().getData();\n\t\tconst controlId = generate([\"APD_\", parameter.name]);\n\t\t// also remove messages assigned to inner controls, but avoid removing messages for different parameters (with name being substring of another parameter name)\n\t\tconst relevantMessages = messages.filter((msg: Message) =>\n\t\t\tmsg.getControlIds().some((id: string) => controlId.split(\"-\").includes(id))\n\t\t);\n\t\tMessaging.removeMessages(relevantMessages);\n\t}\n\n\t/**\n\t * Gets the FormElements along with the array of parameters.\n\t * @param parameter The parameter\n\t * @returns The parameter information along with the FormElements.\n\t */\n\tprivate async getFormElements(parameter: ActionParameter): Promise<DialogContentTypes> {\n\t\tconst formElements = await this.createFormElement(parameter);\n\t\treturn {\n\t\t\tformElements: formElements,\n\t\t\tparameter: parameter\n\t\t};\n\t}\n\n\t/**\n\t * Gets the action parameter dialog.\n\t * @returns The dialog or undefined.\n\t */\n\tgetDialog(): Dialog | undefined {\n\t\treturn this.dialog;\n\t}\n\n\t/**\n\t * Creates the action parameter dialog.\n\t * @returns The dialog.\n\t */\n\tasync createDialog(): Promise<Dialog> {\n\t\tlet dialogContents: FormElementType[] = [];\n\t\tlet dialogContentsWithParameters: DialogContentTypes[] = [];\n\t\tconst actionParameters = this.action.isBound ? this.action.parameters.slice(1) : this.action.parameters;\n\n\t\t// If OperationalParameterFacets have been defined for this action, they are used to group the action parameters\n\t\t// with titles\n\t\tif (this.action.annotations?.UI?.OperationParameterFacets) {\n\t\t\tconst actionParameterGroups: ElementGroup[] = [];\n\t\t\tthis.action.annotations.UI?.OperationParameterFacets?.forEach(function (facet: ReferenceFacet) {\n\t\t\t\tlet facetTitle;\n\t\t\t\tif (facet.$Type === UIAnnotationTypes.ReferenceFacet) {\n\t\t\t\t\tfacetTitle = facet.Label;\n\t\t\t\t}\n\t\t\t\tif (hasFieldGroupTarget(facet)) {\n\t\t\t\t\tconst fieldGroup = facet?.Target?.$target as FieldGroupType;\n\t\t\t\t\tconst groupedActionParameters: ActionParameter[] = [];\n\n\t\t\t\t\tfieldGroup.Data.forEach(function (group: unknown) {\n\t\t\t\t\t\tgroupedActionParameters.push((group as DataField).Value.$target as ActionParameter);\n\t\t\t\t\t});\n\t\t\t\t\tactionParameterGroups.push({\n\t\t\t\t\t\tfacetTitle: facetTitle as PropertyAnnotationValue<string> | undefined,\n\t\t\t\t\t\tdata: groupedActionParameters\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Get the fields for each parameter group\n\t\t\tconst getGroupForm = async (group: ElementGroup): Promise<ElementGroupConverted> => {\n\t\t\t\tconst formElements = await Promise.all(group.data.map(this.getFormElements.bind(this)));\n\t\t\t\treturn { facetTitle: group.facetTitle, data: formElements };\n\t\t\t};\n\n\t\t\tconst formData = actionParameterGroups.map(async (parameterGroup) => getGroupForm(parameterGroup));\n\t\t\tconst opFacets = await Promise.all(formData);\n\n\t\t\t// Add the title control to each parameter group\n\t\t\topFacets.forEach((dialogContent) => {\n\t\t\t\tdialogContents.push(<Title text={dialogContent.facetTitle} />);\n\t\t\t\treturn dialogContent.data.map((element) => dialogContents.push(element.formElements));\n\t\t\t});\n\n\t\t\topFacets.forEach(function (opFacet) {\n\t\t\t\topFacet.data.forEach(function (element) {\n\t\t\t\t\tdialogContentsWithParameters.push(element);\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// No OperationParameterFacets have been defined\n\t\t\tdialogContentsWithParameters = await Promise.all(actionParameters.map(this.getFormElements.bind(this)));\n\t\t\tdialogContents = dialogContentsWithParameters.map((dialogContent) => {\n\t\t\t\treturn dialogContent.formElements;\n\t\t\t});\n\t\t}\n\n\t\tthis.registerActionParameterInfo(dialogContentsWithParameters);\n\n\t\t// In case of deferred create we have no view, so we need to get the resource model from the app component\n\n\t\tconst messageStrip = this.getCustomActionMessageStripText();\n\n\t\tconst endButton = (\n\t\t\t<Button\n\t\t\t\tid={generate([\"fe\", \"APD_\", this.actionName, \"Action\", \"Cancel\"])}\n\t\t\t\ttext={this.resourceModel.getText(\"C_COMMON_ACTION_PARAMETER_DIALOG_CANCEL\")}\n\t\t\t\tpress={(): void => {\n\t\t\t\t\tthis.onCancel.bind(this)();\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t\tconst dialog = (\n\t\t\t<Dialog\n\t\t\t\ttitle={this.getTitleText(this.parameters.label)}\n\t\t\t\tid={generate([\"fe\", \"APD_\", this.actionName])}\n\t\t\t\tescapeHandler={this.onCancel.bind(this)}\n\t\t\t\tdraggable={true}\n\t\t\t\tresizable={true}\n\t\t\t\tafterClose={this.afterClose.bind(this)}\n\t\t\t\tbeforeOpen={this.beforeOpen.bind(this)}\n\t\t\t\tafterOpen={(): void => {\n\t\t\t\t\tthis.afterOpen();\n\t\t\t\t}}\n\t\t\t\tinitialFocus={endButton} // The initial focus is set programmatically in afterOpen, to avoid opening the VH dialog\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tbeginButton: (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tid={generate([\"fe\", \"APD_\", this.actionName, \"Action\", \"Ok\"])}\n\t\t\t\t\t\t\ttext={\n\t\t\t\t\t\t\t\tthis.parameters.isCreateAction === true\n\t\t\t\t\t\t\t\t\t? this.resourceModel.getText(\"C_TRANSACTION_HELPER_SAPFE_ACTION_CREATE_BUTTON_CONTINUE\")\n\t\t\t\t\t\t\t\t\t: this.getBeginButtonLabel(this.parameters.label)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\tthis.onApply.bind(this)();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"Emphasized\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tendButton: endButton,\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore (unknown property binding)\n\t\t\t\t\t\t// columnsM only takes effect if there are titles in the content.\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{messageStrip && <MessageStrip showIcon=\"true\" text={messageStrip}></MessageStrip>}\n\t\t\t\t\t\t\t<SimpleForm columnsM={\"2\"} editable=\"true\" labelSpanL={\"12\"} labelSpanM={\"12\"} binding={\"$Parameter\"}>\n\t\t\t\t\t\t\t\t{{ content: dialogContents }}\n\t\t\t\t\t\t\t</SimpleForm>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Dialog>\n\t\t);\n\t\tthis.dialog = dialog;\n\t\treturn dialog;\n\t}\n\n\t/**\n\t * Gets the label for the begin button of the dialog.\n\t * @param actionLabel The label of the action\n\t * @returns The label.\n\t */\n\tprivate getBeginButtonLabel(actionLabel: string | undefined): string {\n\t\tconst key = \"ACTION_PARAMETER_DIALOG_ACTION_NAME\";\n\t\tconst defaultKey = \"C_COMMON_DIALOG_OK\";\n\t\treturn this.getOverriddenText(key, defaultKey, actionLabel);\n\t}\n\n\t/**\n\t * Gets the title of the dialog.\n\t * @param actionLabel The label of the action\n\t * @returns The title.\n\t */\n\tprivate getTitleText(actionLabel: string | undefined): string {\n\t\tconst key = \"ACTION_PARAMETER_DIALOG_ACTION_TITLE\";\n\t\tconst defaultKey = \"C_OPERATIONS_ACTION_PARAMETER_DIALOG_TITLE\";\n\t\treturn this.getOverriddenText(key, defaultKey, actionLabel);\n\t}\n\n\t/**\n\t * Gets an overridden text for message strip.\n\t * @returns The overridden text for message strip.\n\t */\n\tprivate getCustomActionMessageStripText(): string | undefined {\n\t\tconst key = \"ACTION_PARAMETER_DIALOG_MESSAGE_TEXT\";\n\t\tlet boundActionName = this.actionName;\n\t\tboundActionName = boundActionName.split(\".\").pop() ?? boundActionName;\n\t\tconst suffixResourceKey = boundActionName && this.entitySetName ? `${this.entitySetName}|${boundActionName}` : \"\";\n\t\tif (this.resourceModel.checkIfResourceKeyExists(`${key}|${suffixResourceKey}`)) {\n\t\t\treturn this.resourceModel.getText(key, undefined, suffixResourceKey);\n\t\t} else if (this.resourceModel.checkIfResourceKeyExists(`${key}|${this.entitySetName}`)) {\n\t\t\treturn this.resourceModel.getText(key, undefined, `${this.entitySetName}`);\n\t\t} else if (this.resourceModel.checkIfResourceKeyExists(`${key}`)) {\n\t\t\treturn this.resourceModel.getText(key);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Gets an overridden text.\n\t * @param key The key for an overridden text\n\t * @param defaultKey The default key for the text\n\t * @param actionLabel The label of the action\n\t * @returns The overridden text or label.\n\t */\n\tprivate getOverriddenText(key: string, defaultKey: string, actionLabel?: string): string {\n\t\tlet boundActionName = this.actionName;\n\t\tboundActionName = boundActionName.split(\".\").pop() ?? boundActionName;\n\t\tconst suffixResourceKey = boundActionName && this.entitySetName ? `${this.entitySetName}|${boundActionName}` : \"\";\n\t\tif (actionLabel) {\n\t\t\tif (this.resourceModel.checkIfResourceKeyExists(`${key}|${suffixResourceKey}`)) {\n\t\t\t\treturn this.resourceModel.getText(key, undefined, suffixResourceKey);\n\t\t\t} else if (this.resourceModel.checkIfResourceKeyExists(`${key}|${this.entitySetName}`)) {\n\t\t\t\treturn this.resourceModel.getText(key, undefined, `${this.entitySetName}`);\n\t\t\t} else if (this.resourceModel.checkIfResourceKeyExists(`${key}`)) {\n\t\t\t\treturn this.resourceModel.getText(key);\n\t\t\t} else {\n\t\t\t\treturn actionLabel;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.resourceModel.getText(defaultKey);\n\t\t}\n\t}\n\n\t/**\n\t * Manages the press event of the begin button of the dialog.\n\t * @returns The promise.\n\t */\n\tprivate async onApply(): Promise<void> {\n\t\t// prevent multiple press events. The BusyLocker is not fast enough. (BCP: 2370130210)\n\t\tif (this.buttonLock || !this.dialog) {\n\t\t\treturn;\n\t\t}\n\t\tconst dialog = this.dialog;\n\n\t\tconst parameterContext = (dialog.getObjectBinding() as ODataContextBinding | undefined)?.getParameterContext();\n\n\t\t// lock the button to prevent multiple press events\n\t\tthis.buttonLock = true;\n\t\tBusyLocker.lock(dialog);\n\n\t\t// validate the action parameters. It is important to do this as a first operation as there is a\n\t\t// wait done for the value changes to complete updating the model. Even in cases where validation is\n\t\t// not configured this promise needs to be resolved to read from the model to return user entered values.\n\t\tif (!(await ActionRuntime.validateProperties(this.actionParameterInfos, this.resourceModel))) {\n\t\t\tBusyLocker.unlock(dialog);\n\t\t\tthis.buttonLock = false;\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValuesDictionary = Object.assign(\n\t\t\t{},\n\t\t\t...this.actionParameterInfos.map((actionParameterInfos) => {\n\t\t\t\tconst parameter = actionParameterInfos.parameter;\n\t\t\t\tlet value;\n\t\t\t\tif (parameter.isCollection) {\n\t\t\t\t\tvalue = Object.values((dialog.getModel(\"mvfview\") as JSONModel).getProperty(`/${parameter.name}`) ?? {}).map(\n\t\t\t\t\t\t(paramValue) => (paramValue as { Key?: PrimitiveType })?.Key\n\t\t\t\t\t);\n\t\t\t\t} else if (!parameter.type.startsWith(\"Edm.\") && this.getStreamProperty(parameter)) {\n\t\t\t\t\t// File Uploader\n\t\t\t\t\tvalue = actionParameterInfos.value;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = parameterContext?.getProperty(parameter.name);\n\t\t\t\t}\n\t\t\t\treturn { [parameter.name]: value };\n\t\t\t})\n\t\t) as Record<string, PrimitiveType>;\n\t\tconst isNewValue = Object.values(newValuesDictionary).some((value) => !!value);\n\n\t\tthis.parametersValuesResolve(newValuesDictionary);\n\n\t\tthis.parameters.appComponent.getModel(\"ui\").setProperty(UiModelConstants.DocumentModified, isNewValue);\n\t\t// Due to using the search and value helps on the action dialog transient messages could appear\n\t\t// we need an UX design for those to show them to the user - for now remove them before continuing\n\t\tthis.messageHandler.removeTransitionMessages();\n\t}\n\n\t/**\n\t * Reset the state of the dialog to start a new iteration.\n\t *\n\t */\n\tpublic resetState(): void {\n\t\tthis.unlockDialog();\n\t\tthis.buttonLock = false;\n\t\tthis.updateDialogBindingContextForError();\n\t\tthis.parametersValuesPromise = new Promise((resolve, reject) => {\n\t\t\tthis.parametersValuesResolve = resolve;\n\t\t\tthis.parametersValuesReject = reject;\n\t\t});\n\t}\n\n\t/**\n\t * Change the binding context of the dialog to one with priority message.\n\t *\n\t * On initial action execution, we might have bound messages with any selected contexts as target apart from the dialog's initial context.\n\t * We change the binding context of dialog for the parameter fields' to get the valid value state from the priority bound message.\n\t */\n\tupdateDialogBindingContextForError(): void {\n\t\tif (this.parameters.contexts.length < 2) {\n\t\t\t// We would need to switch the binding context of the dialog only when we have multiple contexts for executing the action.\n\t\t\treturn;\n\t\t}\n\n\t\tlet warningContext: ODataV4Context | undefined, infoContext: ODataV4Context | undefined;\n\t\tconst erroneousCtx = this.parameters.contexts.find((context) => {\n\t\t\tconst messages = context.getMessages();\n\t\t\treturn messages.some((msg) => {\n\t\t\t\t// We hold first context with warning or info messages.\n\t\t\t\twarningContext = !warningContext && msg.getType() === MessageType.Warning ? context : undefined;\n\t\t\t\tinfoContext = !infoContext && msg.getType() === MessageType.Information ? context : undefined;\n\t\t\t\t// Error is found!!! We shall exit.\n\t\t\t\treturn msg.getType() === MessageType.Error;\n\t\t\t});\n\t\t});\n\t\tconst contextToUse = erroneousCtx ?? warningContext ?? infoContext;\n\n\t\tif (contextToUse) {\n\t\t\tthis.dialog?.setBindingContext(contextToUse);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the busy state of the dialog.\n\t */\n\tprivate unlockDialog(): void {\n\t\tif (this.dialog && BusyLocker.isLocked(this.dialog)) {\n\t\t\tBusyLocker.unlock(this.dialog);\n\t\t}\n\t}\n\n\t/**\n\t * Handler for the cancel action of the dialog.\n\t */\n\tprivate onCancel(): void {\n\t\tthis.parametersValuesReject(FELibrary.Constants.CancelActionDialog);\n\t\tthis.closeDialog();\n\t}\n\n\t/**\n\t * Closes the dialog.\n\t */\n\tpublic closeDialog(): void {\n\t\tif (this.dialog) {\n\t\t\tthis.parameters.events?.onParameterDialogClosed?.();\n\t\t\tthis.dialog.close();\n\t\t}\n\t\tthis.isDialogOpen = false;\n\t}\n\n\t/**\n\t * Opens the dialog.\n\t * @returns The promise of the action result.\n\t */\n\tasync openDialog(): Promise<void> {\n\t\tif (!this.dialog) {\n\t\t\tthrow new Error(\"Error on opening the dialog\");\n\t\t}\n\t\tawait CommonUtils.setUserDefaults(\n\t\t\tthis.parameters.appComponent,\n\t\t\tthis.actionParameterInfos.map((actionParameterInfo) => actionParameterInfo.parameter),\n\t\t\tthis.parameterModel,\n\t\t\ttrue\n\t\t);\n\t\tthis.setModels(this.dialog);\n\t\tthis.parameters.view?.addDependent(this.dialog);\n\t\tawait this.setOperationDefaultValues(this.dialog);\n\t\tthis.dialog.open();\n\t\tthis.isDialogOpen = true;\n\t}\n\n\t/**\n\t * Sets the model configuration for the dialog.\n\t * @param dialog The owner of the dialog\n\t */\n\tprivate setModels(dialog: Dialog): void {\n\t\tdialog.setModel(this.parameterModel, \"paramsModel\");\n\t\tdialog.bindElement({\n\t\t\tpath: \"/\",\n\t\t\tmodel: \"paramsModel\"\n\t\t});\n\t\tdialog.setModel(this.parameters.model);\n\t\tdialog.bindElement({\n\t\t\tpath: `${this.parameters.contexts.length ? \"\" : \"/\"}${this.actionName}(...)`\n\t\t});\n\n\t\tif (this.parameters.contexts.length) {\n\t\t\tdialog.setBindingContext(this.parameters.contexts[0]); // use context of first selected line item\n\t\t}\n\t\t// empty model to add elements dynamically depending on number of MVF fields defined on the dialog\n\t\tdialog.setModel(new JSONModel({}), \"mvfview\");\n\t}\n\n\t/**\n\t * Removes the messages before opening the dialog.\n\t * @param _event\n\t */\n\tprivate beforeOpen(_event: Dialog$BeforeOpenEvent): void {\n\t\tthis.messageHandler.removeTransitionMessages();\n\t}\n\n\t/**\n\t * Wait for the parameter values to be set.\n\t * @returns Promise containing the parameter values.\n\t */\n\tpublic async waitForParametersValues(): Promise<Record<string, PrimitiveType>> {\n\t\treturn this.parametersValuesPromise;\n\t}\n\n\t/**\n\t * Determines if the dialog is opened.\n\t * @returns True if the dialog is opened, false otherwise.\n\t */\n\tpublic isOpen(): boolean {\n\t\treturn this.isDialogOpen;\n\t}\n\n\t/**\n\t * Gets the default values for a parameter.\n\t * @param parameter The parameter\n\t * @param bindingParameter The binding parameter\n\t * @param dialog The dialog\n\t * @returns The promise of the default values.\n\t */\n\tprivate async getParameterDefaultValue(\n\t\tparameter: ActionParameter,\n\t\tbindingParameter: string,\n\t\tdialog: Dialog\n\t): Promise<ParameterDefaultValue> {\n\t\tconst operationBinding = dialog.getObjectBinding() as ODataContextBinding;\n\t\tconst parameterModelData = this.parameterModel.getData();\n\t\tconst paramName = parameter.name;\n\t\tconst defaultValue = parameter.annotations.UI?.ParameterDefaultValue;\n\t\t// Case 1: There is a ParameterDefaultValue annotation\n\t\tif (defaultValue) {\n\t\t\tif (this.parameters.contexts.length > 0 && isPathAnnotationExpression(defaultValue)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst pathForContext: string =\n\t\t\t\t\t\tbindingParameter && defaultValue.path.startsWith(`${bindingParameter}/`)\n\t\t\t\t\t\t\t? defaultValue.path.replace(`${bindingParameter}/`, \"\")\n\t\t\t\t\t\t\t: defaultValue.path;\n\t\t\t\t\tlet paramValue = await CommonUtils.requestSingletonProperty(defaultValue.path, operationBinding.getModel());\n\t\t\t\t\tif (paramValue === null) {\n\t\t\t\t\t\tparamValue = await operationBinding.getParameterContext().requestProperty(defaultValue.path);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.parameters.contexts.length > 1) {\n\t\t\t\t\t\t// For multi select, need to loop over contexts (as contexts cannot be retrieved via binding parameter of the operation binding)\n\n\t\t\t\t\t\tif (this.parameters.contexts.some((context) => context.getProperty(pathForContext) !== paramValue)) {\n\t\t\t\t\t\t\t// if the values from the contexts are not all the same, do not prefill\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tparamName,\n\t\t\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t\t\t\tnoPossibleValue: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn { paramName, value: paramValue };\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.error(\"Error while reading default action parameter\", paramName, this.action.name);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tparamName,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t\tlatePropertyError: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Case 1.2: ParameterDefaultValue defines a fixed string value (i.e. vParamDefaultValue = 'someString')\n\t\t\t\treturn { paramName, value: defaultValue.valueOf() };\n\t\t\t}\n\t\t}\n\t\treturn { paramName, value: parameterModelData[paramName] };\n\t}\n\n\t/**\n\t * Gets the manifest values.\n\t * @returns The promise of the manifest values.\n\t */\n\tprivate async getManifestFunctionValues(): Promise<Record<string, unknown>> {\n\t\tconst bindingContext = this.dialog?.getBindingContext();\n\t\tif (!this.parameters.view || !this.parameters.defaultValuesExtensionFunction || !bindingContext) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn FPMHelper.loadModuleAndCallMethod(\n\t\t\tthis.parameters.defaultValuesExtensionFunction\n\t\t\t\t.substring(0, this.parameters.defaultValuesExtensionFunction.lastIndexOf(\".\") || -1)\n\t\t\t\t.replace(/\\./gi, \"/\"),\n\t\t\tthis.parameters.defaultValuesExtensionFunction.substring(\n\t\t\t\tthis.parameters.defaultValuesExtensionFunction.lastIndexOf(\".\") + 1,\n\t\t\t\tthis.parameters.defaultValuesExtensionFunction.length\n\t\t\t),\n\t\t\tthis.parameters.view,\n\t\t\tbindingContext,\n\t\t\tthis.parameters.contexts\n\t\t) as Promise<Record<string, unknown>>;\n\t}\n\n\t/**\n\t * Gets the predefined values for the parameters.\n\t * @param bindingParameter The binding parameter\n\t * @param dialog The dialog\n\t * @returns The promise containing all predefined values.\n\t */\n\tprivate async getPreDefinedValues(\n\t\tbindingParameter: string,\n\t\tdialog: Dialog\n\t): Promise<{\n\t\tcontextValues: Record<string, unknown>;\n\t\tdefaultValues: ParameterDefaultValue[];\n\t\tfunctionValues: ODataV4Context[];\n\t\tmanifestFunctionValues: Record<string, unknown>;\n\t}> {\n\t\tconst boundFunctionName = this.action.annotations.Common?.DefaultValuesFunction?.valueOf();\n\t\tlet requestContextObject: Promise<Record<string, unknown>> = Promise.resolve({});\n\t\tlet functionParams: Promise<ODataV4Context>[] = [];\n\t\tif (this.action.isBound) {\n\t\t\tif (typeof boundFunctionName === \"string\") {\n\t\t\t\tfunctionParams = this.parameters.contexts.map(async (context) =>\n\t\t\t\t\toperations.callBoundFunction(boundFunctionName, context, context.getModel())\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.parameters.contexts.length > 0) {\n\t\t\t\trequestContextObject = this.parameters.contexts[0].requestObject();\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst contextValues = await requestContextObject;\n\n\t\t\tconst promises = await Promise.all([\n\t\t\t\tPromise.all(\n\t\t\t\t\tthis.actionParameterInfos.map(async (actionParameterInfo) =>\n\t\t\t\t\t\tthis.getParameterDefaultValue(actionParameterInfo.parameter, bindingParameter, dialog)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tPromise.all(functionParams),\n\t\t\t\tthis.getManifestFunctionValues()\n\t\t\t]);\n\t\t\treturn {\n\t\t\t\tcontextValues,\n\t\t\t\tdefaultValues: promises[0],\n\t\t\t\tfunctionValues: promises[1],\n\t\t\t\tmanifestFunctionValues: promises[2]\n\t\t\t};\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(\"Error while retrieving the parameter\", error as string);\n\t\t\t// Remove messages relating to the function for default values as they aren't helpful for a user\n\t\t\tthis.messageHandler.removeTransitionMessages();\n\t\t\treturn {\n\t\t\t\tcontextValues: {},\n\t\t\t\tdefaultValues: [],\n\t\t\t\tfunctionValues: [],\n\t\t\t\tmanifestFunctionValues: {}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Callback when the dialog is opened. Sets the focus on the first field without opening the VH dialog.\n\t */\n\tprivate afterOpen(): void {\n\t\tconst firstVisibleParameter = this.actionParameterInfos.find((parameterInfo) => parameterInfo.field.getVisible());\n\t\tif (firstVisibleParameter) {\n\t\t\tconst firstField = firstVisibleParameter?.field;\n\t\t\tconst focusInfo = firstField?.getFocusInfo() as { targetInfo: object };\n\t\t\tfocusInfo.targetInfo = { silent: true };\n\t\t\tfirstField?.focus(focusInfo);\n\t\t}\n\t\tthis.parameters.events?.onParameterDialogOpened?.();\n\t}\n\n\t/**\n\t * Registers the action parameter info.\n\t * @param dialogContents The dialog contents\n\t */\n\tprivate registerActionParameterInfo(dialogContents: DialogContentTypes[]): void {\n\t\t//Register the field\n\t\tdialogContents.forEach((dialogContent) => {\n\t\t\tconst parameter = dialogContent?.parameter;\n\t\t\tconst field = dialogContent?.formElements?.[1];\n\t\t\tthis.actionParameterInfos.push({\n\t\t\t\tparameter,\n\t\t\t\tfield,\n\t\t\t\tisMultiValue: parameter.isCollection,\n\t\t\t\thasError: false\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Sets the default values for the parameters.\n\t * @param dialog The dialog\n\t * @returns The promise.\n\t */\n\tprivate async setOperationDefaultValues(dialog: Dialog): Promise<void> {\n\t\tconst bindingParameter = this.action.isBound ? this.action.parameters[0].name : \"\";\n\t\tconst { contextValues, defaultValues, functionValues, manifestFunctionValues } = await this.getPreDefinedValues(\n\t\t\tbindingParameter,\n\t\t\tdialog\n\t\t);\n\t\tconst operationBinding = dialog.getObjectBinding() as ODataContextBinding;\n\n\t\tif (bindingParameter) {\n\t\t\toperationBinding.setParameter(bindingParameter, contextValues);\n\t\t}\n\n\t\tfor (const i in this.actionParameterInfos) {\n\t\t\tif (this.actionParameterInfos[i].parameter.name !== \"ResultIsActiveEntity\") {\n\t\t\t\tconst parameterName = this.actionParameterInfos[i].parameter.name;\n\t\t\t\t// Parameter values provided in the call of invokeAction overrule other sources\n\t\t\t\tconst parameterProvidedValue = this.parameterValues?.find((element) => element.name === parameterName)?.value;\n\t\t\t\tif (parameterProvidedValue) {\n\t\t\t\t\toperationBinding.setParameter(parameterName, parameterProvidedValue);\n\t\t\t\t} else if (manifestFunctionValues.hasOwnProperty(parameterName)) {\n\t\t\t\t\toperationBinding.setParameter(parameterName, manifestFunctionValues[parameterName]);\n\t\t\t\t} else if (defaultValues[i] && defaultValues[i].value !== undefined) {\n\t\t\t\t\toperationBinding.setParameter(parameterName, defaultValues[i].value);\n\t\t\t\t} else if (this.action.annotations.Common?.DefaultValuesFunction && !defaultValues[i].noPossibleValue) {\n\t\t\t\t\tconst setOfFunctionValues = new Set<string>(\n\t\t\t\t\t\tthis.parameters.contexts.map((context, index) => functionValues[index].getObject(parameterName))\n\t\t\t\t\t);\n\t\t\t\t\tif (setOfFunctionValues.size === 1 && setOfFunctionValues.values().next().value !== undefined) {\n\t\t\t\t\t\t//param values are all the same:\n\t\t\t\t\t\toperationBinding.setParameter(parameterName, Array.from(setOfFunctionValues)[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If at least one Default Property is a Late Property and an eTag error was raised.\n\t\tif (defaultValues.some((value) => value.latePropertyError)) {\n\t\t\tconst refresh = this.resourceModel.getText(\"C_COMMON_SAPFE_REFRESH\");\n\t\t\tMessageBox.warning(getResourceModel(this.parameters.appComponent).getText(\"C_APP_COMPONENT_SAPFE_ETAG_LATE_PROPERTY\"), {\n\t\t\t\tactions: [refresh, MessageBox.Action.OK],\n\t\t\t\temphasizedAction: refresh,\n\t\t\t\tonClose: (action: string) => {\n\t\t\t\t\tif (action === refresh) {\n\t\t\t\t\t\tconst extensionAPI = this.parameters.view?.getController().getExtensionAPI();\n\t\t\t\t\t\t(extensionAPI as ListReportExtensionAPI | ObjectPageExtensionAPI).refresh();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontentWidth: \"25em\"\n\t\t\t} as object);\n\t\t}\n\t}\n\n\t/**\n\t * Manages the close of the dialog.\n\t */\n\tprivate afterClose(): void {\n\t\t// when the dialog is cancelled, messages need to be removed in case the same action should be executed again\n\t\tfor (const i in this.actionParameterInfos) {\n\t\t\tthis.removeMessagesForParameter(this.actionParameterInfos[i].parameter);\n\t\t}\n\t\tthis.dialog?.destroy();\n\t\tthis.buttonLock = false; //needed here, not in the press events finally clause. In case the UI is sluggish, begin button could be pressed again.\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"OperationParameterDialog-dbg.js"}