{"version":3,"file":"MdcTableTemplate.js","names":["getTableType","tableDefinition","_collection","tableType","selectionLimit","collection","getObject","_jsx","GridTableType","rowCountMode","control","rowCount","fixedColumnCount","frozenColumnCount","scrollThreshold","TreeTableType","ResponsiveTableType","showDetailsButton","detailsButtonSetting","Priority","Low","Medium","None","growingMode","$kind","undefined","getDataStateIndicator","handlerProvider","DataStateIndicator","filter","dataStateIndicatorFilter","enableFiltering","dataStateChange","getDragAndDropEnabled","contextObjectPath","isPathUpdatableOnNavigation","isPathUpdatable","ignoreTargetCollection","authorizeUnresolvable","pathVisitor","path","navigationPaths","singletonPathVisitor","convertedTypes","isPathUpdatableOnTarget","startingEntitySet","targetEntitySet","annotations","Common","DraftRoot","and","_type","ifElse","isConstant","constant","isHierarchyParentNodeUpdatable","UI","IsEditable","getDependents","tableProperties","parameters","variantManagement","id","contentId","type","dependents","cutAction","actions","find","a","key","StandardActionKeys","Cut","isTemplated","push","CommandExecution","execute","getCutHandler","command","enabled","copyAction","Copy","getCopyHandler","pasteAction","Paste","visible","getPasteHandler","createAction","Create","deleteAction","Delete","annotation","isInsertUpdateActionsTemplated","nodeType","enableUploadPlugin","getCreateButtonPressHandler","getDeleteButtonPressHandler","moveUpAction","MoveUp","moveDownAction","MoveDown","getMoveUpDownHandler","actionName","commandActions","action","actionCommand","getActionCommand","PersistenceProvider","generate","for","ContextMenuSetting","scope","getUploadPlugin","_exports","getActions","table","collectionContext","collectionEntity","displaySegmentedButton","alpButtonItems","CommonHelper","isDesktop","SegmentedButtonItem","tooltip","icon","ActionToolbarAction","layoutInformation","children","SegmentedButton","select","segmentedButtonPress","selectedKey","items","getTableActionsTemplate","length","getRowSettings","rowActionType","rowActionItem","RowActionItem","press","rowPress","row","RowSettings","navigated","rowNavigated","highlight","rowHighlighting","rowActions","TableRowActionType","Navigation","getContextMenu","navigationInEditMode","menuItems","getTableContextMenuTemplate","getSharetoCollaborationManagerTemplate","getOpenInNewTabTemplate","Menu","itemSelected","contextMenuItemSelected","getDependentsForContextMenu","tableId","MenuItem","startsSection","text","contextMenuShareToCollaborationManager","not","pathInModel","contextMenuOpenInNewTab","enabledForContextMenu","getVariantManagement","headerLevel","VariantManagement","showSetAsDefault","variantSelected","save","variantSaved","getQuickFilter","quickFilters","filters","QuickFilterSelector","paths","map","annotationPath","showCounts","getCopyProvider","visibleExpression","disableCopyToClipboard","CopyProvider","getCellSelector","includes","CellSelector","or","rangeLimit","getCreationRow","creationMode","name","CreationMode","CreationRow","creationRowAction","customData","createCustomDatas","value","disableAddRowButtonForEmptyData","customValidationFunction","apply","applyEnabled","getDragAndDropConfig","DragDropConfig","compileExpression","dropPosition","allowDropBetweenNodes","draggable","droppable","dragStart","dragStartDocument","dragEnter","dragEnterDocument","drop","dropDocument","forContextMenu","dataField","convertedMetadata","resolvePath","target","actionContextPath","getActionContext","metaModel","createBindingContext","actionContext","dataFieldDataModelObjectPath","getInvolvedDataModelObjects","isBound","ActionTarget","isOperationAvailable","Core","OperationAvailable","valueOf","displayCommandAction","TableHelper","isActionShownInContextMenu","actionParameters","onExecuteAction","getDataFieldForActionButtonPressHandler","onExecuteIBN","getDataFieldForIBNPressHandler","onExecuteManifest","getManifestActionPressHandler","isIBNEnabled","isDataFieldForIBNEnabled","RequiresContext","NavigationAvailable","isActionEnabled","isDataFieldForActionEnabled","Action","enableOnSelect","targetEntityType","isEnabled","getCommandExecutionForAction","getCoreRequire","customModules","additionalRequiredModules","module","index","join","getComputedColumn","column","enableAnalytics","isDraftIndicator","Column","headerVisible","propertyKey","header","label","width","DraftIndicator","draftIndicatorType","ObjectMarkerVisibility","IconOnly","contextPath","getPath","usedInTable","usedInAnalyticalTable","isSituationsIndicator","SituationsIndicator","getSlotColumn","isReadOnly","hAlign","horizontalAlign","required","extendedSettings","ResponsiveColumnSettings","importance","template","getDraftIndicator","formatOptions","fieldGroupDraftIndicatorPropertyPath","FormElementWrapper","IconAndText","getDraftIndicatorVisibleBinding","fieldGroupName","ariaLabelledBy","getSituationIndicator","ObjectStatus","showErrorObjectStatus","class","state","getDefaultDateTimeStyle","dataFieldContext","targetObject","isDataField","Value","$target","isDataFieldForAnnotation","hasDataPointTarget","Target","getCreationTemplate","isTableReadOnly","fieldMode","columnEditMode","dataFieldObject","textLinesEdit","textMaxLines","textMaxLength","textMaxCharactersDisplay","textExpandBehaviorDisplay","textAlignMode","semanticKeyStyle","hasDraftIndicator","showIconUrl","Inline","IconUrl","ignoreNavigationAvailable","isCurrencyOrUnitAligned","dateTimeStyle","Field","vhIdPrefix","editMode","metaPath","wrap","change","fieldChangeInCreationRow","FieldFormatOptions","getMacroFieldTemplate","isCompactType","textAlign","showEmptyIndicator","className","typeConfig","isAnalytics","forInlineCreationRows","compactSemanticKey","isAnalyticalAggregatedRow","analyticalConfiguration","aggregationOnLeafLevel","liveChange","fieldLiveChange","navigateAfterAction","isNavigable","getColumnContentTemplate","dataFieldOP","creationTemplate","readOnly","isAnnotationOfType","isAnnotationOfTerm","showOnlyChart","settings","showMicroChartLabel","microChartSize","microChartCollection","getModel","getNavigationContext","MicroChart","size","hideOnNoData","isMultiValueField","enhanceDataModelPath","isTruthy","IsInactive","equal","MultiValueFieldBlock","fieldGroup","dataFieldCollectionContext","fieldGroupColectionLength","Data","fieldGroupDataField","fieldGroupDataFieldIdx","fieldGroupDataFieldContext","fieldGroupDataFieldOP","fieldGroupLabel","FieldHelper","computeLabelText","context","showDataFieldsLabel","resourceBundle","Library","getResourceBundleFor","_jsxs","HBox","getVisibleExpression","alignItems","buildExpressionForAlignItems","Label","getFieldGroupLabelStableId","getText","VBox","layoutData","FlexItemData","growFactor","getColumnStableId","getMarginClass","draftIndicator","situationIndicator","getVBoxVisibility","FieldGroupHiddenExpressions","getColumnTemplate","getDataFieldDefault","dataFieldObjectModelPath","templates","enableAutoColumnWidth","widthIncludingColumnHeader","CommonUtils","isSmallDevice","getColumnWidth","getTextOnActionField","title","description","minWidth","getColumnAlignment","setHeaderLabelVisibility","createCustomData","getColumns","columns","availability","Log","error","Error","getDesigntime","getMDCP13nMode","stringMode","TableP13nMode","Aggregate","Sort","Filter","Group","getMDCTableTemplate","navigationInfo","routePath","targetInformation","appComponent","getRoutingService","_getTargetInformation","options","openInEditMode","filterOnActiveEntities","ModelHelper","isObjectPathDraftSupported","delegate","getDelegate","isAlp","entityName","currentHeader","headerBindingExpression","buildExpressionForHeaderVisible","tabTitle","modelContextChange","tableContextChange","lineItem","getUiLineItemObject","navigationPath","startsWith","isSingleton","draft","designtime","overrideRowPress","actionType","showCreate","updatablePropertyPath","currentPersonalization","personalization","p13nMode","mode","split","trim","excludeGroupFromP13n","multiSelectDisabledActions","ActionHelper","getMultiSelectDisabledActions","inlineCreationRowCount","createAtEnd","hiddenFilters","getNavigationAvailableMap","exportRequestSize","MDCTable","sortConditions","groupConditions","aggregateConditions","busyIndicatorDelay","enableExport","JSON","parse","beforeOpenContextMenu","autoBindOnInit","useBasicSearch","filterBar","selectionMode","selectionChange","showRowCount","headerStyle","threshold","paste","beforeExport","useCondensedTableLayout","multiSelectMode","showPasteButton","enablePaste","dataStateIndicator","rowSettings","contextMenu","dragDropConfig","creationRow","variant","quickFilter","copyProvider","cellSelector"],"sources":["./MdcTableTemplate.tsx"],"sourcesContent":["import type { ConvertedMetadata, EntitySet, NavigationProperty } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tChart,\n\tDataField,\n\tDataFieldForAction,\n\tDataFieldForAnnotation,\n\tDataPoint,\n\tFieldGroup,\n\tLineItem,\n\tPresentationVariant,\n\tSelectionPresentationVariant\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport {\n\tUIAnnotationTerms,\n\tUIAnnotationTypes,\n\ttype DataFieldAbstractTypes,\n\ttype DataFieldForIntentBasedNavigation\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, equal, ifElse, isConstant, isTruthy, not, or, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf, StrictPropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport { CreationMode } from \"sap/fe/core/converters/ManifestSettings\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { hasDataPointTarget, isDataField, isDataFieldForAnnotation } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { CustomAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport type { TableType, TableVisualization } from \"sap/fe/core/converters/controls/Common/Table\";\nimport type {\n\tAnnotationTableColumn,\n\tComputedTableColumn,\n\tCustomBasedTableColumn\n} from \"sap/fe/core/converters/controls/Common/table/Columns\";\nimport { StandardActionKeys, type StandardAction } from \"sap/fe/core/converters/controls/Common/table/StandardActions\";\nimport { UI, singletonPathVisitor } from \"sap/fe/core/helpers/BindingHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isAnnotationOfTerm, isAnnotationOfType, isSingleton } from \"sap/fe/core/helpers/TypeGuards\";\nimport { enhanceDataModelPath, isPathUpdatable, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type { DateTimeStyle } from \"sap/fe/core/templating/UIFormatters\";\nimport { isMultiValueField } from \"sap/fe/core/templating/UIFormatters\";\nimport { getCommandExecutionForAction } from \"sap/fe/macros/ActionCommand\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport Field from \"sap/fe/macros/Field\";\nimport MultiValueFieldBlock from \"sap/fe/macros/MultiValueField\";\nimport { createCustomData, createCustomDatas } from \"sap/fe/macros/TSXUtils\";\nimport DraftIndicator from \"sap/fe/macros/draftIndicator/DraftIndicator\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\nimport { getDraftIndicatorVisibleBinding, getVisibleExpression } from \"sap/fe/macros/field/FieldTemplating\";\nimport ActionHelper from \"sap/fe/macros/internal/helpers/ActionHelper\";\nimport { buildExpressionForHeaderVisible } from \"sap/fe/macros/internal/helpers/TableTemplating\";\nimport SituationsIndicator from \"sap/fe/macros/situations/SituationsIndicator\";\nimport { getTableActionsTemplate, getTableContextMenuTemplate } from \"sap/fe/macros/table/ActionsTemplating\";\nimport QuickFilterSelector from \"sap/fe/macros/table/QuickFilterSelector\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type TableCreationOptions from \"sap/fe/macros/table/TableCreationOptions\";\nimport TableHelper from \"sap/fe/macros/table/TableHelper\";\nimport { getUploadPlugin } from \"sap/fe/macros/table/uploadTable/UploadTableTemplate\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport Menu from \"sap/m/Menu\";\nimport MenuItem from \"sap/m/MenuItem\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport SegmentedButton from \"sap/m/SegmentedButton\";\nimport SegmentedButtonItem from \"sap/m/SegmentedButtonItem\";\nimport VBox from \"sap/m/VBox\";\nimport { ObjectMarkerVisibility } from \"sap/m/library\";\nimport CellSelector from \"sap/m/plugins/CellSelector\";\nimport ContextMenuSetting from \"sap/m/plugins/ContextMenuSetting\";\nimport CopyProvider from \"sap/m/plugins/CopyProvider\";\nimport DataStateIndicator from \"sap/m/plugins/DataStateIndicator\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { TitleLevel } from \"sap/ui/core/library\";\nimport { Priority } from \"sap/ui/core/library\";\nimport VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport MDCTable from \"sap/ui/mdc/Table\";\nimport ActionToolbarAction from \"sap/ui/mdc/actiontoolbar/ActionToolbarAction\";\nimport TableP13nMode from \"sap/ui/mdc/enums/TableP13nMode\";\nimport TableRowActionType from \"sap/ui/mdc/enums/TableRowActionType\";\nimport PersistenceProvider from \"sap/ui/mdc/p13n/PersistenceProvider\";\nimport Column from \"sap/ui/mdc/table/Column\";\nimport CreationRow from \"sap/ui/mdc/table/CreationRow\";\nimport DragDropConfig from \"sap/ui/mdc/table/DragDropConfig\";\nimport GridTableType from \"sap/ui/mdc/table/GridTableType\";\nimport ResponsiveColumnSettings from \"sap/ui/mdc/table/ResponsiveColumnSettings\";\nimport ResponsiveTableType from \"sap/ui/mdc/table/ResponsiveTableType\";\nimport RowActionItem from \"sap/ui/mdc/table/RowActionItem\";\nimport RowSettings from \"sap/ui/mdc/table/RowSettings\";\nimport TreeTableType from \"sap/ui/mdc/table/TreeTableType\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport MicroChart from \"../MicroChart\";\nimport FieldFormatOptions from \"../field/FieldFormatOptions\";\nimport type TableEventHandlerProvider from \"./TableEventHandlerProvider\";\n\nexport type TableTemplatingParameters = {\n\tmetaPath: Context;\n\tconvertedMetadata: ConvertedMetadata;\n\tmetaModel: ODataMetaModel;\n\thandlerProvider: TableEventHandlerProvider;\n\tappComponent: AppComponent;\n};\n\n/**\n * Generates the table type for the table.\n * @param tableDefinition\n * @param _collection\n * @param tableType\n * @param selectionLimit\n * @returns The table type\n */\nfunction getTableType(\n\ttableDefinition: TableVisualization,\n\t_collection: Context,\n\ttableType: TableType,\n\tselectionLimit: number\n): ResponsiveTableType | GridTableType | TreeTableType {\n\tconst collection = _collection.getObject();\n\tswitch (tableType) {\n\t\tcase \"GridTable\":\n\t\t\treturn (\n\t\t\t\t<GridTableType\n\t\t\t\t\trowCountMode={tableDefinition.control.rowCountMode}\n\t\t\t\t\trowCount={tableDefinition.control.rowCount}\n\t\t\t\t\tselectionLimit={selectionLimit}\n\t\t\t\t\tfixedColumnCount={tableDefinition.control.frozenColumnCount}\n\t\t\t\t\tscrollThreshold={tableDefinition.control.scrollThreshold}\n\t\t\t\t/>\n\t\t\t);\n\n\t\tcase \"TreeTable\":\n\t\t\treturn (\n\t\t\t\t<TreeTableType\n\t\t\t\t\trowCountMode={tableDefinition.control.rowCountMode}\n\t\t\t\t\trowCount={tableDefinition.control.rowCount}\n\t\t\t\t\tfixedColumnCount={tableDefinition.control.frozenColumnCount}\n\t\t\t\t\tscrollThreshold={tableDefinition.control.scrollThreshold}\n\t\t\t\t/>\n\t\t\t);\n\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t<ResponsiveTableType\n\t\t\t\t\tshowDetailsButton={true}\n\t\t\t\t\tdetailsButtonSetting={[Priority.Low, Priority.Medium, Priority.None]}\n\t\t\t\t\tgrowingMode={collection.$kind === \"EntitySet\" ? \"Scroll\" : undefined}\n\t\t\t\t/>\n\t\t\t);\n\t}\n}\n\n/**\n * Generates the DataSateIndicator for the table.\n * @param handlerProvider\n * @returns The datastate indicator\n */\nfunction getDataStateIndicator(handlerProvider: TableEventHandlerProvider): DataStateIndicator {\n\treturn (\n\t\t<DataStateIndicator\n\t\t\tfilter={handlerProvider.dataStateIndicatorFilter}\n\t\t\tenableFiltering={true}\n\t\t\tdataStateChange={handlerProvider.dataStateChange}\n\t\t/>\n\t);\n}\n\n/**\n * Generates the binding expression for the drag and drop enablement.\n * @param contextObjectPath\n * @param tableDefinition\n * @returns The binding expression\n */\nfunction getDragAndDropEnabled(\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\ttableDefinition: TableVisualization\n): BindingToolkitExpression<boolean> {\n\tconst isPathUpdatableOnNavigation = isPathUpdatable(contextObjectPath, {\n\t\tignoreTargetCollection: true,\n\t\tauthorizeUnresolvable: true,\n\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\tsingletonPathVisitor(path, contextObjectPath.convertedTypes, navigationPaths)\n\t});\n\tconst isPathUpdatableOnTarget = isPathUpdatable(contextObjectPath, {\n\t\tauthorizeUnresolvable: true,\n\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\tsingletonPathVisitor(path, contextObjectPath.convertedTypes, navigationPaths)\n\t});\n\n\tif (contextObjectPath.startingEntitySet === contextObjectPath.targetEntitySet) {\n\t\t// ListReport case: we allow drag and drop on draft-enabled entities\n\t\tif ((contextObjectPath.startingEntitySet as EntitySet).annotations.Common?.DraftRoot !== undefined) {\n\t\t\treturn and(\n\t\t\t\tisPathUpdatableOnNavigation._type === \"Unresolvable\"\n\t\t\t\t\t? ifElse(isConstant(isPathUpdatableOnTarget), isPathUpdatableOnTarget, constant(true))\n\t\t\t\t\t: isPathUpdatableOnNavigation,\n\t\t\t\ttableDefinition.control.isHierarchyParentNodeUpdatable!\n\t\t\t);\n\t\t} else {\n\t\t\treturn constant(false);\n\t\t}\n\t} else {\n\t\t// ObjectPage case: we allow drag and drop in edit mode\n\t\treturn and(\n\t\t\tisPathUpdatableOnNavigation._type === \"Unresolvable\"\n\t\t\t\t? ifElse(isConstant(isPathUpdatableOnTarget), isPathUpdatableOnTarget, constant(true))\n\t\t\t\t: isPathUpdatableOnNavigation,\n\t\t\tUI.IsEditable,\n\t\t\ttableDefinition.control.isHierarchyParentNodeUpdatable!\n\t\t);\n\t}\n}\n\nexport function getDependents(\n\ttableProperties: TableBlockProperties,\n\tparameters: TableTemplatingParameters,\n\tvariantManagement: string | undefined,\n\tcollection: Context\n): UI5Element[] {\n\tconst id = tableProperties.contentId;\n\tconst tableDefinition = tableProperties.tableDefinition;\n\tconst tableType = tableProperties.tableDefinition.control.type;\n\tconst handlerProvider = parameters.handlerProvider;\n\n\tconst dependents: UI5Element[] = [];\n\tconst cutAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Cut) as StandardAction | undefined;\n\tif (cutAction?.isTemplated === \"true\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getCutHandler(false)}\n\t\t\t\tcommand=\"Cut\"\n\t\t\t\tenabled={cutAction.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\tconst copyAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Copy) as StandardAction | undefined;\n\tif (copyAction?.isTemplated === \"true\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getCopyHandler(false)}\n\t\t\t\tcommand=\"Copy\"\n\t\t\t\tenabled={copyAction.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\tconst pasteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Paste) as StandardAction | undefined;\n\tif (pasteAction?.visible !== \"false\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getPasteHandler(false)}\n\t\t\t\tcommand=\"Paste\"\n\t\t\t\tenabled={pasteAction?.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst createAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Create) as StandardAction | undefined;\n\tconst deleteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Delete) as StandardAction | undefined;\n\n\tif (\n\t\ttableDefinition.annotation.isInsertUpdateActionsTemplated &&\n\t\tcreateAction?.isTemplated === \"true\" &&\n\t\ttableDefinition.control.nodeType === undefined &&\n\t\ttableDefinition.control.enableUploadPlugin === false\n\t) {\n\t\t// The shortcut is not enabled in case of a create menu (i.e. when nodeType is defined)\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getCreateButtonPressHandler(false, false)}\n\t\t\t\tvisible={createAction.visible as unknown as boolean}\n\t\t\t\tenabled={createAction.enabled as unknown as boolean}\n\t\t\t\tcommand=\"Create\"\n\t\t\t/>\n\t\t);\n\t}\n\tif (deleteAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getDeleteButtonPressHandler(false)}\n\t\t\t\tvisible={deleteAction.visible as unknown as boolean}\n\t\t\t\tenabled={deleteAction.enabled as unknown as boolean}\n\t\t\t\tcommand=\"DeleteEntry\"\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Move up and down actions\n\tconst moveUpAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveUp) as StandardAction | undefined;\n\tconst moveDownAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveDown) as StandardAction | undefined;\n\tif (\n\t\tmoveUpAction &&\n\t\tmoveDownAction &&\n\t\tmoveUpAction.visible !== \"false\" &&\n\t\tmoveDownAction.visible !== \"false\" &&\n\t\ttableType === \"TreeTable\"\n\t) {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getMoveUpDownHandler(true, false)}\n\t\t\t\tcommand=\"TableMoveElementUp\"\n\t\t\t\tenabled={moveUpAction.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={handlerProvider.getMoveUpDownHandler(false, false)}\n\t\t\t\tcommand=\"TableMoveElementDown\"\n\t\t\t\tenabled={moveDownAction.enabled as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfor (const actionName in tableDefinition.commandActions) {\n\t\tconst action = tableDefinition.commandActions[actionName];\n\t\tconst actionCommand = getActionCommand(\n\t\t\tactionName,\n\t\t\taction,\n\t\t\tfalse,\n\t\t\tparameters,\n\t\t\tcollection,\n\t\t\ttableDefinition,\n\t\t\ttableProperties.contextObjectPath\n\t\t);\n\t\tif (actionCommand) {\n\t\t\tdependents.push(actionCommand);\n\t\t}\n\t}\n\n\tif (variantManagement === \"None\") {\n\t\t// Persistence provider offers persisting personalization changes without variant management\n\t\tdependents.push(<PersistenceProvider id={generate([id, \"PersistenceProvider\"])} for={id} />);\n\t}\n\n\tdependents.push(<ContextMenuSetting scope=\"Selection\" />);\n\n\tif (tableDefinition.control.enableUploadPlugin) {\n\t\tdependents.push(getUploadPlugin(tableDefinition, id, handlerProvider));\n\t}\n\n\treturn dependents;\n}\n\n/**\n * Returns the table actions.\n * @param table\n * @param parameters\n * @param collectionContext\n * @param collectionEntity\n * @returns The list of actions\n */\nfunction getActions(\n\ttable: TableBlockProperties,\n\tparameters: TableTemplatingParameters,\n\tcollectionContext: Context,\n\tcollectionEntity: EntitySet | NavigationProperty\n): Control[] | undefined {\n\tconst actions: Control[] = [];\n\tif (table.displaySegmentedButton) {\n\t\tconst alpButtonItems: SegmentedButtonItem[] = [];\n\t\tif (CommonHelper.isDesktop()) {\n\t\t\talpButtonItems.push(\n\t\t\t\t<SegmentedButtonItem\n\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_COMMON_HYBRID_SEGMENTED_BUTTON_ITEM_TOOLTIP}\"\n\t\t\t\t\tkey=\"Hybrid\"\n\t\t\t\t\ticon=\"sap-icon://chart-table-view\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\talpButtonItems.push(\n\t\t\t<SegmentedButtonItem\n\t\t\t\ttooltip=\"{sap.fe.i18n>M_COMMON_CHART_SEGMENTED_BUTTON_ITEM_TOOLTIP}\"\n\t\t\t\tkey=\"Chart\"\n\t\t\t\ticon=\"sap-icon://bar-chart\"\n\t\t\t/>\n\t\t);\n\t\talpButtonItems.push(\n\t\t\t<SegmentedButtonItem\n\t\t\t\ttooltip=\"{sap.fe.i18n>M_COMMON_TABLE_SEGMENTED_BUTTON_ITEM_TOOLTIP}\"\n\t\t\t\tkey=\"Table\"\n\t\t\t\ticon=\"sap-icon://table-view\"\n\t\t\t/>\n\t\t);\n\n\t\tactions.push(\n\t\t\t<ActionToolbarAction\n\t\t\t\tlayoutInformation={'{ aggregationName: \"end\", alignment: \"End\" }'}\n\t\t\t\tvisible={\"{= ${pageInternal>alpContentView} === 'Table' }\"}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\taction: (\n\t\t\t\t\t\t<SegmentedButton\n\t\t\t\t\t\t\tid={generate([table.contentId, \"SegmentedButton\", \"TemplateContentView\"])}\n\t\t\t\t\t\t\tselect={parameters.handlerProvider.segmentedButtonPress}\n\t\t\t\t\t\t\tselectedKey=\"{pageInternal>alpContentView}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\titems: alpButtonItems\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</SegmentedButton>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</ActionToolbarAction>\n\t\t);\n\t}\n\n\tactions.push(...getTableActionsTemplate(table, parameters, collectionContext, collectionEntity));\n\n\treturn actions.length > 0 ? actions : undefined;\n}\n\nfunction getRowSettings(\n\ttableDefinition: TableVisualization,\n\trowActionType: TableRowActionType | undefined,\n\ttableType: TableType,\n\thandlerProvider: TableEventHandlerProvider\n): RowSettings {\n\tconst rowActionItem = (\n\t\t<RowActionItem\n\t\t\ttype={rowActionType}\n\t\t\tpress={tableType === \"ResponsiveTable\" ? undefined : handlerProvider.rowPress}\n\t\t\tvisible={tableDefinition.annotation.row?.visible}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<RowSettings navigated={tableDefinition.annotation.row?.rowNavigated} highlight={tableDefinition.annotation.row?.rowHighlighting}>\n\t\t\t{{\n\t\t\t\trowActions: rowActionType === TableRowActionType.Navigation ? rowActionItem : undefined\n\t\t\t}}\n\t\t</RowSettings>\n\t);\n}\n\n/**\n * Generates the context menu for the table.\n * @param tableProperties\n * @param parameters\n * @param collectionEntity\n * @param rowActionType\n * @param collection\n * @param navigationInEditMode\n * @returns The context menu\n */\nfunction getContextMenu(\n\ttableProperties: TableBlockProperties,\n\tparameters: TableTemplatingParameters,\n\tcollectionEntity: EntitySet | NavigationProperty,\n\trowActionType: TableRowActionType | undefined,\n\tcollection: Context,\n\tnavigationInEditMode: boolean\n): Menu | undefined {\n\tconst menuItems = getTableContextMenuTemplate(tableProperties, parameters, collection, collectionEntity);\n\tif (rowActionType === TableRowActionType.Navigation && !navigationInEditMode) {\n\t\tmenuItems.push(getSharetoCollaborationManagerTemplate(parameters.handlerProvider, tableProperties.contentId));\n\t\tmenuItems.push(getOpenInNewTabTemplate(parameters.handlerProvider));\n\t}\n\tif (menuItems.length > 0) {\n\t\treturn (\n\t\t\t<Menu itemSelected={parameters.handlerProvider.contextMenuItemSelected}>\n\t\t\t\t{{\n\t\t\t\t\tdependents: getDependentsForContextMenu(\n\t\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\t\tparameters,\n\t\t\t\t\t\ttableProperties.contextObjectPath,\n\t\t\t\t\t\tcollection\n\t\t\t\t\t),\n\t\t\t\t\titems: menuItems\n\t\t\t\t}}\n\t\t\t</Menu>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the template string for the MenuItem.\n * @param handlerProvider\n * @param tableId\n * @returns The xml string representation for the MenuItem\n */\nfunction getSharetoCollaborationManagerTemplate(handlerProvider: TableEventHandlerProvider, tableId: string): MenuItem {\n\t// The visible property will be set at runtime when the collaboration manager is available and all other conditions are met\n\treturn (\n\t\t<MenuItem\n\t\t\tcore:require=\"{API: 'sap/fe/macros/table/TableAPI'}\"\n\t\t\tstartsSection={true}\n\t\t\tid={generate([tableId, \"ContextMenu\", \"CollaborationManager\"])}\n\t\t\ttext=\"{sap.fe.i18n>M_COMMON_TABLE_CONTEXT_MENU_SHARE_TO_COLLABORATION_MANAGER}\"\n\t\t\tpress={handlerProvider.contextMenuShareToCollaborationManager}\n\t\t\tenabled=\"{= ${internal>contextmenu/numberOfSelectedContexts} > 0}\"\n\t\t\tvisible={false}\n\t\t/>\n\t);\n}\n\n/**\n * Generates the template string for the MenuItem.\n * @param handlerProvider\n * @returns The xml string representation for the MenuItem\n */\nfunction getOpenInNewTabTemplate(handlerProvider: TableEventHandlerProvider): MenuItem {\n\t// The 'Open in New Tab' action should not be visible for sticky sessions in edit mode\n\t// For the context menu, the visibility should also consider the 'inactiveContext' property:\n\t// only when at least one selected context is active (i.e. \"contextmenu/inactiveContext\" is false), the action should be visible in the context menu\n\t// The second is only relevant when the table manifest setting \"creationMode\" is \"InlineCreationRows\"\n\tconst visible = and(\n\t\tnot(and(pathInModel(\"/sessionOn\", \"internal\"), UI.IsEditable)),\n\t\tnot(pathInModel(\"contextmenu/inactiveContext\", \"internal\"))\n\t);\n\n\treturn (\n\t\t<MenuItem\n\t\t\tcore:require=\"{API: 'sap/fe/macros/table/TableAPI'}\"\n\t\t\tstartsSection={true}\n\t\t\ttext=\"{sap.fe.i18n>M_COMMON_TABLE_CONTEXT_MENU_OPEN_IN_NEW_TAB}\"\n\t\t\tpress={handlerProvider.contextMenuOpenInNewTab}\n\t\t\tenabled=\"{= ${internal>contextmenu/numberOfSelectedContexts} > 0}\"\n\t\t\tvisible={visible}\n\t\t/>\n\t);\n}\n\n/**\n * Generates the template string for the Menu dependents.\n * @param tableDefinition\n * @param parameters\n * @param contextObjectPath\n * @param collection\n * @returns The xml string representation  the Menu dependents\n */\nfunction getDependentsForContextMenu(\n\ttableDefinition: TableVisualization,\n\tparameters: TableTemplatingParameters,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>,\n\tcollection: Context\n): UI5Element[] | undefined {\n\tconst dependents: UI5Element[] = [];\n\tconst tableType = tableDefinition.control.type;\n\tconst createAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Create) as StandardAction | undefined;\n\tif (createAction?.isTemplated === \"true\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={parameters.handlerProvider.getCreateButtonPressHandler(true, false)}\n\t\t\t\tcommand=\"Create::ContextMenu\"\n\t\t\t\tvisible={createAction.visible as unknown as boolean}\n\t\t\t\tenabled={createAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst cutAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Cut) as StandardAction | undefined;\n\tif (cutAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={parameters.handlerProvider.getCutHandler(true)}\n\t\t\t\tcommand=\"Cut::ContextMenu\"\n\t\t\t\tenabled={cutAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\tconst copyAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Copy) as StandardAction | undefined;\n\tif (copyAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={parameters.handlerProvider.getCopyHandler(true)}\n\t\t\t\tcommand=\"Copy::ContextMenu\"\n\t\t\t\tenabled={copyAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\tconst pasteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Paste) as StandardAction | undefined;\n\tif (pasteAction?.visible !== \"false\" && tableType === \"TreeTable\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={parameters.handlerProvider.getPasteHandler(true)}\n\t\t\t\tcommand=\"Paste::ContextMenu\"\n\t\t\t\tenabled={pasteAction?.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst deleteAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.Delete) as StandardAction | undefined;\n\n\tif (deleteAction?.isTemplated === \"true\") {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={parameters.handlerProvider.getDeleteButtonPressHandler(true)}\n\t\t\t\tvisible={deleteAction.visible as unknown as boolean}\n\t\t\t\tenabled={deleteAction.enabledForContextMenu as unknown as boolean}\n\t\t\t\tcommand=\"DeleteEntry::ContextMenu\"\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Move up and down actions\n\tconst moveUpAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveUp) as StandardAction | undefined;\n\tconst moveDownAction = tableDefinition.actions.find((a) => a.key === StandardActionKeys.MoveDown) as StandardAction | undefined;\n\tif (\n\t\tmoveUpAction &&\n\t\tmoveDownAction &&\n\t\tmoveUpAction.visible !== \"false\" &&\n\t\tmoveDownAction.visible !== \"false\" &&\n\t\ttableType === \"TreeTable\"\n\t) {\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={parameters.handlerProvider.getMoveUpDownHandler(true, true)}\n\t\t\t\tcommand=\"TableMoveElementUp::ContextMenu\"\n\t\t\t\tenabled={moveUpAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t\tdependents.push(\n\t\t\t<CommandExecution\n\t\t\t\texecute={parameters.handlerProvider.getMoveUpDownHandler(false, true)}\n\t\t\t\tcommand=\"TableMoveElementDown::ContextMenu\"\n\t\t\t\tenabled={moveDownAction.enabledForContextMenu as unknown as boolean}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfor (const actionName in tableDefinition.commandActions) {\n\t\tconst action = tableDefinition.commandActions[actionName];\n\t\tconst actionCommand = getActionCommand(actionName, action, true, parameters, collection, tableDefinition, contextObjectPath);\n\t\tif (actionCommand) {\n\t\t\tdependents.push(actionCommand);\n\t\t}\n\t}\n\treturn dependents.length > 0 ? dependents : undefined;\n}\n\n/**\n * Generates the VariantManagement for the table.\n * @param variantManagement\n * @param id\n * @param headerLevel\n * @param handlerProvider\n * @returns The VariantManagement control\n */\nfunction getVariantManagement(\n\tvariantManagement: string,\n\tid: string,\n\theaderLevel: TitleLevel,\n\thandlerProvider: TableEventHandlerProvider\n): VariantManagement | undefined {\n\tif (variantManagement === \"Control\") {\n\t\treturn (\n\t\t\t<VariantManagement\n\t\t\t\tid={generate([id, \"VM\"])}\n\t\t\t\tshowSetAsDefault={true}\n\t\t\t\tselect={handlerProvider.variantSelected}\n\t\t\t\theaderLevel={headerLevel}\n\t\t\t\tsave={handlerProvider.variantSaved}\n\t\t\t\tfor={[id]}\n\t\t\t></VariantManagement>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the QuickVariantSelection control for the table.\n * @param tableProperties The table properties\n * @returns The QuickVariantSelection control\n */\nfunction getQuickFilter(tableProperties: TableBlockProperties): QuickFilterSelector | undefined {\n\tconst quickFilters = tableProperties.tableDefinition.control.filters?.quickFilters;\n\tif (quickFilters) {\n\t\treturn (\n\t\t\t<QuickFilterSelector\n\t\t\t\tid={generate([tableProperties.contentId, \"QuickFilterContainer\"])}\n\t\t\t\tpaths={quickFilters.paths.map((path) => path.annotationPath)}\n\t\t\t\tshowCounts={quickFilters.showCounts}\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates CopyProvider for the table.\n * @param tableProperties\n * @returns The CopyProvider\n */\nfunction getCopyProvider(tableProperties: TableBlockProperties): CopyProvider {\n\tconst contextObjectPath = tableProperties.contextObjectPath;\n\n\tlet visibleExpression: BindingToolkitExpression<boolean>;\n\tif (tableProperties.tableDefinition.control.disableCopyToClipboard) {\n\t\tvisibleExpression = constant(false);\n\t} else if (tableProperties.tableDefinition.control.type === \"TreeTable\") {\n\t\t// For a TreeTable, the copy button shall be visible only when drag and drop is disabled\n\t\tif (contextObjectPath.startingEntitySet === contextObjectPath.targetEntitySet) {\n\t\t\t// ListReport: enable copy if the entity is not draft-enabled\n\t\t\tvisibleExpression = constant((contextObjectPath.startingEntitySet as EntitySet).annotations.Common?.DraftRoot === undefined);\n\t\t} else {\n\t\t\t// ObjectPage: enable copy in read-only\n\t\t\tvisibleExpression = not(UI.IsEditable);\n\t\t}\n\t} else {\n\t\tvisibleExpression = constant(true);\n\t}\n\n\treturn <CopyProvider visible={visibleExpression} />;\n}\n\n/**\n * Generates the CellSelector for the table.\n * @param tableProperties\n * @returns The CellSelector\n */\nfunction getCellSelector(tableProperties: TableBlockProperties): CellSelector | undefined {\n\tconst tableType = tableProperties.tableDefinition.control.type;\n\tif (\n\t\t!tableProperties.tableDefinition.control.disableCopyToClipboard &&\n\t\ttableType &&\n\t\t[\"ResponsiveTable\", \"GridTable\", \"TreeTable\"].includes(tableType)\n\t) {\n\t\treturn (\n\t\t\t<CellSelector\n\t\t\t\tenabled={or(\n\t\t\t\t\ttableType !== \"TreeTable\",\n\t\t\t\t\tnot(getDragAndDropEnabled(tableProperties.contextObjectPath, tableProperties.tableDefinition))\n\t\t\t\t)}\n\t\t\t\trangeLimit={200}\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the CreationRow for the table.\n * @param tableProperties\n * @param handlerProvider\n * @returns The CreationRow\n */\nfunction getCreationRow(tableProperties: TableBlockProperties, handlerProvider: TableEventHandlerProvider): CreationRow | undefined {\n\tif ((tableProperties.creationMode?.name as string) === CreationMode.CreationRow) {\n\t\tconst creationRowAction = tableProperties.tableDefinition.actions.find((a) => a.key === StandardActionKeys.CreationRow) as\n\t\t\t| StandardAction\n\t\t\t| undefined;\n\t\tif (creationRowAction?.isTemplated) {\n\t\t\tconst customData = createCustomDatas([\n\t\t\t\t{ key: \"disableAddRowButtonForEmptyData\", value: tableProperties.tableDefinition.control.disableAddRowButtonForEmptyData },\n\t\t\t\t{ key: \"customValidationFunction\", value: tableProperties.tableDefinition.control.customValidationFunction }\n\t\t\t]);\n\n\t\t\treturn (\n\t\t\t\t<CreationRow\n\t\t\t\t\tid={generate([tableProperties.contentId, CreationMode.CreationRow])}\n\t\t\t\t\tvisible={creationRowAction.visible as unknown as boolean}\n\t\t\t\t\tapply={handlerProvider.getCreateButtonPressHandler(false, true)}\n\t\t\t\t\tapplyEnabled={creationRowAction.enabled as unknown as boolean}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: customData\n\t\t\t\t\t}}\n\t\t\t\t</CreationRow>\n\t\t\t);\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the drag and drop config for the table.\n * @param tableProperties\n * @param handlerProvider\n * @returns The drag and drop config\n */\nfunction getDragAndDropConfig(\n\ttableProperties: TableBlockProperties,\n\thandlerProvider: TableEventHandlerProvider\n): DragDropConfig | undefined {\n\tif (tableProperties.tableDefinition.control.type === \"TreeTable\") {\n\t\treturn (\n\t\t\t<DragDropConfig\n\t\t\t\tenabled={compileExpression(getDragAndDropEnabled(tableProperties.contextObjectPath, tableProperties.tableDefinition))}\n\t\t\t\tdropPosition={tableProperties.tableDefinition.annotation.allowDropBetweenNodes === true ? \"OnOrBetween\" : \"On\"}\n\t\t\t\tdraggable={true}\n\t\t\t\tdroppable={true}\n\t\t\t\tdragStart={handlerProvider.dragStartDocument}\n\t\t\t\tdragEnter={handlerProvider.dragEnterDocument}\n\t\t\t\tdrop={handlerProvider.dropDocument}\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates an actionCommand for the table.\n * @param actionName The name of the action\n * @param action Action to be evaluated\n * @param forContextMenu Indicates if the action appears in the context menu. If false, the action appears in the table toolbar\n * @param parameters\n * @param collection\n * @param tableDefinition\n * @param contextObjectPath\n * @returns The actionCommand\n */\nfunction getActionCommand(\n\tactionName: string,\n\taction: CustomAction,\n\tforContextMenu: boolean,\n\tparameters: TableTemplatingParameters,\n\tcollection: Context,\n\ttableDefinition: TableVisualization,\n\tcontextObjectPath: DataModelObjectPath<LineItem | SelectionPresentationVariant | PresentationVariant>\n): CommandExecution | undefined {\n\tconst dataField = action.annotationPath\n\t\t? (parameters.convertedMetadata.resolvePath(action.annotationPath).target as DataFieldForAction | DataFieldForIntentBasedNavigation)\n\t\t: undefined;\n\tconst actionContextPath = action.annotationPath\n\t\t? CommonHelper.getActionContext(parameters.metaModel.createBindingContext(action.annotationPath + \"/Action\")!)\n\t\t: undefined;\n\tconst actionContext = actionContextPath ? parameters.metaModel.createBindingContext(actionContextPath) : undefined;\n\tconst dataFieldDataModelObjectPath = actionContext ? getInvolvedDataModelObjects(actionContext, collection) : undefined;\n\tconst isBound = (dataField as DataFieldForAction)?.ActionTarget?.isBound;\n\tconst isOperationAvailable =\n\t\t(dataField as DataFieldForAction)?.ActionTarget?.annotations?.Core?.OperationAvailable?.valueOf() !== false;\n\tconst displayCommandAction = action.type === \"ForAction\" ? isBound !== true || isOperationAvailable : true;\n\tconst enabled = !forContextMenu ? action.enabled : action.enabledForContextMenu;\n\tif (displayCommandAction && (!forContextMenu || TableHelper.isActionShownInContextMenu(action, contextObjectPath))) {\n\t\tconst command = !forContextMenu ? action.command : action.command + \"::ContextMenu\";\n\n\t\tconst actionParameters = {\n\t\t\tonExecuteAction: parameters.handlerProvider.getDataFieldForActionButtonPressHandler(\n\t\t\t\tdataField as DataFieldForAction,\n\t\t\t\taction,\n\t\t\t\tundefined,\n\t\t\t\tforContextMenu\n\t\t\t),\n\t\t\tonExecuteIBN: parameters.handlerProvider.getDataFieldForIBNPressHandler(action, false),\n\t\t\tonExecuteManifest: parameters.handlerProvider.getManifestActionPressHandler(action, forContextMenu),\n\t\t\tisIBNEnabled:\n\t\t\t\tenabled ??\n\t\t\t\tTableHelper.isDataFieldForIBNEnabled(\n\t\t\t\t\t{ collection: collection, tableDefinition: tableDefinition },\n\t\t\t\t\tdataField! as DataFieldForIntentBasedNavigation,\n\t\t\t\t\t!!(dataField as DataFieldForIntentBasedNavigation).RequiresContext,\n\t\t\t\t\t(dataField as DataFieldForIntentBasedNavigation).NavigationAvailable,\n\t\t\t\t\tforContextMenu\n\t\t\t\t),\n\t\t\tisActionEnabled:\n\t\t\t\tenabled ??\n\t\t\t\tTableHelper.isDataFieldForActionEnabled(\n\t\t\t\t\ttableDefinition,\n\t\t\t\t\t(dataField! as DataFieldForAction).Action,\n\t\t\t\t\t!!isBound,\n\t\t\t\t\tactionContextPath,\n\t\t\t\t\taction.enableOnSelect,\n\t\t\t\t\tdataFieldDataModelObjectPath?.targetEntityType,\n\t\t\t\t\tforContextMenu\n\t\t\t\t),\n\t\t\tisEnabled: enabled\n\t\t};\n\t\treturn getCommandExecutionForAction(command, tableDefinition.commandActions![actionName], actionParameters);\n\t}\n\treturn undefined;\n}\n\n/**\n * Generates the template string for the required modules.\n * @param tableDefinition\n * @returns The list of required modules\n */\nfunction getCoreRequire(tableDefinition: TableVisualization): string {\n\tconst customModules = tableDefinition.control.additionalRequiredModules ?? [];\n\n\treturn `{TableRuntime: 'sap/fe/macros/table/TableRuntime', API: 'sap/fe/macros/table/TableAPI'${customModules\n\t\t.map((module: string, index: number) => `, customModule${index + 1}: '${module}'`)\n\t\t.join(\"\")}}`;\n}\n\n/**\n * Create the template for a computed column.\n * Currently, this represents only the DraftIndicator and the SituationsIndicator.\n * @param tableId The table ID\n * @param column The computed column definition\n * @param collection The collection context used for context path\n * @param enableAnalytics Whether analytics are enabled\n * @returns The computed column.\n */\nexport function getComputedColumn(\n\ttableId: string,\n\tcolumn: ComputedTableColumn,\n\tcollection: Context,\n\tenableAnalytics: boolean | undefined\n): Column | undefined {\n\tif (column.isDraftIndicator) {\n\t\treturn (\n\t\t\t<Column\n\t\t\t\tid={generate([tableId, \"C\", \"computedColumns\", \"draftStatus\"])}\n\t\t\t\theaderVisible={false}\n\t\t\t\tpropertyKey={column.name}\n\t\t\t\theader={column.label}\n\t\t\t\ttooltip={column.tooltip}\n\t\t\t\twidth=\"3em\"\n\t\t\t>\n\t\t\t\t<DraftIndicator\n\t\t\t\t\tdraftIndicatorType={ObjectMarkerVisibility.IconOnly}\n\t\t\t\t\tcontextPath={collection.getPath()}\n\t\t\t\t\tusedInTable={true}\n\t\t\t\t\tusedInAnalyticalTable={enableAnalytics}\n\t\t\t\t/>\n\t\t\t</Column>\n\t\t);\n\t} else if (column.isSituationsIndicator) {\n\t\treturn (\n\t\t\t<Column\n\t\t\t\tid={generate([tableId, \"C\", \"computedColumns\", \"situationsIndicator\"])}\n\t\t\t\tpropertyKey={column.name}\n\t\t\t\theader={column.label}\n\t\t\t\ttooltip={column.tooltip}\n\t\t\t\theaderVisible={false}\n\t\t\t\twidth=\"4em\"\n\t\t\t>\n\t\t\t\t<SituationsIndicator contextPath={collection.getPath()} />\n\t\t\t</Column>\n\t\t);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\n/**\n * Create the template for a slot column.\n * This column will either reuse a template control that is defined at runtime (templateId case), or define a slot where the XML content is copied.\n * @param tableId The table ID\n * @param column The slot column definition\n * @param isReadOnly Whether the table is read only\n * @returns The slot column.\n */\nexport function getSlotColumn(tableId: string, column: CustomBasedTableColumn, isReadOnly: boolean | undefined): Column {\n\treturn (\n\t\t<Column\n\t\t\tid={generate([tableId, \"C\", column.id])}\n\t\t\tpropertyKey={column.name}\n\t\t\twidth={column.width}\n\t\t\thAlign={column.horizontalAlign}\n\t\t\theader={column.header}\n\t\t\ttooltip={column.tooltip}\n\t\t\trequired={isReadOnly ? undefined : column.required}\n\t\t>\n\t\t\t{{\n\t\t\t\textendedSettings: <ResponsiveColumnSettings importance={column.importance} />,\n\t\t\t\ttemplate: column.template\n\t\t\t}}\n\t\t</Column>\n\t);\n}\n\n/**\n * Create the template for the DraftIndicator.\n * @param collection The context of the collection\n * @param column The column definition\n * @returns The XML string representing the DraftIndicator.\n */\nexport function getDraftIndicator(collection: Context, column: AnnotationTableColumn): FormElementWrapper | undefined {\n\tif (\n\t\tcollection.getObject(\"@com.sap.vocabularies.Common.v1.DraftRoot\") &&\n\t\tcollection.getObject(\"./@com.sap.vocabularies.Common.v1.SemanticKey\") &&\n\t\tcolumn.formatOptions?.fieldGroupDraftIndicatorPropertyPath\n\t) {\n\t\treturn (\n\t\t\t<FormElementWrapper>\n\t\t\t\t<DraftIndicator\n\t\t\t\t\tdraftIndicatorType={ObjectMarkerVisibility.IconAndText}\n\t\t\t\t\tcontextPath={collection.getPath()}\n\t\t\t\t\tvisible={getDraftIndicatorVisibleBinding(column.formatOptions?.fieldGroupName)}\n\t\t\t\t\tariaLabelledBy={[\"this>ariaLabelledBy\"]}\n\t\t\t\t/>\n\t\t\t</FormElementWrapper>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Create the SituationIndicator ObjectStatus.\n * @param collection The context of the collection\n * @param column The column definition\n * @returns The ObjectStatus.\n */\nfunction getSituationIndicator(collection: Context, column: AnnotationTableColumn): ObjectStatus | undefined {\n\tif (\n\t\tcollection.getObject(\"./@com.sap.vocabularies.Common.v1.SemanticKey\") &&\n\t\tcolumn.formatOptions?.fieldGroupDraftIndicatorPropertyPath\n\t) {\n\t\treturn (\n\t\t\t<ObjectStatus\n\t\t\t\tvisible={column.formatOptions?.showErrorObjectStatus}\n\t\t\t\tclass=\"sapUiSmallMarginBottom\"\n\t\t\t\ttext=\"{sap.fe.i18n>Contains_Errors}\"\n\t\t\t\tstate=\"Error\"\n\t\t\t/>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Determines the default date-time format style based on the given data field context.\n * @param dataFieldContext The context of the data field\n * @returns Returns 'short' if the underlying data field is of the type 'Edm.TimeOfDay', otherwise undefined.\n */\nfunction getDefaultDateTimeStyle(dataFieldContext: Context): DateTimeStyle | undefined {\n\tconst targetObject = getInvolvedDataModelObjects<DataFieldAbstractTypes>(dataFieldContext).targetObject;\n\tif (isDataField(targetObject) && targetObject.Value?.$target?.type === \"Edm.TimeOfDay\") {\n\t\treturn \"short\";\n\t}\n\tif (\n\t\tisDataFieldForAnnotation(targetObject) &&\n\t\thasDataPointTarget(targetObject) &&\n\t\t(targetObject.Target.$target as DataPoint)?.Value.$target.type === \"Edm.TimeOfDay\"\n\t) {\n\t\treturn \"short\";\n\t}\n}\n\n/**\n * Create the template for the creation row.\n * @param tableId The table ID\n * @param column The column definition\n * @param tableType The type of the table\n * @param creationMode The creation mode\n * @param isTableReadOnly Whether the table is read only\n * @param collection The collection context\n * @param dataField The data field context\n * @param fieldMode The field mode\n * @param enableAnalytics Whether analytics are enabled\n * @param handlerProvider\n * @returns The XML string representing the creation row.\n */\nfunction getCreationTemplate(\n\ttableId: string,\n\tcolumn: AnnotationTableColumn,\n\ttableType: TableType,\n\tcreationMode: PropertiesOf<TableCreationOptions> | undefined,\n\tisTableReadOnly: boolean | undefined,\n\tcollection: Context,\n\tdataField: Context,\n\tfieldMode: string | undefined,\n\tenableAnalytics: boolean | undefined,\n\thandlerProvider: TableEventHandlerProvider\n): string | undefined {\n\tif ((creationMode?.name as string) === \"CreationRow\") {\n\t\tlet columnEditMode: string | undefined;\n\t\tswitch (isTableReadOnly) {\n\t\t\tcase true:\n\t\t\t\tcolumnEditMode = \"Display\";\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\tcolumnEditMode = \"Editable\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcolumnEditMode = undefined;\n\t\t\t\tbreak;\n\t\t}\n\t\tconst dataFieldObject = dataField.getObject();\n\n\t\tconst formatOptions = {\n\t\t\tfieldMode: fieldMode,\n\t\t\ttextLinesEdit: column.formatOptions?.textLinesEdit,\n\t\t\ttextMaxLines: column.formatOptions?.textMaxLines === undefined ? undefined : column.formatOptions?.textMaxLines,\n\t\t\ttextMaxLength: column.formatOptions?.textMaxLength,\n\t\t\ttextMaxCharactersDisplay: column.formatOptions?.textMaxCharactersDisplay,\n\t\t\ttextExpandBehaviorDisplay: column.formatOptions?.textExpandBehaviorDisplay,\n\t\t\ttextAlignMode: \"Table\",\n\t\t\tsemanticKeyStyle: tableType === \"ResponsiveTable\" ? \"ObjectIdentifier\" : \"Label\",\n\t\t\thasDraftIndicator: column.formatOptions?.hasDraftIndicator,\n\t\t\tfieldGroupDraftIndicatorPropertyPath: column.formatOptions?.fieldGroupDraftIndicatorPropertyPath,\n\t\t\tfieldGroupName: column.formatOptions?.fieldGroupName,\n\t\t\tshowIconUrl: dataFieldObject?.Inline && !!dataFieldObject?.IconUrl,\n\t\t\tignoreNavigationAvailable: enableAnalytics ?? false,\n\t\t\tisCurrencyOrUnitAligned: true,\n\t\t\tdateTimeStyle: getDefaultDateTimeStyle(dataField)\n\t\t};\n\n\t\treturn (\n\t\t\t<Field\n\t\t\t\tcore:require=\"{TableRuntime: 'sap/fe/macros/table/TableRuntime'}\"\n\t\t\t\tvhIdPrefix={generate([tableId, \"TableValueHelp\"])}\n\t\t\t\teditMode={columnEditMode}\n\t\t\t\tcontextPath={collection.getPath()}\n\t\t\t\tmetaPath={dataField.getPath()}\n\t\t\t\twrap={tableType === \"ResponsiveTable\"}\n\t\t\t\tchange={handlerProvider.fieldChangeInCreationRow}\n\t\t\t\tshowErrorObjectStatus={column.formatOptions?.showErrorObjectStatus as unknown as boolean}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tformatOptions: <FieldFormatOptions {...formatOptions} />\n\t\t\t\t}}\n\t\t\t</Field>\n\t\t);\n\t}\n\treturn undefined;\n}\n\n/**\n * Retrieves the template for the macros:Field inside the column.\n * @param tableId The table ID\n * @param tableDefinition The table definition\n * @param column The column definition\n * @param dataFieldContext The data field context\n * @param collection The collection context\n * @param enableAnalytics Whether analytics are enabled\n * @param tableType The type of the table\n * @param isTableReadOnly Whether the table is read only\n * @param creationMode The creation mode\n * @param fieldMode The field mode\n * @param isCompactType Whether the table is compact\n * @param textAlign The text alignment\n * @param ariaLabelledBy The aria labelled by\n * @param showEmptyIndicator Whether to show the empty indicator\n * @param className\n * @param handlerProvider The handler provider\n * @returns The XML string representing the field.\n */\nexport function getMacroFieldTemplate(\n\ttableId: string,\n\ttableDefinition: TableVisualization,\n\tcolumn: AnnotationTableColumn,\n\tdataFieldContext: Context,\n\tcollection: Context,\n\tenableAnalytics: boolean | undefined,\n\ttableType: TableType,\n\tisTableReadOnly: boolean | undefined,\n\tcreationMode: PropertiesOf<TableCreationOptions> | undefined,\n\tfieldMode: string | undefined,\n\tisCompactType: boolean | undefined,\n\ttextAlign: string | undefined,\n\tariaLabelledBy: string | undefined,\n\tshowEmptyIndicator: boolean | undefined,\n\tclassName: string | undefined,\n\thandlerProvider: TableEventHandlerProvider\n): string {\n\tconst dataFieldObject = dataFieldContext.getObject();\n\tlet columnEditMode: string | undefined;\n\tswitch (isTableReadOnly) {\n\t\tcase true:\n\t\t\tcolumnEditMode = \"Display\";\n\t\t\tbreak;\n\t\tcase false:\n\t\t\tcolumnEditMode = \"Editable\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcolumnEditMode = undefined;\n\t}\n\tif (tableDefinition.control.enableUploadPlugin && column.typeConfig?.className === \"Edm.Stream\") {\n\t\tcolumnEditMode = \"Display\";\n\t}\n\n\tconst formatOptions = {\n\t\tfieldMode: fieldMode,\n\t\ttextLinesEdit: column.formatOptions?.textLinesEdit,\n\t\ttextMaxLines: column.formatOptions?.textMaxLines === undefined ? undefined : column.formatOptions?.textMaxLines,\n\t\ttextMaxCharactersDisplay: column.formatOptions?.textMaxCharactersDisplay,\n\t\ttextMaxLength: column.formatOptions?.textMaxLength,\n\t\ttextExpandBehaviorDisplay: column.formatOptions?.textExpandBehaviorDisplay,\n\t\ttextAlignMode: \"Table\",\n\t\tshowEmptyIndicator: showEmptyIndicator,\n\t\tsemanticKeyStyle: tableType === \"ResponsiveTable\" ? \"ObjectIdentifier\" : \"Label\",\n\t\thasDraftIndicator: column.formatOptions?.hasDraftIndicator,\n\t\tfieldGroupDraftIndicatorPropertyPath: column.formatOptions?.fieldGroupDraftIndicatorPropertyPath,\n\t\tfieldGroupName: column.formatOptions?.fieldGroupName,\n\t\tshowIconUrl: dataFieldObject?.Inline && !!dataFieldObject?.IconUrl,\n\t\tignoreNavigationAvailable: enableAnalytics ?? false,\n\t\tisAnalytics: enableAnalytics,\n\t\tforInlineCreationRows: creationMode?.name === \"InlineCreationRows\",\n\t\tisCurrencyOrUnitAligned: true,\n\t\tcompactSemanticKey: isCompactType === undefined ? undefined : `${isCompactType}`,\n\t\tdateTimeStyle: getDefaultDateTimeStyle(dataFieldContext),\n\t\tisAnalyticalAggregatedRow: tableDefinition.control.analyticalConfiguration?.aggregationOnLeafLevel\n\t};\n\treturn (\n\t\t<Field\n\t\t\tvhIdPrefix={generate([tableId, \"TableValueHelp\"])}\n\t\t\teditMode={columnEditMode}\n\t\t\tcontextPath={collection.getPath()}\n\t\t\tmetaPath={dataFieldContext.getPath()}\n\t\t\ttextAlign={textAlign}\n\t\t\twrap={tableType === \"ResponsiveTable\"}\n\t\t\tclass={className}\n\t\t\tliveChange={handlerProvider.fieldLiveChange}\n\t\t\tariaLabelledBy={ariaLabelledBy ? [ariaLabelledBy] : undefined}\n\t\t\tnavigateAfterAction={column.isNavigable}\n\t\t\tshowErrorObjectStatus={column.formatOptions?.showErrorObjectStatus as unknown as boolean}\n\t\t>\n\t\t\t{{\n\t\t\t\tformatOptions: <FieldFormatOptions {...formatOptions} />\n\t\t\t}}\n\t\t</Field>\n\t);\n}\n\n/**\n * Create the template for the column.\n * @param tableId The table ID\n * @param tableProperties The table properties\n * @param column The column definition\n * @param dataFieldOP The data field object path\n * @param dataFieldContext The data field context\n * @param collection The collection context\n * @param handlerProvider The handler provider\n * @returns The XML string representing the column.\n */\nfunction getColumnContentTemplate(\n\ttableId: string,\n\ttableProperties: TableBlockProperties,\n\tcolumn: AnnotationTableColumn,\n\tdataFieldOP: DataModelObjectPath<DataFieldAbstractTypes>,\n\tdataFieldContext: Context,\n\tcollection: Context,\n\thandlerProvider: TableEventHandlerProvider\n): { template: string; creationTemplate?: string } {\n\tlet template: string;\n\tlet creationTemplate: string | undefined;\n\n\tconst tableDefinition = tableProperties.tableDefinition;\n\tconst enableAnalytics = tableProperties.tableDefinition.enableAnalytics;\n\tconst tableType = tableProperties.tableDefinition.control.type;\n\tconst isTableReadOnly = tableProperties.readOnly;\n\tconst creationMode = tableProperties.creationMode;\n\tconst fieldMode = tableProperties.fieldMode;\n\tconst isCompactType = tableProperties.tableDefinition.control.isCompactType;\n\n\tconst dataField = dataFieldOP.targetObject as DataFieldAbstractTypes;\n\tif (\n\t\tisAnnotationOfType<DataFieldForAnnotation>(dataField, UIAnnotationTypes.DataFieldForAnnotation) &&\n\t\t(isAnnotationOfTerm<Chart>(dataField.Target.$target, UIAnnotationTerms.Chart) ||\n\t\t\tisAnnotationOfTerm<PresentationVariant>(dataField.Target.$target, UIAnnotationTerms.PresentationVariant))\n\t) {\n\t\tconst showOnlyChart = (tableType === \"ResponsiveTable\" ? !column.settings?.showMicroChartLabel : undefined) ?? true;\n\t\tconst microChartSize = tableType === \"ResponsiveTable\" ? column.settings?.microChartSize ?? \"XS\" : \"XS\";\n\t\tlet microChartCollection = collection\n\t\t\t.getModel()\n\t\t\t.createBindingContext(collection.getPath(dataFieldContext.getObject(\"Target/$AnnotationPath\")));\n\t\tmicroChartCollection = collection.getModel().createBindingContext(CommonHelper.getNavigationContext(microChartCollection));\n\t\t//We only consider the first visualization of the PV in PV case and expect it to be a chart (similar to VisualFilters)\n\t\ttemplate = (\n\t\t\t<MicroChart\n\t\t\t\tid={generate([tableId, dataField])}\n\t\t\t\tcontextPath={microChartCollection.getPath()}\n\t\t\t\tmetaPath={dataFieldContext\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.createBindingContext(dataFieldContext.getPath() + \"/Target/$AnnotationPath\")\n\t\t\t\t\t.getPath()}\n\t\t\t\tshowOnlyChart={showOnlyChart}\n\t\t\t\tsize={microChartSize ?? \"XS\"}\n\t\t\t\thideOnNoData={true}\n\t\t\t\tisAnalytics={enableAnalytics}\n\t\t\t/>\n\t\t);\n\t} else if (\n\t\tisAnnotationOfType<DataField>(dataField, UIAnnotationTypes.DataField) &&\n\t\tisMultiValueField(enhanceDataModelPath(dataFieldOP, dataField.Value.path))\n\t) {\n\t\t// when evaluating \"@$ui5.context.isInactive\" we are forced to add isTruthy to force the binding evaluation\n\t\tconst isReadOnly = compileExpression(\n\t\t\tifElse(\n\t\t\t\tor(isTableReadOnly === true, and(isTruthy(UI.IsInactive), creationMode?.name === \"InlineCreationRows\")),\n\t\t\t\tconstant(true),\n\t\t\t\tifElse(equal(fieldMode, \"nowrapper\"), constant(true), constant(undefined))\n\t\t\t)\n\t\t);\n\n\t\ttemplate = <MultiValueFieldBlock contextPath={collection.getPath()} metaPath={dataFieldContext.getPath()} readOnly={isReadOnly} />;\n\t} else if (\n\t\tisAnnotationOfType<DataFieldForAnnotation>(dataField, UIAnnotationTypes.DataFieldForAnnotation) &&\n\t\tisAnnotationOfTerm<FieldGroup>(dataField.Target.$target, UIAnnotationTerms.FieldGroup)\n\t) {\n\t\tconst fieldGroup: FieldGroup = dataField.Target.$target;\n\t\tconst dataFieldCollectionContext = dataFieldContext\n\t\t\t.getModel()\n\t\t\t.createBindingContext(dataFieldContext.getPath() + \"/Target/$AnnotationPath/Data\");\n\t\tconst fieldGroupColectionLength = fieldGroup.Data.length - 1;\n\n\t\tconst items = fieldGroup.Data.map((fieldGroupDataField: DataFieldAbstractTypes, fieldGroupDataFieldIdx: number) => {\n\t\t\tconst fieldGroupDataFieldContext = dataFieldCollectionContext\n\t\t\t\t.getModel()\n\t\t\t\t.createBindingContext(dataFieldCollectionContext.getPath() + \"/\" + fieldGroupDataFieldIdx);\n\t\t\tconst fieldGroupDataFieldOP = getInvolvedDataModelObjects<DataFieldAbstractTypes>(fieldGroupDataFieldContext);\n\t\t\tconst fieldGroupLabel = FieldHelper.computeLabelText(fieldGroupDataFieldContext.getObject(), {\n\t\t\t\tcontext: fieldGroupDataFieldContext\n\t\t\t});\n\t\t\tif (column.showDataFieldsLabel && !!fieldGroupLabel) {\n\t\t\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.macros\")!;\n\t\t\t\treturn (\n\t\t\t\t\t<HBox\n\t\t\t\t\t\tvisible={getVisibleExpression(fieldGroupDataFieldOP)}\n\t\t\t\t\t\talignItems={FieldHelper.buildExpressionForAlignItems(\n\t\t\t\t\t\t\tfieldGroupDataFieldContext.getObject(\"Target/$AnnotationPath/Visualization/$EnumMember\")\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tid={TableHelper.getFieldGroupLabelStableId(tableId, fieldGroupDataFieldOP)}\n\t\t\t\t\t\t\ttext={resourceBundle.getText(\"HEADER_FORM_LABEL\", [fieldGroupLabel])}\n\t\t\t\t\t\t\tclass=\"sapUiTinyMarginEnd\"\n\t\t\t\t\t\t\tvisible={getVisibleExpression(fieldGroupDataFieldOP)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VBox>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\tlayoutData: <FlexItemData growFactor=\"1\" />,\n\t\t\t\t\t\t\t\titems: getMacroFieldTemplate(\n\t\t\t\t\t\t\t\t\ttableId,\n\t\t\t\t\t\t\t\t\ttableDefinition,\n\t\t\t\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\t\t\t\tfieldGroupDataFieldContext,\n\t\t\t\t\t\t\t\t\tcollection,\n\t\t\t\t\t\t\t\t\tenableAnalytics,\n\t\t\t\t\t\t\t\t\ttableType,\n\t\t\t\t\t\t\t\t\tisTableReadOnly,\n\t\t\t\t\t\t\t\t\tcreationMode,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tisCompactType,\n\t\t\t\t\t\t\t\t\t\"Left\",\n\t\t\t\t\t\t\t\t\t`${TableHelper.getColumnStableId(tableId, dataFieldOP)} ${TableHelper.getFieldGroupLabelStableId(\n\t\t\t\t\t\t\t\t\t\ttableId,\n\t\t\t\t\t\t\t\t\t\tfieldGroupDataFieldOP\n\t\t\t\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\tTableHelper.getMarginClass(\n\t\t\t\t\t\t\t\t\t\tfieldGroupDataFieldContext.getObject(\"Target/$AnnotationPath/Visualization/$EnumMember\"),\n\t\t\t\t\t\t\t\t\t\tfieldGroupDataFieldIdx === fieldGroupColectionLength\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\thandlerProvider\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t</HBox>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn getMacroFieldTemplate(\n\t\t\t\t\ttableId,\n\t\t\t\t\ttableDefinition,\n\t\t\t\t\tcolumn,\n\t\t\t\t\tfieldGroupDataFieldContext,\n\t\t\t\t\tcollection,\n\t\t\t\t\tenableAnalytics,\n\t\t\t\t\ttableType,\n\t\t\t\t\tisTableReadOnly,\n\t\t\t\t\tcreationMode,\n\t\t\t\t\tfieldMode,\n\t\t\t\t\tisCompactType,\n\t\t\t\t\tundefined,\n\t\t\t\t\tTableHelper.getColumnStableId(tableId, dataFieldOP),\n\t\t\t\t\tundefined,\n\t\t\t\t\tTableHelper.getMarginClass(\n\t\t\t\t\t\tfieldGroupDataFieldContext.getObject(\"Target/$AnnotationPath/Visualization/$EnumMember\"),\n\t\t\t\t\t\tfieldGroupDataFieldIdx === fieldGroupColectionLength\n\t\t\t\t\t),\n\t\t\t\t\thandlerProvider\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tconst draftIndicator = getDraftIndicator(collection, column);\n\t\tif (draftIndicator) {\n\t\t\titems.push(draftIndicator);\n\t\t}\n\t\tconst situationIndicator = getSituationIndicator(collection, column);\n\t\tif (situationIndicator) {\n\t\t\titems.push(situationIndicator);\n\t\t}\n\n\t\ttemplate = (\n\t\t\t<VBox\n\t\t\t\tvisible={TableHelper.getVBoxVisibility(\n\t\t\t\t\tdataFieldCollectionContext.getObject(),\n\t\t\t\t\tcolumn.FieldGroupHiddenExpressions,\n\t\t\t\t\tdataFieldContext.getObject()\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\titems: items\n\t\t\t\t}}\n\t\t\t</VBox>\n\t\t);\n\t} else {\n\t\ttemplate = getMacroFieldTemplate(\n\t\t\ttableId,\n\t\t\ttableDefinition,\n\t\t\tcolumn,\n\t\t\tdataFieldContext,\n\t\t\tcollection,\n\t\t\tenableAnalytics,\n\t\t\ttableType,\n\t\t\tisTableReadOnly,\n\t\t\tcreationMode,\n\t\t\tfieldMode,\n\t\t\tisCompactType,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t\tundefined,\n\t\t\thandlerProvider\n\t\t);\n\t\tcreationTemplate = getCreationTemplate(\n\t\t\ttableId,\n\t\t\tcolumn,\n\t\t\ttableType,\n\t\t\tcreationMode,\n\t\t\tisTableReadOnly,\n\t\t\tcollection,\n\t\t\tdataFieldContext,\n\t\t\tfieldMode,\n\t\t\tenableAnalytics,\n\t\t\thandlerProvider\n\t\t);\n\t}\n\n\treturn { template, creationTemplate };\n}\n\n/**\n * Create the template for a column.\n * @param tableId The table ID\n * @param tableProperties Table properties\n * @param column The column definition\n * @param collection The collection context used for context path\n * @param handlerProvider The handler provider\n * @returns The XML string representing the column.\n */\nexport function getColumnTemplate(\n\ttableId: string,\n\ttableProperties: TableBlockProperties,\n\tcolumn: AnnotationTableColumn,\n\tcollection: Context,\n\thandlerProvider: TableEventHandlerProvider\n): Column | undefined {\n\tlet dataFieldContext = collection.getModel().createBindingContext(column.annotationPath);\n\tif (!dataFieldContext) {\n\t\treturn undefined;\n\t}\n\tdataFieldContext = collection.getModel().createBindingContext(FieldHelper.getDataFieldDefault(dataFieldContext));\n\tconst dataFieldObjectModelPath = getInvolvedDataModelObjects<DataFieldAbstractTypes>(dataFieldContext, collection);\n\tconst dataFieldObject = dataFieldContext?.getObject?.() ?? {};\n\n\tconst templates = getColumnContentTemplate(\n\t\ttableId,\n\t\ttableProperties,\n\t\tcolumn,\n\t\tdataFieldObjectModelPath,\n\t\tdataFieldContext,\n\t\tcollection,\n\t\thandlerProvider\n\t);\n\n\tconst enableAutoColumnWidth = tableProperties.enableAutoColumnWidth ?? tableProperties.tableDefinition.control.enableAutoColumnWidth;\n\tconst widthIncludingColumnHeader = tableProperties.tableDefinition.control.widthIncludingColumnHeader;\n\tconst tableType = tableProperties.tableDefinition.control.type;\n\n\treturn (\n\t\t<Column\n\t\t\tid={TableHelper.getColumnStableId(tableId, dataFieldObjectModelPath)}\n\t\t\twidth={\n\t\t\t\t!CommonUtils.isSmallDevice() || column.width\n\t\t\t\t\t? TableHelper.getColumnWidth(\n\t\t\t\t\t\t\t{ enableAutoColumnWidth, widthIncludingColumnHeader, tableType },\n\t\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\t\tdataFieldObject,\n\t\t\t\t\t\t\tTableHelper.getTextOnActionField(dataFieldObject, { context: dataFieldContext }),\n\t\t\t\t\t\t\tdataFieldObjectModelPath,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: dataFieldContext.getObject(\"Target/$AnnotationPath/Title\") || \"\",\n\t\t\t\t\t\t\t\tdescription: dataFieldContext.getObject(\"Target/$AnnotationPath/Title\") || \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t\tminWidth={\n\t\t\t\tCommonUtils.isSmallDevice()\n\t\t\t\t\t? TableHelper.getColumnWidth(\n\t\t\t\t\t\t\t{ enableAutoColumnWidth, widthIncludingColumnHeader, tableType },\n\t\t\t\t\t\t\tcolumn,\n\t\t\t\t\t\t\tdataFieldObject,\n\t\t\t\t\t\t\tTableHelper.getTextOnActionField(dataFieldObject, { context: dataFieldContext }),\n\t\t\t\t\t\t\tdataFieldObjectModelPath,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: dataFieldContext.getObject(\"Target/$AnnotationPath/Title\") || \"\",\n\t\t\t\t\t\t\t\tdescription: dataFieldContext.getObject(\"Target/$AnnotationPath/Description\") || \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t\theader={column.label || column.name}\n\t\t\tpropertyKey={column.name}\n\t\t\thAlign={column.horizontalAlign || FieldHelper.getColumnAlignment(dataFieldObject, { collection: collection })}\n\t\t\theaderVisible={TableHelper.setHeaderLabelVisibility(dataFieldObject, dataFieldContext.getObject(\"Target/$AnnotationPath/Data\"))}\n\t\t\ttooltip={column.tooltip}\n\t\t\trequired={tableProperties.readOnly ? undefined : column.required}\n\t\t>\n\t\t\t{{\n\t\t\t\tcustomData: createCustomData(\"showDataFieldsLabel\", column.showDataFieldsLabel),\n\t\t\t\textendedSettings: <ResponsiveColumnSettings importance={column.importance} />,\n\t\t\t\ttemplate: templates.template,\n\t\t\t\tcreationTemplate: templates.creationTemplate\n\t\t\t}}\n\t\t</Column>\n\t);\n}\n\n/**\n * Create the template for all the columns in the table.\n * @param tableProperties The table properties\n * @param collection The collection context used for context path\n * @param handlerProvider The handler provider\n * @returns The XML string representing the columns.\n */\nfunction getColumns(tableProperties: TableBlockProperties, collection: Context, handlerProvider: TableEventHandlerProvider): Column[] {\n\tconst tableId = tableProperties.contentId;\n\treturn tableProperties.tableDefinition.columns\n\t\t.map((column) => {\n\t\t\tif (column.availability === \"Default\" && column.type === \"Default\") {\n\t\t\t\tLog.error(\"Custom columns defined in the manifest are not supported when using a table building block.\");\n\t\t\t\tthrow new Error(\"Custom columns defined in the manifest are not supported when using a table building block.\");\n\t\t\t} else if (column.availability === \"Default\" && column.type === \"Annotation\") {\n\t\t\t\treturn getColumnTemplate(tableId, tableProperties, column as AnnotationTableColumn, collection, handlerProvider);\n\t\t\t} else if (column.availability === \"Default\" && column.type === \"Slot\") {\n\t\t\t\treturn getSlotColumn(tableId, column as CustomBasedTableColumn, tableProperties.readOnly);\n\t\t\t} else if (column.availability === \"Default\" && column.type === \"Computed\") {\n\t\t\t\treturn getComputedColumn(\n\t\t\t\t\ttableId,\n\t\t\t\t\tcolumn as ComputedTableColumn,\n\t\t\t\t\tcollection,\n\t\t\t\t\ttableProperties.tableDefinition.enableAnalytics\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t})\n\t\t.filter((column) => column !== undefined) as Column[];\n}\n\nexport type TableBlockProperties = Omit<StrictPropertiesOf<TableAPI>, \"metaPath\" | \"contextPath\"> & {\n\tgetTranslatedText(text: string, parameters?: unknown[], metaPath?: string): string;\n\t[\"fl:flexibility\"]?: string;\n};\n/**\n * Determines the designtime for the MDC table.\n * @returns The value to be assigned to dt:designtime\n */\nfunction getDesigntime(): string | undefined {\n\treturn \"sap/fe/macros/table/designtime/Table.designtime\";\n}\n\n/**\n * Maps the internal P13n table mode (string) to the corresponding MDC enum.\n * @param stringMode\n * @returns The MDC enum value\n */\nfunction getMDCP13nMode(stringMode: string): TableP13nMode {\n\tswitch (stringMode) {\n\t\tcase \"Aggregate\":\n\t\t\treturn TableP13nMode.Aggregate;\n\t\tcase \"Sort\":\n\t\t\treturn TableP13nMode.Sort;\n\t\tcase \"Column\":\n\t\t\treturn TableP13nMode.Column;\n\t\tcase \"Filter\":\n\t\t\treturn TableP13nMode.Filter;\n\t\tcase \"Group\":\n\t\t\treturn TableP13nMode.Group;\n\t\tdefault:\n\t\t\tLog.error(\"Unknown P13n mode: \" + stringMode);\n\t\t\treturn TableP13nMode.Column;\n\t}\n}\n\nexport function getMDCTableTemplate(tableProperties: TableBlockProperties, parameters: TableTemplatingParameters): MDCTable {\n\t// For a TreeTable in a ListReport displaying a draft-enabled entity, we only display active instances\n\tconst navigationInfo = tableProperties.tableDefinition.annotation?.row?.navigationInfo as {\n\t\troutePath?: string;\n\t\tnavigationInEditMode?: boolean;\n\t};\n\tconst target = navigationInfo?.routePath;\n\tlet navigationInEditMode = false;\n\tif (target) {\n\t\tconst targetInformation = parameters.appComponent.getRoutingService()._getTargetInformation(target);\n\t\tnavigationInEditMode = (targetInformation?.options?.settings?.openInEditMode as boolean | undefined) ?? false;\n\t}\n\n\tconst tableType = tableProperties.tableDefinition.control.type;\n\tconst contextObjectPath = tableProperties.contextObjectPath;\n\tconst filterOnActiveEntities =\n\t\t(tableType === \"TreeTable\" || tableProperties.tableDefinition.enableAnalytics === true) &&\n\t\tcontextObjectPath.startingEntitySet === contextObjectPath.targetEntitySet &&\n\t\tModelHelper.isObjectPathDraftSupported(contextObjectPath);\n\tconst delegate = TableHelper.getDelegate(\n\t\ttableProperties.tableDefinition,\n\t\ttableProperties.isAlp === true,\n\t\ttableProperties.tableDefinition.annotation.entityName,\n\t\tfilterOnActiveEntities\n\t);\n\tconst headerVisible = tableProperties.headerVisible ?? tableProperties.tableDefinition.control.headerVisible;\n\tconst currentHeader = tableProperties.header ?? tableProperties.tableDefinition.annotation.title;\n\tconst headerBindingExpression = buildExpressionForHeaderVisible(currentHeader ?? \"\", tableProperties.tabTitle ?? \"\", !!headerVisible);\n\tconst pasteAction = tableProperties.tableDefinition.actions.find((a) => a.key === StandardActionKeys.Paste);\n\tconst collectionEntity = parameters.convertedMetadata.resolvePath(tableProperties.tableDefinition.annotation.collection).target as\n\t\t| EntitySet\n\t\t| NavigationProperty;\n\tconst modelContextChange = tableType === \"TreeTable\" ? parameters.handlerProvider.tableContextChange : undefined;\n\tconst lineItem = TableHelper.getUiLineItemObject(parameters.metaPath, parameters.convertedMetadata) as\n\t\t| DataFieldForIntentBasedNavigation[]\n\t\t| undefined;\n\tconst navigationPath = tableProperties.tableDefinition.annotation.navigationPath;\n\tif (tableProperties.tableDefinition.annotation.collection.startsWith(\"/\") && isSingleton(contextObjectPath.startingEntitySet)) {\n\t\ttableProperties.tableDefinition.annotation.collection = navigationPath;\n\t}\n\n\tconst collectionContext = parameters.metaModel.createBindingContext(tableProperties.tableDefinition.annotation.collection)!;\n\tconst draft = (collectionEntity as EntitySet).annotations.Common?.DraftRoot;\n\t// Add the definition of the designtime file if designtime is enabled from core or locally via url parameters\n\tconst variantManagement = tableProperties.variantManagement ?? \"None\";\n\tconst designtime = getDesigntime();\n\tlet rowActionType: TableRowActionType | undefined;\n\tif (tableProperties.overrideRowPress) {\n\t\trowActionType = TableRowActionType.Navigation;\n\t}\n\trowActionType ??=\n\t\ttableProperties.tableDefinition.annotation.row?.actionType === \"Navigation\" ? TableRowActionType.Navigation : undefined;\n\n\tconst showCreate = tableProperties.tableDefinition.actions.find((a) => a.key === StandardActionKeys.Create)?.visible || true;\n\n\t/**\n\t * Specifies whether the button is hidden when no data has been entered yet in the row (true/false). The default setting is `false`.\n\t */\n\tconst updatablePropertyPath = tableProperties.tableDefinition.annotation.updatablePropertyPath;\n\n\tlet currentPersonalization: TableP13nMode[] | undefined;\n\tswitch (tableProperties.personalization) {\n\t\tcase \"false\":\n\t\t\tcurrentPersonalization = undefined;\n\t\t\tbreak;\n\t\tcase \"true\":\n\t\t\tcurrentPersonalization = [TableP13nMode.Sort, TableP13nMode.Column, TableP13nMode.Filter];\n\t\t\tif (tableType === \"ResponsiveTable\" || tableProperties.tableDefinition.enableAnalytics === true) {\n\t\t\t\tcurrentPersonalization = [...currentPersonalization, TableP13nMode.Group];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase undefined:\n\t\t\tcurrentPersonalization = tableProperties.tableDefinition.annotation.p13nMode?.map((mode) => getMDCP13nMode(mode));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// In case grouping mode is defined explicitely on the personalization, we only enable it for the analytical and responsive table.\n\t\t\tif (tableType === \"ResponsiveTable\" || tableProperties.tableDefinition.enableAnalytics === true) {\n\t\t\t\tcurrentPersonalization = tableProperties.personalization.split(\",\").map((mode) => getMDCP13nMode(mode.trim()));\n\t\t\t} else {\n\t\t\t\tconst excludeGroupFromP13n = tableProperties.personalization\n\t\t\t\t\t.split(\",\")\n\t\t\t\t\t.filter((mode) => getMDCP13nMode(mode.trim()) !== TableP13nMode.Group) as TableP13nMode[];\n\t\t\t\tcurrentPersonalization = excludeGroupFromP13n.length ? excludeGroupFromP13n : undefined;\n\t\t\t}\n\t}\n\n\tconst multiSelectDisabledActions = ActionHelper.getMultiSelectDisabledActions(lineItem);\n\n\tconst customData = [\n\t\t{ key: \"kind\", value: collectionEntity._type },\n\t\t{ key: \"navigationPath\", value: navigationPath },\n\t\t{ key: \"enableAnalytics\", value: tableProperties.tableDefinition.enableAnalytics },\n\t\t{ key: \"creationMode\", value: tableProperties.creationMode?.name },\n\t\t{ key: \"inlineCreationRowCount\", value: tableProperties.tableDefinition.control.inlineCreationRowCount },\n\t\t{ key: \"showCreate\", value: showCreate },\n\t\t{ key: \"createAtEnd\", value: tableProperties.creationMode?.createAtEnd },\n\t\t{ key: \"displayModePropertyBinding\", value: tableProperties.readOnly },\n\t\t{ key: \"tableType\", value: tableType },\n\t\t{ key: \"targetCollectionPath\", value: collectionContext.getPath() },\n\t\t{ key: \"entityType\", value: collectionContext.getPath() + \"/\" },\n\t\t{ key: \"metaPath\", value: collectionContext.getPath() },\n\t\t{ key: \"hiddenFilters\", value: tableProperties.tableDefinition.control.filters?.hiddenFilters },\n\t\t{ key: \"requestGroupId\", value: \"$auto.Workers\" },\n\t\t{ key: \"segmentedButtonId\", value: generate([tableProperties.contentId, \"SegmentedButton\", \"TemplateContentView\"]) },\n\t\t{ key: \"disableCopyToClipboard\", value: tableProperties.tableDefinition.control.disableCopyToClipboard },\n\t\t{ key: \"draft\", value: draft },\n\t\t{ key: \"navigationAvailableMap\", value: TableHelper.getNavigationAvailableMap(lineItem) },\n\t\t{\n\t\t\tkey: \"actionsMultiselectDisabled\",\n\t\t\tvalue: multiSelectDisabledActions.length > 0 ? multiSelectDisabledActions.join(\",\") : undefined\n\t\t},\n\t\t{ key: \"updatablePropertyPath\", value: updatablePropertyPath || \"\" },\n\t\t{ key: \"exportRequestSize\", value: tableProperties.tableDefinition.control.exportRequestSize }\n\t];\n\n\treturn (\n\t\t<MDCTable\n\t\t\tcore:require={getCoreRequire(tableProperties.tableDefinition)}\n\t\t\tfl:flexibility={tableProperties[\"fl:flexibility\"]}\n\t\t\tsortConditions={tableProperties.tableDefinition.annotation.sortConditions}\n\t\t\tgroupConditions={tableProperties.tableDefinition.annotation.groupConditions}\n\t\t\taggregateConditions={tableProperties.tableDefinition.annotation.aggregateConditions}\n\t\t\tdt:designtime={designtime}\n\t\t\tid={tableProperties.contentId}\n\t\t\tbusyIndicatorDelay={0}\n\t\t\tenableExport={tableProperties.tableDefinition.control.enableExport}\n\t\t\tdelegate={JSON.parse(delegate)}\n\t\t\trowPress={tableType === \"ResponsiveTable\" ? parameters.handlerProvider.rowPress : undefined}\n\t\t\tbeforeOpenContextMenu={parameters.handlerProvider.beforeOpenContextMenu}\n\t\t\tautoBindOnInit={tableProperties.useBasicSearch || !tableProperties.filterBar}\n\t\t\tselectionMode={tableProperties.tableDefinition.annotation.selectionMode || \"None\"}\n\t\t\tselectionChange={parameters.handlerProvider.selectionChange}\n\t\t\tshowRowCount={tableProperties.tableDefinition.control.showRowCount}\n\t\t\theader={currentHeader}\n\t\t\theaderVisible={headerBindingExpression}\n\t\t\theaderLevel={tableProperties.headerLevel}\n\t\t\theaderStyle={tableProperties.headerStyle}\n\t\t\tthreshold={tableProperties.tableDefinition.annotation.threshold}\n\t\t\tp13nMode={currentPersonalization}\n\t\t\tpaste={parameters.handlerProvider.getPasteHandler(false)}\n\t\t\tbeforeExport={parameters.handlerProvider.beforeExport}\n\t\t\tclass={tableProperties.tableDefinition.control.useCondensedTableLayout === true ? \"sapUiSizeCondensed\" : undefined}\n\t\t\tmultiSelectMode={tableProperties.tableDefinition.control.multiSelectMode}\n\t\t\tshowPasteButton={tableType === \"TreeTable\" ? false : pasteAction?.visible}\n\t\t\tenablePaste={tableType === \"TreeTable\" ? false : pasteAction?.enabled}\n\t\t\tmodelContextChange={modelContextChange}\n\t\t>\n\t\t\t{{\n\t\t\t\tcustomData: createCustomDatas(customData),\n\t\t\t\tdataStateIndicator: getDataStateIndicator(parameters.handlerProvider),\n\t\t\t\ttype: getTableType(\n\t\t\t\t\ttableProperties.tableDefinition,\n\t\t\t\t\tcollectionContext,\n\t\t\t\t\ttableType,\n\t\t\t\t\ttableProperties.tableDefinition.control.selectionLimit\n\t\t\t\t),\n\t\t\t\tdependents: getDependents(tableProperties, parameters, variantManagement, collectionContext),\n\t\t\t\tactions: getActions(tableProperties, parameters, collectionContext, collectionEntity),\n\t\t\t\trowSettings: getRowSettings(tableProperties.tableDefinition, rowActionType, tableType, parameters.handlerProvider),\n\t\t\t\tcontextMenu: getContextMenu(\n\t\t\t\t\ttableProperties,\n\t\t\t\t\tparameters,\n\t\t\t\t\tcollectionEntity,\n\t\t\t\t\trowActionType,\n\t\t\t\t\tcollectionContext,\n\t\t\t\t\tnavigationInEditMode\n\t\t\t\t),\n\t\t\t\tcolumns: getColumns(tableProperties, collectionContext, parameters.handlerProvider),\n\t\t\t\tdragDropConfig: getDragAndDropConfig(tableProperties, parameters.handlerProvider),\n\t\t\t\tcreationRow: getCreationRow(tableProperties, parameters.handlerProvider),\n\t\t\t\tvariant: getVariantManagement(\n\t\t\t\t\tvariantManagement,\n\t\t\t\t\ttableProperties.contentId,\n\t\t\t\t\ttableProperties.headerLevel,\n\t\t\t\t\tparameters.handlerProvider\n\t\t\t\t),\n\t\t\t\tquickFilter: getQuickFilter(tableProperties),\n\t\t\t\tcopyProvider: getCopyProvider(tableProperties),\n\t\t\t\tcellSelector: getCellSelector(tableProperties)\n\t\t\t}}\n\t\t</MDCTable>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}