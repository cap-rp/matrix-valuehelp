{"version":3,"file":"TableAPIStateHandler.js","names":["TableAPIStateHandler","_IViewStateContributo","apply","this","arguments","_exports","_inheritsLoose","_proto","prototype","retrieveState","async","tableState","innerTable","getControlState","StateUtil","retrieveExternalState","content","quickFilter","getQuickFilter","quickFilterState","getSelectedKey","selectedKey","variantToRetrieve","getVariant","getId","variantManagementControl","variantManagement","variantId","getCurrentVariantKey","setInitialState","initialControlState","e","Log","error","applyLegacyState","_navParameters","shouldApplyDiffState","table","vm","vmState","controlState","fullState","initialState","toString","Object","keys","length","applyState","initialized","innerTableState","currentVariant","quickFilterKey","undefined","ovM","aVariants","getVariants","sVariantReference","some","oVariant","getKey","getStandardVariantKey","ControlVariantApplyAPI","__ui5_require_async","default","activateVariant","element","variantReference","finalState","supplementaryConfig","diffState","applyExternalState","setSelectedKey","onQuickFilterSelectionChange","initialLoad","filterBar","getFilterBarControl","isA","waitForInitialState","then","rebind","catch","IViewStateContributorMixin"],"sources":["./TableAPIStateHandler.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { NavigationParameter } from \"sap/fe/core/controllerextensions/ViewState\";\nimport IViewStateContributorMixin from \"sap/fe/core/controllerextensions/viewState/IViewStateContributorMixin\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport type { ControlState } from \"sap/fe/macros/insights/CommonInsightsHelper\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type { TableState } from \"sap/fe/macros/table/TableAPI\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\n\nexport default class TableAPIStateHandler extends IViewStateContributorMixin<TableState> {\n\t/**\n\t * Asynchronously retrieves the state of the table based on the provided viewstate.\n\t * @returns A promise that resolves to the table state or null if not found.\n\t */\n\tasync retrieveState(this: TableAPI): Promise<TableState | null> {\n\t\tconst tableState: TableState = {};\n\t\ttableState.innerTable = this.getControlState(await StateUtil.retrieveExternalState(this.content)) as object;\n\t\tconst quickFilter = this.getQuickFilter();\n\t\tif (quickFilter) {\n\t\t\tconst quickFilterState = quickFilter.getSelectedKey();\n\t\t\tif (!tableState.quickFilter) {\n\t\t\t\ttableState.quickFilter = {};\n\t\t\t}\n\t\t\ttableState.quickFilter.selectedKey = quickFilterState;\n\t\t}\n\t\tconst variantToRetrieve = this.content.getVariant()?.getId();\n\t\tif (variantToRetrieve) {\n\t\t\tconst variantManagementControl = this.content.getVariant();\n\t\t\tif (!tableState.variantManagement) {\n\t\t\t\ttableState.variantManagement = { variantId: variantManagementControl?.getCurrentVariantKey() };\n\t\t\t} else {\n\t\t\t\ttableState.variantManagement.variantId = variantManagementControl?.getCurrentVariantKey();\n\t\t\t}\n\t\t}\n\t\treturn tableState;\n\t}\n\n\t/**\n\t * Sets the initial state of the control by retrieving the external state.\n\t * @returns A promise that resolves when the initial state is set.\n\t */\n\tasync setInitialState(this: TableAPI): Promise<void> {\n\t\ttry {\n\t\t\tconst initialControlState = await StateUtil.retrieveExternalState(this.content);\n\t\t\tthis.initialControlState = initialControlState;\n\t\t} catch (e: unknown) {\n\t\t\tLog.error(e as string);\n\t\t}\n\t}\n\n\t/**\n\t * Applies the legacy state to the table based on the provided control state retrieval function.\n\t * @param getControlState Function to retrieve the control state.\n\t * @param [_navParameters] Optional navigation parameters.\n\t * @param [shouldApplyDiffState] Flag indicating whether to apply the diff state.\n\t * @returns - A promise that resolves when the state has been applied.\n\t */\n\tasync applyLegacyState(\n\t\tthis: TableAPI,\n\t\tgetControlState: (control: ManagedObject) => ControlState,\n\t\t_navParameters?: NavigationParameter,\n\t\tshouldApplyDiffState?: boolean\n\t): Promise<void> {\n\t\tconst table = this.content;\n\t\tconst vm = table.getVariant();\n\t\tconst quickFilter = this.getQuickFilter();\n\n\t\tconst tableState = getControlState(table) as { initialState?: TableState; fullState?: TableState };\n\t\tconst vmState = vm ? getControlState(vm) : null;\n\t\tconst quickFilterState = quickFilter?.content ? getControlState(quickFilter.content) : null;\n\n\t\tconst controlState: TableState = {};\n\n\t\tif (tableState) {\n\t\t\tcontrolState.innerTable = {\n\t\t\t\t...controlState.innerTable,\n\t\t\t\t...tableState,\n\t\t\t\tfullState: {\n\t\t\t\t\t...controlState.innerTable?.fullState,\n\t\t\t\t\t...tableState.fullState\n\t\t\t\t},\n\t\t\t\tinitialState: {\n\t\t\t\t\t...controlState.innerTable?.initialState,\n\t\t\t\t\t...tableState.initialState\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (vmState?.variantId) {\n\t\t\tcontrolState.variantManagement = {\n\t\t\t\t...controlState.variantManagement,\n\t\t\t\tvariantId: vmState.variantId.toString()\n\t\t\t};\n\t\t}\n\n\t\tif (quickFilterState?.selectedKey) {\n\t\t\tcontrolState.quickFilter = {\n\t\t\t\t...controlState.quickFilter,\n\t\t\t\tselectedKey: quickFilterState.selectedKey.toString()\n\t\t\t};\n\t\t}\n\t\tif (controlState && Object.keys(controlState).length > 0) {\n\t\t\tawait this.applyState(controlState as object, _navParameters, shouldApplyDiffState);\n\t\t}\n\t}\n\n\t/**\n\t * Asynchronously applies the provided control state to the viewstate.\n\t * @param controlState The state to be applied to the control.\n\t * @param [_navParameters] Optional navigation parameters.\n\t * @param [shouldApplyDiffState] Optional flag to skip merging states.\n\t * @returns A promise that resolves when the state has been applied.\n\t */\n\tasync applyState(\n\t\tthis: TableAPI,\n\t\tcontrolState: TableState,\n\t\t_navParameters?: NavigationParameter,\n\t\tshouldApplyDiffState?: boolean\n\t): Promise<void> {\n\t\tif (!controlState) return;\n\n\t\t// Table properties need to be available before calling diffState/retrieveState. However, applyState\n\t\t// gets called too early in the table's lifecycle, so the delegate and properties are not yet available.\n\t\tawait this.content.initialized();\n\n\t\tconst innerTableState = controlState?.innerTable;\n\t\tconst variantId = controlState?.variantManagement?.variantId;\n\t\tconst currentVariant = this.content?.getVariant();\n\t\tconst quickFilterKey = controlState?.quickFilter?.selectedKey;\n\t\tconst quickFilter = this.getQuickFilter();\n\n\t\t// Handle Variant Management\n\t\tif (variantId !== undefined && variantId !== currentVariant.getCurrentVariantKey()) {\n\t\t\tconst ovM = this.content?.getVariant();\n\t\t\tconst aVariants = ovM?.getVariants();\n\t\t\tconst sVariantReference = aVariants?.some((oVariant) => oVariant.getKey() === variantId)\n\t\t\t\t? variantId\n\t\t\t\t: ovM?.getStandardVariantKey;\n\t\t\ttry {\n\t\t\t\tconst ControlVariantApplyAPI = (await import(\"sap/ui/fl/apply/api/ControlVariantApplyAPI\")).default;\n\t\t\t\tawait ControlVariantApplyAPI.activateVariant({\n\t\t\t\t\telement: ovM,\n\t\t\t\t\tvariantReference: sVariantReference as string\n\t\t\t\t});\n\t\t\t\tawait this.setInitialState();\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.error(error as string);\n\t\t\t\tawait this.setInitialState();\n\t\t\t}\n\t\t} else {\n\t\t\t// we need to update initial state even if above condition not satiesfied\n\t\t\tawait this.setInitialState();\n\t\t}\n\n\t\t// Handle Inner Table State\n\n\t\tlet finalState;\n\n\t\tif (innerTableState) {\n\t\t\tif (shouldApplyDiffState && innerTableState.initialState) {\n\t\t\t\tif (!innerTableState.initialState.supplementaryConfig) {\n\t\t\t\t\tinnerTableState.initialState.supplementaryConfig = {};\n\t\t\t\t}\n\t\t\t\tfinalState = await StateUtil.diffState(\n\t\t\t\t\tthis.content,\n\t\t\t\t\tinnerTableState.initialState as object,\n\t\t\t\t\tinnerTableState.fullState as object\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (controlState && !controlState?.supplementaryConfig) {\n\t\t\t\t\tcontrolState.supplementaryConfig = {};\n\t\t\t\t}\n\t\t\t\tfinalState = innerTableState.fullState;\n\t\t\t}\n\t\t\tawait StateUtil.applyExternalState(this.content, finalState);\n\t\t}\n\n\t\t// Handle Quick Filter State\n\t\tif (quickFilterKey && quickFilterKey !== quickFilter?.getSelectedKey()) {\n\t\t\tquickFilter?.setSelectedKey(quickFilterKey);\n\t\t\tthis.onQuickFilterSelectionChange();\n\t\t}\n\t\tif (this.initialLoad && this.filterBar) {\n\t\t\tconst filterBar = this.getFilterBarControl(this.filterBar);\n\t\t\tif (filterBar && filterBar.isA<FilterBarAPI>(\"sap.fe.macros.filterBar.FilterBarAPI\")) {\n\t\t\t\tfilterBar\n\t\t\t\t\t.waitForInitialState()\n\t\t\t\t\t.then((): void => {\n\t\t\t\t\t\tthis.content.rebind();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((): void => {\n\t\t\t\t\t\tLog.error(\"Error while waiting for initial state of filter bar\");\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}