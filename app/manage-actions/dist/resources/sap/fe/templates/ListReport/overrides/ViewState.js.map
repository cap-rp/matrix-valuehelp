{"version":3,"file":"ViewState.js","names":["NavType","NavLibrary","VariantManagementType","CoreLibrary","VariantManagement","TemplateContentView","ViewStateOverride","_bSearchTriggered","applyInitialStateOnly","onBeforeStateApplied","aPromises","navigationType","oView","this","getView","oController","getController","oFilterBar","_getFilterBarControl","aTables","_getControls","setSuspendSelection","push","waitForInitialization","hybrid","_clearFilterConditions","forEach","oTable","initialized","adaptBindingRefreshControls","aControls","base","aViewControls","aControlsToRefresh","KeepAliveHelper","getControlsForRefresh","Array","prototype","apply","adaptStateControls","aStateControls","oFilterBarVM","_getFilterBarVM","_isMultiMode","_getMultiModeControl","_hasMultiVisualizations","_getSegmentedButton","Chart","Table","byId","retrieveAdditionalStates","mAdditionalStates","bPendingFilter","getBindingContext","getProperty","dataLoaded","sAlpContentView","alpContentView","applyAdditionalStates","oAdditionalStates","filterBarAPI","getParent","getLiveMode","triggerSearch","oInternalModelContext","Device","system","desktop","Hybrid","getModel","setProperty","getPath","view","variantManagement","viewData","getViewData","Page","Control","_getFilterBarVariantControl","None","_fnClearStateBeforexAppNav","async","StateUtil","retrieveExternalState","then","oExternalState","oCondition","filter","field","condition","catch","oError","Log","error","aItems","oClearConditions","applyExternalState","items"],"sources":["./ViewState.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type ViewState from \"sap/fe/core/controllerextensions/ViewState\";\nimport KeepAliveHelper from \"sap/fe/core/helpers/KeepAliveHelper\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport CoreLibrary from \"sap/fe/core/library\";\nimport type { PropertyInfo } from \"sap/fe/macros/DelegateUtil\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport NavLibrary from \"sap/fe/navigation/library\";\nimport type { default as ListReportController } from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport Device from \"sap/ui/Device\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\n\ntype LRViewData = {\n\tcontrolConfiguration?: Record<string, Record<string, unknown>>;\n\tentitySet?: string;\n\tcontextPath?: string;\n\tvariantManagement?: boolean;\n};\n\nconst NavType = NavLibrary.NavType,\n\tVariantManagementType = CoreLibrary.VariantManagement,\n\tTemplateContentView = CoreLibrary.TemplateContentView;\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nconst ViewStateOverride = {\n\t_bSearchTriggered: false,\n\tapplyInitialStateOnly: function (): boolean {\n\t\treturn true;\n\t},\n\tonBeforeStateApplied: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\taPromises: Promise<unknown>[],\n\t\tnavigationType?: string\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\toFilterBar = oController._getFilterBarControl(),\n\t\t\taTables = oController._getControls(\"table\") as Table[];\n\t\tif (oFilterBar) {\n\t\t\toFilterBar.setSuspendSelection(true);\n\t\t\taPromises.push(oFilterBar.waitForInitialization());\n\t\t\t//This is required to remove any existing or default filter conditions before restoring the filter bar state in hybrid navigation mode.\n\t\t\tif (navigationType === NavType.hybrid) {\n\t\t\t\tthis._clearFilterConditions(oFilterBar);\n\t\t\t}\n\t\t}\n\t\taTables.forEach(function (oTable: Table): void {\n\t\t\taPromises.push((oTable as unknown as { initialized: () => Promise<unknown> }).initialized());\n\t\t});\n\n\t\tdelete this._bSearchTriggered;\n\t},\n\tadaptBindingRefreshControls: function (this: ViewState, aControls: Control[]): void {\n\t\tconst oView = this.base.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\taViewControls = oController._getControls(),\n\t\t\taControlsToRefresh = KeepAliveHelper.getControlsForRefresh(oView, aViewControls);\n\n\t\tArray.prototype.push.apply(aControls, aControlsToRefresh);\n\t},\n\tadaptStateControls: function (this: ViewState & typeof ViewStateOverride, aStateControls: UI5Element[]): void {\n\t\tconst oView = this.base.getView(),\n\t\t\toController = oView.getController() as ListReportController;\n\t\tconst oFilterBarVM = this._getFilterBarVM(oView);\n\t\tif (oFilterBarVM) {\n\t\t\taStateControls.push(oFilterBarVM);\n\t\t}\n\t\tif (oController._isMultiMode()) {\n\t\t\taStateControls.push(oController._getMultiModeControl());\n\t\t}\n\t\tif (oController._hasMultiVisualizations()) {\n\t\t\taStateControls.push(oController._getSegmentedButton(TemplateContentView.Chart)!);\n\t\t\taStateControls.push(oController._getSegmentedButton(TemplateContentView.Table)!);\n\t\t}\n\t\taStateControls.push(oView.byId(\"fe::ListReport\")!);\n\t},\n\tretrieveAdditionalStates: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\tmAdditionalStates: { dataLoaded: boolean; alpContentView: string }\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\tbPendingFilter = (oView.getBindingContext(\"internal\") as InternalModelContext).getProperty(\"hasPendingFilters\");\n\n\t\tmAdditionalStates.dataLoaded = !bPendingFilter || !!this._bSearchTriggered;\n\t\tif (oController._hasMultiVisualizations()) {\n\t\t\tconst sAlpContentView = oView.getBindingContext(\"internal\")!.getProperty(\"alpContentView\");\n\t\t\tmAdditionalStates.alpContentView = sAlpContentView;\n\t\t}\n\n\t\tdelete this._bSearchTriggered;\n\t},\n\tapplyAdditionalStates: function (\n\t\tthis: ViewState & typeof ViewStateOverride,\n\t\toAdditionalStates?: { dataLoaded: boolean; alpContentView?: string }\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as ListReportController,\n\t\t\toFilterBar = oController._getFilterBarControl();\n\n\t\tif (oAdditionalStates) {\n\t\t\tif (oFilterBar) {\n\t\t\t\tconst filterBarAPI = oFilterBar.getParent() as FilterBarAPI;\n\n\t\t\t\t// Trigger search if live mode is enabled or data is loaded\n\t\t\t\tif (oFilterBar.getLiveMode() || oAdditionalStates.dataLoaded === true) {\n\t\t\t\t\tfilterBarAPI.triggerSearch();\n\t\t\t\t\tthis._bSearchTriggered = true;\n\t\t\t\t}\n\t\t\t\t// Handle case when data is not yet loaded\n\t\t\t\telse if (oAdditionalStates.dataLoaded === false) {\n\t\t\t\t\t// Prevent data from being loaded on navigating back\n\t\t\t\t\t(oFilterBar as { _bSearchTriggered?: boolean })._bSearchTriggered = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oController._hasMultiVisualizations()) {\n\t\t\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\t\tif (!Device.system.desktop && oAdditionalStates.alpContentView == TemplateContentView.Hybrid) {\n\t\t\t\t\toAdditionalStates.alpContentView = TemplateContentView.Chart;\n\t\t\t\t}\n\t\t\t\toInternalModelContext\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.setProperty(`${oInternalModelContext.getPath()}/alpContentView`, oAdditionalStates.alpContentView);\n\t\t\t}\n\t\t}\n\t},\n\t/************************************* private helper *****************************************/\n\n\t/**\n\t * Variant management used by filter bar.\n\t * @param view View of the LR filter bar\n\t * @returns VariantManagement if used\n\t */\n\t_getFilterBarVM: (view: View): VariantManagement | undefined => {\n\t\tlet variantManagement;\n\t\tconst viewData = view.getViewData() as LRViewData;\n\t\tswitch (viewData.variantManagement) {\n\t\t\tcase VariantManagementType.Page:\n\t\t\t\tvariantManagement = view.byId(\"fe::PageVariantManagement\");\n\t\t\t\tbreak;\n\t\t\tcase VariantManagementType.Control:\n\t\t\t\tvariantManagement = (view.getController() as ListReportController)._getFilterBarVariantControl();\n\t\t\t\tbreak;\n\t\t\tcase VariantManagementType.None:\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn variantManagement as VariantManagement | undefined;\n\t},\n\n\t/*\n\t * Sets filtered: false flag to every field so that it can be cleared out\n\t *\n\t * @param oFilterBar filterbar control is used to display filter properties in a user-friendly manner to populate values for a query\n\t * @returns promise which will be resolved to object\n\t * @private\n\t */\n\t_fnClearStateBeforexAppNav: async function (oFilterBar: FilterBar): Promise<unknown> {\n\t\treturn StateUtil.retrieveExternalState(oFilterBar)\n\t\t\t.then((oExternalState: { filter: Record<string, Record<string, boolean>[]> }) => {\n\t\t\t\tconst oCondition = oExternalState.filter;\n\t\t\t\tfor (const field in oCondition) {\n\t\t\t\t\tif (field !== \"$editState\" && field !== \"$search\" && oCondition[field]) {\n\t\t\t\t\t\toCondition[field].forEach((condition: Record<string, boolean>) => {\n\t\t\t\t\t\t\tcondition[\"filtered\"] = false;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn oCondition;\n\t\t\t})\n\t\t\t.catch(function (oError: unknown): void {\n\t\t\t\tLog.error(\"Error while retrieving the external state\", oError as string);\n\t\t\t});\n\t},\n\n\t_clearFilterConditions: async function (oFilterBar: FilterBar): Promise<unknown> {\n\t\tconst aItems: PropertyInfo[] = [];\n\t\treturn oFilterBar.waitForInitialization().then(async () => {\n\t\t\tconst oClearConditions = await this._fnClearStateBeforexAppNav(oFilterBar);\n\t\t\treturn StateUtil.applyExternalState(oFilterBar, {\n\t\t\t\tfilter: oClearConditions,\n\t\t\t\titems: aItems\n\t\t\t});\n\t\t});\n\t}\n};\n\nexport default ViewStateOverride;\n"],"mappings":"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","ignoreList":[]}