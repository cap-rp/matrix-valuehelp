{"version":3,"file":"CollaborationDraft.js","names":["USERS_PARAMETERS","USER_ID_PARAMETER","CollaborationDraft","_dec","defineUI5Class","_dec2","property","type","required","_dec3","_class","_class2","_BuildingBlock","props","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","showCollaborationUserDetails","event","source","getSource","userDetailsPopover","getUserDetailsPopover","setBindingContext","getBindingContext","openBy","manageCollaboration","manageDialog","getManageDialog","readInvitedUsers","open","formatUserStatus","userStatus","UserStatus","CurrentlyEditing","getTranslatedText","ChangesMade","NoChangesMade","NotYetInvited","addUserFieldChanged","async","userInput","getParameter","then","newUserId","internalModelContext","invitedUsers","getProperty","newUser","id","name","findIndex","user","setValueState","setValueStateText","addUser","bind","catch","inviteUser","users","bindingContext","contexts","manageDialogUserTable","getBinding","getContexts","numberOfNewInvitedUsers","forEach","context","push","UserID","UserAccessRole","getObject","status","results","Promise","all","shareObject","requestInvitedUsersInDraft","numberOfNonInvitedUsers","length","messageHandler","getPageController","showMessageDialog","MessageToast","show","getSharedItemName","toString","closeManageDialog","currentUserList","activeUsers","getModel","me","CollaborationUtils","getMe","getAppComponent","userContext","userData","isMe","isActive","find","u","userDescription","UserDescription","initials","formatInitials","getText","UserEditingState","InProgress","color","getUserColor","setProperty","e","close","destroy","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","_ownerComponent","_controlLoaded","PromiseKeeper","GridTableControl","undefined","Lib","load","default","__ui5_require_async","GridTableColumnControl","contextObject","getDataModelObjectPath","contextPath","content","createContent","resolve","_jsx","ResponsivePopover","showHeader","class","placement","children","_jsxs","HBox","Avatar","displaySize","backgroundColor","VBox","Label","text","addDependent","Dialog","title","getInvitationDialogTitleExpBinding","horizontalScrolling","verticalScrolling","contentWidth","stretch","CommonHelper","isDesktop","beginButton","Button","press","enabled","parts","path","formatter","formatInviteButton","endButton","width","MessageStrip","showIcon","showCloseButton","getManageDialogAddUserSection","getManageDialogUserTable","bindElement","model","getManageDialogUserTableColumns","_Fragment","template","alignItems","justifyContent","label","Text","ObjectStatus","state","formatUserStatusColor","icon","removeUser","visible","rows","visibleRowCount","visibleRowCountMode","selectionMode","columns","Field","value","additionalValue","display","valueHelp","placeholder","change","dependents","ValueHelp","delegate","getValueHelpDelegate","validateInput","typeahead","MDCPopover","MTable","caseSensitive","useAsValueHelp","dialog","MDCDialog","ValueState","Success","Warning","Information","nbUsers","some","transient","item","deleteUserID","filter","parameters","$select","invitedUserList","bindList","requestContexts","headerInfo","targetEntityType","annotations","UI","HeaderInfo","sharedItemName","Title","isAnnotationOfType","isPathAnnotationExpression","Value","TypeName","actionName","targetEntitySet","Common","DraftRoot","ShareAction","action","resolvePath","userParameters","param","payload","propertyPath","qualifiers","valueHelpQualifier","isActionParameterDialog","getExpressionFromAnnotation","params","titleExpression","formatResult","collaborationFormatter","getFormattedText","compileExpression","getInviteButton","src","_getOwner","getMetaModel","ModelHelper","isCollaborationDraftSupported","items","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./CollaborationDraft.tsx"],"sourcesContent":["import type { EntitySet, Action as VocabularyAction } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { EntitySetAnnotations_Common } from \"@sap-ux/vocabularies-types/vocabularies/Common_Edm\";\nimport type { DataField, DataFieldTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, formatResult, getExpressionFromAnnotation } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport type { BackendUser, User } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport {\n\tCollaborationUtils,\n\tUserEditingState,\n\tUserStatus,\n\tshareObject\n} from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport collaborationFormatter from \"sap/fe/core/formatters/CollaborationFormatter\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport PromiseKeeper from \"sap/fe/core/helpers/PromiseKeeper\";\nimport { isAnnotationOfType, isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type { ValueHelpPayload } from \"sap/fe/macros/internal/valuehelp/ValueListHelper\";\nimport Avatar from \"sap/m/Avatar\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport ResponsivePopover from \"sap/m/ResponsivePopover\";\nimport type Table from \"sap/m/Table\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type { Field$ChangeEvent } from \"sap/ui/mdc/Field\";\nimport Field from \"sap/ui/mdc/Field\";\nimport ValueHelp from \"sap/ui/mdc/ValueHelp\";\nimport MDCDialog from \"sap/ui/mdc/valuehelp/Dialog\";\nimport MDCPopover from \"sap/ui/mdc/valuehelp/Popover\";\nimport MTable from \"sap/ui/mdc/valuehelp/content/MTable\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type Integer from \"sap/ui/model/type/Integer\";\nimport type GridTableColumn from \"sap/ui/table/Column\";\nimport type GridTable from \"sap/ui/table/Table\";\n\nconst USERS_PARAMETERS = \"Users\";\nconst USER_ID_PARAMETER = \"UserID\";\n\n@defineUI5Class(\"sap.fe.templates.ObjectPage.components.CollaborationDraft\")\nexport default class CollaborationDraft extends BuildingBlock {\n\t@property({ type: \"string\", required: true })\n\tpublic contextPath!: string;\n\n\t@property({ type: \"string\" })\n\tpublic id?: string;\n\n\tprivate contextObject?: DataModelObjectPath<EntitySet>;\n\n\tprivate userDetailsPopover?: ResponsivePopover;\n\n\tprivate manageDialog?: Dialog;\n\n\tprivate manageDialogUserTable?: Table;\n\n\tprivate static GridTableControl: typeof GridTable;\n\n\tprivate static GridTableColumnControl: typeof GridTableColumn;\n\n\tprivate _controlLoaded?: PromiseKeeper<void>;\n\n\tconstructor(props: PropertiesOf<CollaborationDraft>, others?: PropertiesOf<CollaborationDraft>) {\n\t\tsuper(props, others);\n\t}\n\n\tasync onMetadataAvailable(_ownerComponent: TemplateComponent): Promise<void> {\n\t\tthis._controlLoaded = new PromiseKeeper();\n\t\tif (CollaborationDraft.GridTableControl === undefined) {\n\t\t\tawait Lib.load({ name: \"sap.ui.table\" });\n\t\t\tconst { default: GridTableControl } = await import(\"sap/ui/table/Table\");\n\t\t\tCollaborationDraft.GridTableControl = GridTableControl;\n\t\t\tconst { default: GridTableColumnControl } = await import(\"sap/ui/table/Column\");\n\t\t\tCollaborationDraft.GridTableColumnControl = GridTableColumnControl;\n\t\t}\n\t\tthis.contextObject = this.getDataModelObjectPath(this.contextPath);\n\t\tthis.content = this.createContent();\n\t\tthis._controlLoaded.resolve();\n\t}\n\n\t/**\n\t * Event handler to create and show the user details popover.\n\t * @param event The event object\n\t */\n\tshowCollaborationUserDetails = (event: Event<{}, Control>): void => {\n\t\tconst source = event.getSource();\n\t\tif (!this.userDetailsPopover) {\n\t\t\tthis.userDetailsPopover = this.getUserDetailsPopover();\n\t\t}\n\n\t\tthis.userDetailsPopover?.setBindingContext(source.getBindingContext(\"internal\") as InternalModelContext, \"internal\");\n\t\tthis.userDetailsPopover?.openBy(source);\n\t};\n\n\t/**\n\t * Returns the user details popover.\n\t * @returns The control tree\n\t */\n\tgetUserDetailsPopover(): ResponsivePopover {\n\t\tconst userDetailsPopover = (\n\t\t\t<ResponsivePopover showHeader={false} class=\"sapUiContentPadding\" placement=\"Bottom\">\n\t\t\t\t<HBox>\n\t\t\t\t\t<Avatar initials=\"{internal>initials}\" displaySize=\"S\" backgroundColor=\"{internal>color}\" />\n\t\t\t\t\t<VBox>\n\t\t\t\t\t\t<Label class=\"sapUiMediumMarginBegin\" text=\"{internal>name}\" />\n\t\t\t\t\t\t<Label class=\"sapUiMediumMarginBegin\" text=\"{internal>id}\" />\n\t\t\t\t\t</VBox>\n\t\t\t\t</HBox>\n\t\t\t</ResponsivePopover>\n\t\t);\n\n\t\tthis.addDependent(userDetailsPopover);\n\n\t\treturn userDetailsPopover;\n\t}\n\n\t/**\n\t * Event handler to create and open the manage dialog.\n\t *\n\t */\n\tmanageCollaboration = (): void => {\n\t\tif (!this.manageDialog) {\n\t\t\tthis.manageDialog = this.getManageDialog();\n\t\t}\n\n\t\tthis.readInvitedUsers();\n\t\tthis.manageDialog?.open();\n\t};\n\n\t/**\n\t * Returns the manage dialog used to invite further users.\n\t * @returns The control tree\n\t */\n\tgetManageDialog(): Dialog {\n\t\tconst manageDialog = (\n\t\t\t<Dialog\n\t\t\t\ttitle={this.getInvitationDialogTitleExpBinding()}\n\t\t\t\thorizontalScrolling=\"False\"\n\t\t\t\tverticalScrolling=\"False\"\n\t\t\t\tcontentWidth=\"35em\"\n\t\t\t\tstretch={CommonHelper.isDesktop() ? \"false\" : \"true\"}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tbeginButton: (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_DIALOG_CONFIRMATION\")}\n\t\t\t\t\t\t\tpress={this.inviteUser}\n\t\t\t\t\t\t\ttype=\"Emphasized\"\n\t\t\t\t\t\t\tenabled={{\n\t\t\t\t\t\t\t\tparts: [{ path: \"internal>invitedUsers/length\" }, { path: \"internal>invitedUsers\" }],\n\t\t\t\t\t\t\t\tformatter: this.formatInviteButton\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tendButton: (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_DIALOG_CANCEL\")}\n\t\t\t\t\t\t\tpress={this.closeManageDialog}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<VBox class=\"sapUiSmallMargin\">\n\t\t\t\t\t\t\t<VBox width=\"100%\">\n\t\t\t\t\t\t\t\t<MessageStrip\n\t\t\t\t\t\t\t\t\ttext={this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_MESSAGESTRIP\")}\n\t\t\t\t\t\t\t\t\ttype=\"Information\"\n\t\t\t\t\t\t\t\t\tshowIcon={true}\n\t\t\t\t\t\t\t\t\tshowCloseButton={false}\n\t\t\t\t\t\t\t\t\tclass=\"sapUiMediumMarginBottom\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t<Label text={this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_INPUT_LABEL\")} required={true} />\n\t\t\t\t\t\t\t{this.getManageDialogAddUserSection()}\n\t\t\t\t\t\t\t{this.getManageDialogUserTable()}\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Dialog>\n\t\t);\n\n\t\tthis.addDependent(manageDialog);\n\t\tmanageDialog.bindElement({\n\t\t\tmodel: \"internal\",\n\t\t\tpath: \"collaboration\"\n\t\t});\n\n\t\treturn manageDialog;\n\t}\n\n\t/**\n\t * Returning the table column with the list of invited users.\n\t * @returns The control tree\n\t */\n\tgetManageDialogUserTableColumns(): GridTableColumn[] {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CollaborationDraft.GridTableColumnControl width={CommonHelper.isDesktop() ? \"10%\" : \"3em\"}>\n\t\t\t\t\t{{\n\t\t\t\t\t\ttemplate: (\n\t\t\t\t\t\t\t<HBox alignItems=\"Center\" justifyContent=\"SpaceBetween\">\n\t\t\t\t\t\t\t\t<Avatar displaySize=\"XS\" backgroundColor=\"{internal>color}\" initials=\"{internal>initials}\" />\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</CollaborationDraft.GridTableColumnControl>\n\t\t\t\t<CollaborationDraft.GridTableColumnControl width={CommonHelper.isDesktop() ? \"35%\" : \"6em\"}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tlabel: <Text text={this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_TABLE_USER_COLUMN\")} />,\n\t\t\t\t\t\ttemplate: <Text text=\"{internal>name}\" />\n\t\t\t\t\t}}\n\t\t\t\t</CollaborationDraft.GridTableColumnControl>\n\t\t\t\t<CollaborationDraft.GridTableColumnControl width={CommonHelper.isDesktop() ? \"46%\" : \"9em\"}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tlabel: <Text text={this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_TABLE_USER_STATUS_COLUMN\")} />,\n\t\t\t\t\t\ttemplate: (\n\t\t\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\t\t\tstate={{ path: \"internal>status\", formatter: this.formatUserStatusColor }}\n\t\t\t\t\t\t\t\ttext={{ path: \"internal>status\", formatter: this.formatUserStatus }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</CollaborationDraft.GridTableColumnControl>\n\t\t\t\t<CollaborationDraft.GridTableColumnControl width={CommonHelper.isDesktop() ? \"8%\" : \"3em\"}>\n\t\t\t\t\t{{\n\t\t\t\t\t\ttemplate: (\n\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ticon=\"sap-icon://decline\"\n\t\t\t\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\t\t\t\tpress={this.removeUser}\n\t\t\t\t\t\t\t\t\tvisible=\"{= !!${internal>transient} }\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</CollaborationDraft.GridTableColumnControl>\n\t\t\t</>\n\t\t);\n\t}\n\n\t/**\n\t * Returns the table with the list of invited users.\n\t * @returns The control tree\n\t */\n\tgetManageDialogUserTable(): Table | undefined {\n\t\tthis.manageDialogUserTable = (\n\t\t\t<CollaborationDraft.GridTableControl\n\t\t\t\twidth=\"100%\"\n\t\t\t\trows={{ path: \"internal>invitedUsers\" }}\n\t\t\t\tvisibleRowCount={CommonHelper.isDesktop() ? \"5\" : \"3\"}\n\t\t\t\tvisibleRowCountMode=\"Fixed\"\n\t\t\t\tselectionMode=\"None\"\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcolumns: this.getManageDialogUserTableColumns()\n\t\t\t\t}}\n\t\t\t</CollaborationDraft.GridTableControl>\n\t\t);\n\t\treturn this.manageDialogUserTable;\n\t}\n\n\t/**\n\t * Returns the section on the dialog related to the user field.\n\t * @returns The control tree\n\t */\n\tgetManageDialogAddUserSection(): HBox {\n\t\treturn (\n\t\t\t<HBox class=\"sapUiMediumMarginBottom\" width=\"100%\">\n\t\t\t\t<Field\n\t\t\t\t\tvalue=\"{internal>UserID}\"\n\t\t\t\t\tadditionalValue=\"{internal>UserDescription}\"\n\t\t\t\t\tdisplay=\"DescriptionValue\"\n\t\t\t\t\twidth=\"20em\"\n\t\t\t\t\trequired={true}\n\t\t\t\t\tvalueHelp=\"userValueHelp\"\n\t\t\t\t\tplaceholder={this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_INPUT_PLACEHOLDER\")}\n\t\t\t\t\tchange={this.addUserFieldChanged}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tdependents: (\n\t\t\t\t\t\t\t<ValueHelp id=\"userValueHelp\" delegate={this.getValueHelpDelegate()} validateInput={true}>\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\ttypeahead: (\n\t\t\t\t\t\t\t\t\t\t<MDCPopover>\n\t\t\t\t\t\t\t\t\t\t\t<MTable caseSensitive=\"true\" useAsValueHelp=\"false\" />\n\t\t\t\t\t\t\t\t\t\t</MDCPopover>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tdialog: <MDCDialog />\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</ValueHelp>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</Field>\n\t\t\t</HBox>\n\t\t);\n\t}\n\n\t/**\n\t * Formatter to set the user status depending on the editing status.\n\t * @param userStatus The editing status of the user\n\t * @returns The user status\n\t */\n\tformatUserStatus = (userStatus: UserStatus): string => {\n\t\tswitch (userStatus) {\n\t\t\tcase UserStatus.CurrentlyEditing:\n\t\t\t\treturn this.getTranslatedText(\"C_COLLABORATIONDRAFT_USER_CURRENTLY_EDITING\");\n\t\t\tcase UserStatus.ChangesMade:\n\t\t\t\treturn this.getTranslatedText(\"C_COLLABORATIONDRAFT_USER_CHANGES_MADE\");\n\t\t\tcase UserStatus.NoChangesMade:\n\t\t\t\treturn this.getTranslatedText(\"C_COLLABORATIONDRAFT_USER_NO_CHANGES_MADE\");\n\t\t\tcase UserStatus.NotYetInvited:\n\t\t\tdefault:\n\t\t\t\treturn this.getTranslatedText(\"C_COLLABORATIONDRAFT_USER_NOT_YET_INVITED\");\n\t\t}\n\t};\n\n\t/**\n\t * Formatter to set the user color depending on the editing status.\n\t * @param userStatus The editing status of the user\n\t * @returns The user status color\n\t */\n\tformatUserStatusColor(userStatus: UserStatus): ValueState {\n\t\tswitch (userStatus) {\n\t\t\tcase UserStatus.CurrentlyEditing:\n\t\t\t\treturn ValueState.Success;\n\t\t\tcase UserStatus.ChangesMade:\n\t\t\t\treturn ValueState.Warning;\n\t\t\tcase UserStatus.NoChangesMade:\n\t\t\tcase UserStatus.NotYetInvited:\n\t\t\tdefault:\n\t\t\t\treturn ValueState.Information;\n\t\t}\n\t}\n\n\t/**\n\t * Formatter to enable the invite button depending on the invited users status.\n\t * @param nbUsers Number of users\n\t * @param invitedUsers List of the invited users\n\t * @returns True or False\n\t */\n\tformatInviteButton(nbUsers: Integer | undefined, invitedUsers: User[] | undefined): boolean {\n\t\tif (!nbUsers) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !!invitedUsers?.some((user) => user.status === 0);\n\t}\n\n\t/**\n\t * Add the added user to the list of invited users.\n\t * @param userInput The user to be invited\n\t * @param invitedUsers The users already invited\n\t * @param newUser The user to be invited\n\t */\n\taddUser(userInput: Field, invitedUsers: User[], newUser: User): void {\n\t\tconst internalModelContext = userInput.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst activeUsers = (userInput.getModel(\"internal\") as JSONModel).getProperty(\"/collaboration/activeUsers\");\n\t\tnewUser.name = newUser.name || newUser.id;\n\t\tnewUser.initials = CollaborationUtils.formatInitials(newUser.name);\n\t\tnewUser.color = CollaborationUtils.getUserColor(newUser.id, activeUsers, invitedUsers);\n\t\tnewUser.transient = true;\n\t\tnewUser.status = UserStatus.NotYetInvited;\n\t\tinvitedUsers.push(newUser);\n\t\tinternalModelContext.setProperty(\"invitedUsers\", invitedUsers);\n\t\tinternalModelContext.setProperty(\"UserID\", \"\");\n\t\tinternalModelContext.setProperty(\"UserDescription\", \"\");\n\t}\n\n\t/**\n\t * Sets the value state of the user field whenever changed.\n\t * @param event The event object of the user input\n\t * @returns Promise that is resolved once the value state was set.\n\t */\n\taddUserFieldChanged = async (event: Field$ChangeEvent): Promise<void> => {\n\t\tconst userInput = event.getSource();\n\t\treturn event\n\t\t\t.getParameter(\"promise\")\n\t\t\t?.then(\n\t\t\t\tfunction (this: CollaborationDraft, newUserId: string): void {\n\t\t\t\t\tconst internalModelContext = userInput.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\t\t\tconst invitedUsers: User[] = internalModelContext.getProperty(\"invitedUsers\") || [];\n\t\t\t\t\tconst newUser: User = {\n\t\t\t\t\t\tid: internalModelContext?.getProperty(\"UserID\"),\n\t\t\t\t\t\tname: internalModelContext?.getProperty(\"UserDescription\")\n\t\t\t\t\t};\n\t\t\t\t\tif (invitedUsers.findIndex((user) => user.id === newUserId) > -1) {\n\t\t\t\t\t\tuserInput.setValueState(\"Error\");\n\t\t\t\t\t\tuserInput.setValueStateText(this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_USER_ERROR\"));\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tinvitedUsers.findIndex((user) => user.id === newUser.id) > -1 ||\n\t\t\t\t\t\t\t(newUser.id === newUser.name && newUser.id === \"\")\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.addUser(userInput, invitedUsers, newUser);\n\t\t\t\t\t\tuserInput.setValueState(\"None\");\n\t\t\t\t\t\tuserInput.setValueStateText(\"\");\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)\n\t\t\t)\n\t\t\t.catch(\n\t\t\t\tfunction (this: CollaborationDraft): void {\n\t\t\t\t\tuserInput.setValueState(\"Warning\");\n\t\t\t\t\tuserInput.setValueStateText(this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_USER_NOT_FOUND\"));\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t};\n\n\t/**\n\t * Event handler to remove a user from the list of invited user.\n\t * @param event The event object of the remove button\n\t */\n\tremoveUser(event: Event<{}, Button>): void {\n\t\tconst item = event.getSource();\n\t\tconst internalModelContext = item?.getBindingContext(\"pageInternal\");\n\t\tconst deleteUserID = item?.getBindingContext(\"internal\")?.getProperty(\"id\");\n\t\tlet invitedUsers: User[] = internalModelContext?.getProperty(\"collaboration/invitedUsers\");\n\t\tinvitedUsers = invitedUsers.filter((user) => user.id !== deleteUserID);\n\t\tinternalModelContext?.setProperty(\"collaboration/invitedUsers\", invitedUsers);\n\t}\n\n\t/**\n\t * Call the share action to update the list of invited users.\n\t * @param event The event object of the invite button\n\t */\n\tinviteUser = async (event: Event<{}, Button>): Promise<void> => {\n\t\tconst users: BackendUser[] = [];\n\t\tconst source = event.getSource();\n\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\tconst contexts = (this.manageDialogUserTable?.getBinding(\"rows\") as ODataListBinding).getContexts();\n\t\tlet numberOfNewInvitedUsers = 0;\n\t\tcontexts.forEach(function (context) {\n\t\t\tusers.push({\n\t\t\t\tUserID: context.getProperty(\"id\"),\n\t\t\t\tUserAccessRole: \"O\" // For now according to UX every user retrieves the owner role\n\t\t\t});\n\t\t\tif (context.getObject().status === 0) {\n\t\t\t\tnumberOfNewInvitedUsers++;\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\t// We request the number of invited users after the share action to see how many users were really invited\n\t\t\tconst results = await Promise.all([shareObject(bindingContext, users), this.requestInvitedUsersInDraft()]);\n\t\t\tconst numberOfNonInvitedUsers = contexts.length - results[1].length;\n\t\t\tnumberOfNewInvitedUsers -= numberOfNonInvitedUsers;\n\t\t\tconst messageHandler = this.getPageController()!.messageHandler;\n\t\t\tawait messageHandler.showMessageDialog();\n\n\t\t\tswitch (numberOfNewInvitedUsers) {\n\t\t\t\tcase 0:\n\t\t\t\t\tMessageToast.show(\n\t\t\t\t\t\tthis.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_SUCCESS_TOAST_NO_USER\", [\n\t\t\t\t\t\t\tthis.getSharedItemName(bindingContext)\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tMessageToast.show(\n\t\t\t\t\t\tthis.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_SUCCESS_TOAST\", [this.getSharedItemName(bindingContext)])\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tMessageToast.show(\n\t\t\t\t\t\tthis.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_SUCCESS_TOAST_PLURAL\", [\n\t\t\t\t\t\t\tnumberOfNewInvitedUsers.toString(),\n\t\t\t\t\t\t\tthis.getSharedItemName(bindingContext)\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t}\n\t\t} catch {\n\t\t\tMessageToast.show(this.getTranslatedText(\"C_COLLABORATIONDRAFT_INVITATION_FAILED_TOAST\"));\n\t\t}\n\t\tthis.closeManageDialog();\n\t};\n\n\t/**\n\t * Fetches the list of users that are already invited in the draft.\n\t * @returns Promise with the list of user contexts.\n\t */\n\tprivate async requestInvitedUsersInDraft(): Promise<Context[]> {\n\t\tconst model = this.getModel();\n\t\tconst parameters = {\n\t\t\t$select: \"UserID,UserDescription,UserEditingState\"\n\t\t};\n\t\tconst invitedUserList = model?.bindList(\n\t\t\t\"DraftAdministrativeData/DraftAdministrativeUser\",\n\t\t\tthis.getBindingContext()!,\n\t\t\t[],\n\t\t\t[],\n\t\t\tparameters\n\t\t) as ODataListBinding;\n\n\t\t// for now we set a limit to 100. there shouldn't be more than a few\n\t\treturn invitedUserList.requestContexts(0, 100);\n\t}\n\n\t/**\n\t * Reads the currently invited user and store it in the internal model.\n\t * @returns Promise that is resolved once the users are read.\n\t */\n\treadInvitedUsers = async (): Promise<void> => {\n\t\tconst internalModelContext = this.getBindingContext(\"internal\") as InternalModelContext;\n\n\t\ttry {\n\t\t\tconst currentUserList = await this.requestInvitedUsersInDraft();\n\t\t\tconst invitedUsers: User[] = [];\n\t\t\tconst activeUsers = this.getModel(\"internal\")?.getProperty(\"/collaboration/activeUsers\") || [];\n\t\t\tconst me = CollaborationUtils.getMe(this.getAppComponent()!);\n\t\t\tlet userStatus: UserStatus;\n\t\t\tif (currentUserList.length > 0) {\n\t\t\t\tcurrentUserList.forEach((userContext) => {\n\t\t\t\t\tconst userData = userContext.getObject() as BackendUser;\n\t\t\t\t\tconst isMe: boolean = me?.id === userData.UserID;\n\t\t\t\t\tconst isActive = activeUsers.find((u: User) => u.id === userData.UserID);\n\t\t\t\t\tlet userDescription = userData.UserDescription || userData.UserID;\n\t\t\t\t\tconst initials = CollaborationUtils.formatInitials(userDescription);\n\t\t\t\t\tuserDescription = isMe ? `${CollaborationUtils.getText(\"C_COLLABORATIONDRAFT_ME\", userDescription)}` : userDescription;\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\tuserStatus = UserStatus.CurrentlyEditing;\n\t\t\t\t\t} else if (userData.UserEditingState === UserEditingState.InProgress) {\n\t\t\t\t\t\tuserStatus = UserStatus.ChangesMade;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuserStatus = UserStatus.NoChangesMade;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst user: User = {\n\t\t\t\t\t\tid: userData.UserID,\n\t\t\t\t\t\tname: userDescription,\n\t\t\t\t\t\tstatus: userStatus,\n\t\t\t\t\t\tcolor: CollaborationUtils.getUserColor(userData.UserID, activeUsers, invitedUsers),\n\t\t\t\t\t\tinitials: initials,\n\t\t\t\t\t\tme: isMe\n\t\t\t\t\t};\n\t\t\t\t\tinvitedUsers.push(user);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//not yet shared, just add me\n\t\t\t\tinvitedUsers.push(me);\n\t\t\t}\n\t\t\tinternalModelContext.setProperty(\"collaboration/UserID\", \"\");\n\t\t\tinternalModelContext.setProperty(\"collaboration/UserDescription\", \"\");\n\t\t\tinternalModelContext.setProperty(\"collaboration/invitedUsers\", invitedUsers);\n\t\t} catch (e) {\n\t\t\tMessageToast.show(this.getTranslatedText(\"C_COLLABORATIONDRAFT_READING_USER_FAILED\"));\n\t\t}\n\t};\n\n\t/**\n\t * Get the name of the object to be shared.\n\t * @param bindingContext The context of the page.\n\t * @returns The name of the object to be shared.\n\t */\n\tgetSharedItemName(bindingContext: Context): string {\n\t\tconst headerInfo = this.contextObject?.targetEntityType.annotations.UI?.HeaderInfo;\n\t\tlet sharedItemName = \"\";\n\t\tconst title = headerInfo?.Title;\n\t\tif (\n\t\t\ttitle &&\n\t\t\tisAnnotationOfType<DataFieldTypes>(title, [\n\t\t\t\tUIAnnotationTypes.DataField,\n\t\t\t\tUIAnnotationTypes.DataFieldWithAction,\n\t\t\t\tUIAnnotationTypes.DataFieldWithActionGroup,\n\t\t\t\tUIAnnotationTypes.DataFieldWithNavigationPath,\n\t\t\t\tUIAnnotationTypes.DataFieldWithIntentBasedNavigation,\n\t\t\t\tUIAnnotationTypes.DataFieldWithUrl,\n\t\t\t\tUIAnnotationTypes.DataFieldWithNavigationPath\n\t\t\t])\n\t\t) {\n\t\t\tsharedItemName = isPathAnnotationExpression(title.Value) ? bindingContext.getProperty(title.Value.path) : title.Value;\n\t\t}\n\t\treturn sharedItemName || (headerInfo?.TypeName as unknown as string) || \"\";\n\t}\n\n\t/**\n\t * Generates the delegate payload for the user field value help.\n\t * @returns The value help delegate payload\n\t */\n\tgetValueHelpDelegate(): { name: string; payload: ValueHelpPayload } {\n\t\t// The non null assertion is safe here, because the action is only available if the annotation is present\n\t\tconst actionName = (\n\t\t\tthis.contextObject?.targetEntitySet!.annotations.Common as EntitySetAnnotations_Common\n\t\t).DraftRoot!.ShareAction!.toString();\n\t\t// We are also sure that the action exist\n\t\tconst action = this.contextObject?.targetEntityType.resolvePath(actionName) as VocabularyAction;\n\t\t// By definition the action has a parameter with the name \"Users\"\n\t\tconst userParameters = action.parameters.find((param) => param.name === USERS_PARAMETERS)!;\n\n\t\treturn {\n\t\t\tname: \"sap/fe/macros/valuehelp/ValueHelpDelegate\",\n\t\t\tpayload: {\n\t\t\t\tpropertyPath: `/${userParameters.type}/${USER_ID_PARAMETER}`,\n\t\t\t\tqualifiers: {},\n\t\t\t\tvalueHelpQualifier: \"\",\n\t\t\t\tisActionParameterDialog: true\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Generate the expression binding of the Invitation dialog.\n\t * @returns The dialog title binding expression\n\t */\n\tgetInvitationDialogTitleExpBinding(): CompiledBindingToolkitExpression {\n\t\tconst headerInfo = this.contextObject?.targetEntityType.annotations.UI?.HeaderInfo;\n\t\tconst title = getExpressionFromAnnotation((headerInfo?.Title as DataField | undefined)?.Value, [], \"\");\n\t\tconst params = [\"C_COLLABORATIONDRAFT_INVITATION_DIALOG\", headerInfo?.TypeName.toString(), title];\n\t\tconst titleExpression = formatResult(params, collaborationFormatter.getFormattedText);\n\t\treturn compileExpression(titleExpression);\n\t}\n\n\t/**\n\t * Event handler to close the manage dialog.\n\t *\n\t */\n\tcloseManageDialog = (): void => {\n\t\tthis.manageDialog?.close();\n\t\tthis.manageDialog?.destroy();\n\t\tdelete this.manageDialog;\n\t};\n\n\t/**\n\t * Returns the invite button if there's a share action on root level.\n\t * @returns The control tree\n\t */\n\tgetInviteButton(): HBox {\n\t\tif ((this.contextObject?.targetEntitySet?.annotations.Common as EntitySetAnnotations_Common)?.DraftRoot?.ShareAction) {\n\t\t\treturn (\n\t\t\t\t<HBox visible=\"{ui>/isEditable}\" alignItems=\"Center\" justifyContent=\"Start\">\n\t\t\t\t\t<Avatar backgroundColor=\"TileIcon\" src=\"sap-icon://add-employee\" displaySize=\"XS\" press={this.manageCollaboration} />\n\t\t\t\t</HBox>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <HBox />;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the content of the collaboration draft building block.\n\t * @returns The control tree\n\t */\n\tcreateContent(): Control | undefined {\n\t\tif (this._getOwner()?.getMetaModel() && ModelHelper.isCollaborationDraftSupported(this._getOwner()!.getMetaModel())) {\n\t\t\treturn (\n\t\t\t\t<HBox>\n\t\t\t\t\t<HBox\n\t\t\t\t\t\titems={{ path: \"internal>/collaboration/activeUsers\" }}\n\t\t\t\t\t\tclass=\"sapUiTinyMarginBegin\"\n\t\t\t\t\t\tvisible=\"{= ${ui>/isEditable} &amp;&amp; ${internal>/collaboration/connected} }\"\n\t\t\t\t\t\talignItems=\"Center\"\n\t\t\t\t\t\tjustifyContent=\"Start\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tinitials=\"{internal>initials}\"\n\t\t\t\t\t\t\tdisplaySize=\"XS\"\n\t\t\t\t\t\t\tbackgroundColor=\"{internal>color}\"\n\t\t\t\t\t\t\tpress={this.showCollaborationUserDetails}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</HBox>\n\t\t\t\t\t{this.getInviteButton()}\n\t\t\t\t</HBox>\n\t\t\t);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}