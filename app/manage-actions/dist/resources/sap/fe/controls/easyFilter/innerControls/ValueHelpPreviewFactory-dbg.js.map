{"version":3,"names":["ValueHelpPreviewFactory","_BaseFactory","EFB","token","_this","call","setControl","List","delete","onDelete","bind","mode","ListMode","Delete","showSeparators","ListSeparators","None","_inheritsLoose","_proto","prototype","setItems","items","tokenType","isDateTimeOffset","Utils","areItemsSame","list","getControl","destroyAggregation","ctr","forEach","item","index1","operator","selectedValues","title","isBetweenSelectedValues","mapOperatorForBetweenOperator","insertItem","selectedValue","index2","mapOperatorForValueHelp","mapOperator","indexPositions","addItem","StandardListItem","customData","CustomData","key","value","event","popover","getToken","getCustomDataValue","getParameter","setVisible","focus","normalizeString","str","regex","replace","invokeOkButtonHandler","easyFilterBarContainer","getEasyFilter","getItems","map","JSON","parse","stringify","deepClone","indicesToBeRemoved","listItem","getVisible","Infinity","getCustomData","find","data","getKey","getValue","push","sort","a","b","_ref","objIndex","valueIndex","splice","length","updateTokenArray","close","invokeShowAllButtonHandler","type","valueHelpPromise","Promise","resolve","reject","fireEvent","values","newSelectedValues","error","Error","Log","message","String","invokePopupCloseHandler","BaseFactory"],"sourceRoot":".","sources":["ValueHelpPreviewFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport deepClone from \"sap/base/util/deepClone\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport Utils from \"sap/fe/controls/easyFilter/utils\";\nimport List from \"sap/m/List\";\nimport type { ListBase$DeleteEvent } from \"sap/m/ListBase\";\nimport type Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport { ListMode, ListSeparators } from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type {\n\tBetweenSelectedValues,\n\tCodeListType,\n\tTokenDefinition,\n\tTokenSelectedValuesDefinition,\n\tTokenType,\n\tValueHelpBetweenSelectedValues,\n\tValueHelpSelectedValuesDefinition\n} from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\n\nclass ValueHelpPreviewFactory extends BaseFactory<List> {\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tsuper(EFB, token);\n\t\tthis.setControl(\n\t\t\tnew List({\n\t\t\t\tdelete: this.onDelete.bind(this),\n\t\t\t\tmode: ListMode.Delete,\n\t\t\t\tshowSeparators: ListSeparators.None\n\t\t\t})\n\t\t);\n\t}\n\n\tsetItems(\n\t\titems: ValueHelpSelectedValuesDefinition[] | TokenSelectedValuesDefinition[],\n\t\ttokenType: TokenType,\n\t\tisDateTimeOffset: boolean\n\t): void {\n\t\tif (Utils.areItemsSame(items, this.items as ValueHelpSelectedValuesDefinition[])) {\n\t\t\treturn;\n\t\t}\n\t\tthis.items = items;\n\t\tconst list = this.getControl();\n\t\tlist?.destroyAggregation(\"items\");\n\t\t//Make sure only top 5 values are shown\n\t\tlet ctr = 0;\n\t\titems.forEach((item, index1) => {\n\t\t\tconst { operator, selectedValues } = item;\n\t\t\tlet title = \"\";\n\t\t\t//Currently hardCoding the most number of values that can be shown is 5\n\t\t\t//ValueHelp will have non-fixed values, so its important to limit the number of values to be shown\n\t\t\tif (tokenType === \"ValueHelp\" && ctr < 5) {\n\t\t\t\tif (Utils.isBetweenSelectedValues(operator)) {\n\t\t\t\t\ttitle = Utils.mapOperatorForBetweenOperator(\n\t\t\t\t\t\toperator,\n\t\t\t\t\t\tselectedValues as ValueHelpBetweenSelectedValues,\n\t\t\t\t\t\ttokenType,\n\t\t\t\t\t\tisDateTimeOffset\n\t\t\t\t\t);\n\t\t\t\t\tthis.insertItem(list as List, title, [index1]);\n\t\t\t\t\t++ctr;\n\t\t\t\t} else {\n\t\t\t\t\tselectedValues.forEach((selectedValue, index2) => {\n\t\t\t\t\t\tif (ctr < 5) {\n\t\t\t\t\t\t\ttitle = Utils.mapOperatorForValueHelp(operator, selectedValue as CodeListType, tokenType, isDateTimeOffset);\n\t\t\t\t\t\t\tthis.insertItem(list as List, title, [index1, index2]);\n\t\t\t\t\t\t\t++ctr;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (tokenType !== \"ValueHelp\") {\n\t\t\t\tif (Utils.isBetweenSelectedValues(operator)) {\n\t\t\t\t\ttitle = Utils.mapOperatorForBetweenOperator(\n\t\t\t\t\t\toperator,\n\t\t\t\t\t\tselectedValues as BetweenSelectedValues,\n\t\t\t\t\t\ttokenType,\n\t\t\t\t\t\tisDateTimeOffset\n\t\t\t\t\t);\n\t\t\t\t\t//In this case, we don't need t to store index2, because we know that LLM or VHD always gives you only 2 values in return\n\t\t\t\t\tthis.insertItem(list as List, title, [index1]);\n\t\t\t\t} else {\n\t\t\t\t\tselectedValues.forEach((selectedValue, index2) => {\n\t\t\t\t\t\ttitle = Utils.mapOperator(operator, selectedValue as string | boolean | number | Date, tokenType, isDateTimeOffset);\n\t\t\t\t\t\t//We need to store index2 to find out which item has been removed inside the array\n\t\t\t\t\t\tthis.insertItem(list as List, title, [index1, index2]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tinsertItem(list: List, title: string, indexPositions: number[]): void {\n\t\tlist?.addItem(\n\t\t\tnew StandardListItem({\n\t\t\t\ttitle,\n\t\t\t\tcustomData: new CustomData({\n\t\t\t\t\tkey: \"arrayIndex\",\n\t\t\t\t\tvalue: indexPositions\n\t\t\t\t})\n\t\t\t})\n\t\t);\n\t}\n\n\tonDelete(event: ListBase$DeleteEvent): void {\n\t\tconst popover = this.getToken()?.getCustomDataValue(\"popover\") as Popover;\n\t\tevent.getParameter(\"listItem\")?.setVisible(false);\n\t\tpopover.focus();\n\t}\n\n\tnormalizeString(str: string): string {\n\t\tconst regex = /^(>=|<=|!=|>|<)+/;\n\t\treturn str.replace(regex, \"\");\n\t}\n\n\tinvokeOkButtonHandler(): void {\n\t\tconst popover = this.getToken()?.getCustomDataValue(\"popover\") as Popover;\n\t\tconst token = this.getToken();\n\t\tconst easyFilterBarContainer = this.getEasyFilter() as EasyFilterBarContainer;\n\t\tconst items = token?.getItems()?.map((item) => ({\n\t\t\toperator: JSON.parse(JSON.stringify(item.operator)), // Deep copy of operator\n\t\t\tselectedValues: deepClone(item.selectedValues) // Deep copy of selectedValues, if its a complex object\n\t\t}));\n\t\tconst indicesToBeRemoved: number[][] = [];\n\t\tthis.getControl()\n\t\t\t?.getItems()\n\t\t\t.forEach((listItem) => {\n\t\t\t\t//If the item is hidden that means it should be removed completely\n\t\t\t\tif (!listItem.getVisible()) {\n\t\t\t\t\tconst [index1 = Infinity, index2 = Infinity] =\n\t\t\t\t\t\t(listItem\n\t\t\t\t\t\t\t?.getCustomData()\n\t\t\t\t\t\t\t?.find((data) => data?.getKey() === \"arrayIndex\")\n\t\t\t\t\t\t\t?.getValue() as number[]) ?? [];\n\t\t\t\t\tif (index1 === Infinity || !items) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tindicesToBeRemoved.push([index1, index2]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t/*\n\t\tWithout sorting in descending order:\n\n\t\tRemoving an object would shift all subsequent indices, potentially causing incorrect removals or skips.\n\t\tRemoving values from selectedValues could shift other values, resulting in missed or unintended removals.\n\t\tThis approach ensures that each removal operates on stable, correct indices.\n\n\t\tThis is the reason why we have added valueIndex to infinity\n\t\tInfinity is greater than any valid index, so sorting in descending order will naturally place entries with valueIndex = Infinity at the top for each objIndex.\n\t\tThis way, we can process the complete removal of an object before handling any individual selectedValues removals within that object, preventing unwanted shifts.\n\t\t */\n\t\tindicesToBeRemoved.sort((a, b) => b[0] - a[0] || b[1] - a[1]);\n\n\t\tindicesToBeRemoved.forEach(([objIndex, valueIndex]) => {\n\t\t\tif (items) {\n\t\t\t\t//If valueIndex is infinity, then it means it should be a between operator scenario, so remove the total object only\n\t\t\t\tif (valueIndex === Infinity) {\n\t\t\t\t\titems.splice(objIndex, 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\titems[objIndex].selectedValues.splice(valueIndex, 1);\n\t\t\t\t// If the values array becomes empty, remove the whole object\n\t\t\t\tif (items[objIndex].selectedValues.length === 0) {\n\t\t\t\t\titems.splice(objIndex, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\teasyFilterBarContainer.updateTokenArray(\n\t\t\t\"setSelectedValues\",\n\t\t\titems as TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[],\n\t\t\ttoken?.getKey() as string\n\t\t);\n\t\tpopover.close();\n\t}\n\n\tasync invokeShowAllButtonHandler(): Promise<void> {\n\t\tconst token = this.getToken();\n\t\tconst { type } = token?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tconst key = token?.getKey() as string;\n\t\tconst valueHelpPromise = new Promise<TokenSelectedValuesDefinition[]>((resolve, reject) => {\n\t\t\tthis.getEasyFilter()?.fireEvent(\"showValueHelp\", {\n\t\t\t\tkey,\n\t\t\t\tvalues: token?.getItems()?.map((item: TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition) => {\n\t\t\t\t\tif (type === \"ValueHelp\") {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toperator: item.operator,\n\t\t\t\t\t\t\t//Making sure that only the id part is passed\n\t\t\t\t\t\t\tselectedValues: (item as ValueHelpSelectedValuesDefinition).selectedValues.map(\n\t\t\t\t\t\t\t\t(selectedValue) => selectedValue.value\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tconst newSelectedValues = await valueHelpPromise;\n\t\t\tthis.getEasyFilter()?.updateTokenArray(\"setSelectedValues\", newSelectedValues, key);\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", error.message);\n\t\t\t} else {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", String(error));\n\t\t\t}\n\t\t}\n\t}\n\n\tinvokePopupCloseHandler(): void {\n\t\t//Whatever has been deleted, make them appear again so that they can be visible as soon as you click the token again\n\t\tthis.getControl()\n\t\t\t?.getItems()\n\t\t\t.forEach((item) => item.setVisible(true));\n\t}\n}\n\nexport default ValueHelpPreviewFactory;\n"],"mappings":"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","ignoreList":[],"file":"ValueHelpPreviewFactory-dbg.js"}